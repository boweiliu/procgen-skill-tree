{"version":3,"sources":["lib/util/random.ts","lib/util/fpsTracker.ts","components/DebugOverlayComponent.tsx","data/PlayerIntentState.ts","lib/util/misc.ts","components/KeyboardListenerComponent.tsx","contexts.ts","lib/util/epsilon_math.ts","lib/util/geometry/vector2.ts","pixi/colors.ts","lib/util/data_structures/hash.ts","lib/pixi/pixify.ts","lib/util/batchify.ts","lib/util/updaterGenerator.ts","pixi/components/LifecycleHandler.ts","data/WorldGenState.ts","pixi/components/PointNodeComponent.ts","data/PointNodeRef.ts","pixi/components/ChunkComponent.ts","lib/util/lazy.ts","data/NodeStatus.ts","pixi/components/FixedCameraStageComponent.ts","lib/util/geometry/vector3.ts","game/worldGen/nodeContents/NodeContentsFactory.ts","lib/util/randomHelpers.ts","game/worldGen/nodeContents/NodeContentsRendering.ts","pixi/components/StrategicHexGridComponent.ts","pixi/components/RootComponent.ts","pixi/textures/PointNodeTexture.ts","pixi/textures/SimpleTextures.ts","data/WindowState.ts","pixi/PixiReactBridge.ts","components/PixiWrapperComponent.tsx","components/WindowListenerComponent.tsx","game/lib/HexGrid.ts","data/PlayerSaveState.ts","game/worldGen/LockFactory.ts","game/worldGen/WorldGenStateFactory.ts","game/actions/AllocateNode.ts","components/GameArea/computeVirtualNodeDataMap.tsx","components/Sidebars/DebugTab.tsx","components/Sidebars/StrategicTab.tsx","components/Sidebars/TabContentInterface.tsx","data/PlayerUIState.ts","game/GameStateFactory.ts","data/DebugState.ts","components/GameArea/CssVariables.tsx","components/GameArea/GameAreaCell.tsx","components/GameArea/GameAreaGrid.tsx","components/GameArea/InfiniteScrollManager.tsx","components/GameArea/GameAreaStateManager.tsx","components/GameArea/locationUtils.tsx","components/GameArea/GameAreaInterface.tsx","components/Sidebars/Sidebar.tsx","components/Sidebars/Tabs.tsx","components/Sidebars/SidebarsInterface.tsx","components/PersistenceComponent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["INTMAX32","squirrel3","i","n","Math","imul","FpsTracker","frameTimestampsInTicks","frameTimestampsInTime","this","push","ticksSinceLastUpdate","lastFrameTime","length","logRowsToKeep","slice","Date","getTime","ticksDiff","framesPerTick","timeDiff","framesPerMilli","getFps","toFixed","getUps","DebugOverlayComponent","props","pixiFpsTracker","useRef","useEffect","current","tick","className","windowState","innerWidth","innerHeight","ReactFps","getFpsString","useState","counter","setCounter","reactFpsTracker","timer","setTimeout","it","clearTimeout","fpsString","useMemo","IntentName","Util","list","fn","lowestT","lowestValue","item","value","obj","highestT","highestValue","low","high","floor","random","array","key","sort","a","b","str","mapObj","re","RegExp","Object","keys","join","replace","matched","toLowerCase","func","timeoutId","waitMilliseconds","options","isImmediate","result","args","doLater","undefined","apply","shouldCallNow","d","monthName","getMonth","getDate","getHours","substr","getMinutes","getSeconds","arr","concat","string","intersperse","character","repeat","multiplyColor","color1","color2","reds","blues","greens","out","round","addColor","min","interpolateColor","arg2","arg3","hasOwnProperty","_interpolateColor","_args","target","color","proportion","opacity","base","background","Error","extractAccessPaths","deepFilter","accessPaths","proxyHandler","get","p","receiver","newPath","path","toString","Proxy","extractDeps","t","map","accessPath","ref","enm","noIntent","reduce","object","newPlayerIntentState","activeIntent","newIntent","endedIntent","defaultKeyIntentConfig","w","PAN_NORTH","PAN_WEST","s","PAN_SOUTH","PAN_EAST","k","h","j","l","m","TOGGLE_STRATEGIC_VIEW","TOGGLE_SIDEBAR","ArrowUp","MOVE_CURSOR_NORTH","ArrowLeft","MOVE_CURSOR_WEST","ArrowDown","MOVE_CURSOR_SOUTH","ArrowRight","MOVE_CURSOR_EAST","INTERACT_WITH_NODE","TRAVEL_UPSTAIRS","TRAVEL_DOWNSTAIRS","KeyboardListenerComponent","handleKeydown","e","configuredIntent","state","keyIntentConfig","isTextBoxFocused","console","log","preventDefault","NOOP","updaters","enqueueUpdate","handleKeyup","document","addEventListener","removeEventListener","React","Component","UseGameStateContext","createContext","EPSILON","Vector2","propsOrX","x","y","_x","_y","abs","max","dx","dy","sqrt","newX","newY","about","amount","origin","angle","PI","cos","sin","other","__type","trans","scale","error","add","tx","ty","lerp","highX","highY","lowX","lowY","RandRange","JSON","stringify","SerializeToObject","Zero","One","COLORS","backgroundBlue","nodePink","nodeLavender","nodeBlue","nodeAqua","gateTint","selectedTint","allocatedTint","nodeBorder","nullTint","tooltipBorderBlack","tooltipFillWhite","white","grayBlack","borderBlack","borderWhite","black","textWhite","colorToCss","c","HashSet","initialValues","_values","HashMap","put","remove","contains","values","clone","size","hash","KeyedHashMap","_kvalues","hashCode","pv","cv","charCodeAt","PixiPointFrom","Pixi","batchifySetState","batch","arg","thisBatch","prev","next","valueOrCallback","updaterGenerator2Helper","dataObject","dataUpdater","forEach","newValueOrCallback","oldData","wholeData","newKey","updaterGenerator2","setState","stateCallbackFunction","ChildrenArray","indexOf","instance","removed","splice","findIndex","find","cloned","callbackfn","LifecycleHandlerBase","container","_staleProps","_children","_childrenToConstruct","_childrenToDestruct","_forceUpdates","markForceUpdate","childInstance","childInfo","child","childClass","propsFactory","addChild","renderSelf","didMount","self","initialState","batchedSetState","fireStateUpdaters","stateUpdaters","nextProps","_update","staleState","updateSelf","shouldUpdate","forceUpdates","didForceUpdateChild","didForceUpdate","updateChildren","_updateChildren","Promise","resolve","didUpdate","willUnmount","removeChild","engageLifecycle","derived","construct","_didConstruct","newTarget","Reflect","NodeType","ResourceNontrivialType","ResourceModifier","ChunkGenConstants","CHUNK_HALF_DIM","CHUNK_DIM","DROP_NODES_CHANCE","wrapped","sprite","halfwayCenterSprite","centerSprite","topHalfSprite","hitArea","tooltippableArea","numClicks","descriptionText","defaultTexture","pointNodeTexture","cropFraction","texture","sortableChildren","anchor","zIndex","pointNodeGen","nodeType","EfficiencyGate","mask","beginFill","drawRect","width","height","pivot","alpha","interactive","buttonMode","RenderedChunkConstants","NODE_HITAREA_PX","nodeDescription","Nothing","resourceAmount","resourceModifier","resourceType","tint","centerTint","position","isSelected","isAllocated","baseColor","topHalfColor","Mana0","Flat","Increased0","textureToFind","selfPointNodeRef","pointNodeCoord","equals","staleProps","addListener","event","localPosition","data","getLocalPosition","worldTransform","tooltipUpdaters","visible","text","PointNodeRef","z","chunkCoord","pointNodeId","SPACING_PX","CHUNK_SPACING_PX","NODE_SIZE_PX","NODE_ROUNDED_PX","children","resyncChildren","prevProps","prevState","childrenToDelete","chunkGen","pointNodes","entries","pointNodeRef","selfChunkRef","id","childPropsFactory","delta","multiply","selectedPointNode","allocatedPointNodeSubset","childKey","childComponent","PointNodeComponent","Lazy","factory","_wasConstructed","_value","_factory","NodeAllocatedStatus","BoolEnum","LazyHashMap","newFactory","LockStatus","NodeTakenStatus","true","taken","false","NodeVisibleStatus","NodeReachableStatus","reachable","Vector3","_z","pOrX","newZ","Attribute","Modifier","randomSwitch","randInt","weights","behaviors","newRandInt","unusedWeight","weight","randomValue","randomUniform","increment","inclusive","numBuckets","ceil","WEIGHTS","DECISION_0","EMPTY","NO_SPEND","SPEND","DECISION_1","SINGLE","DOUBLE","SINGLE_COLORS","RED0","RED1","RED2","DEL0","DEL1","DEL2","SINGLE_MODIFIERS","FLAT","INCREASED","NodeContentsFactory","config","attribute","modifier","formula","plus","numDice","parseInt","split","numPips","val","randomDice","lines","createSingle","seed","location","createNoSpend","condition","type","AttributeSymbolMap","AttributeDescriptionMap","AttributeDescriptionReverseMap","Red","Green","Blue","Offense","Defense","Magic","ModifierSymbolMap","ModifierDescriptionMap","ModifierDescriptionReverseMap","flat","increased","nodeContentsLineToString","line","extractStrategicHexGridSubState","gameState","playerUI","virtualGridLocation","cursoredNodeLocation","strategicSearch","playerSave","allocationStatusMap","computed","fogOfWarStatusMap","reachableStatusMap","lockStatusMap","worldGen","nodeContentsMap","lockMap","depsStrategicHexGridSubState","graphics","hexGrid","animations","textures","circle","appSize","divide","v","animation","newPhase","phase","periodSecs","bezierX","tintProp","basePosition","virtualLocation","FromVector2","nodeVisibleStatus","nodeTakenStatus","nodeReachableStatus","lockData","lockStatus","OPEN","rect","matchStrategicSearch","nodeContents","query","mode","staleGameState","staleDeps","deps","terms","highlight1","filter","wrappedTerm","unmatchedTerm","term","maybeAttribute","maybeModifier","fixedCameraStage","actionStage","backdropStage","strategicHexGrid","backdrop","renderer","textureSet","g","drawRoundedRect","generateTexture","LINEAR","generatePointNodeTexture","simpleTexture","drawCircle","square","generateSimpleTextures","playerCurrentZ","tooltip","fixedCameraStagePropsFactory","FixedCameraStageComponent","strategicHexGridPropsFactory","StrategicHexGridComponent","newWindowState","orientation","window","appSizeFromWindowSize","Infinity","PixiReactBridge","app","rootComponent","onTick","isSecondConstructorCall","originalAppSize","antialias","transparent","resolution","devicePixelRatio","autoDensity","powerPreference","backgroundColor","ticker","destroy","baseTexture","baseGameLoop","bind","curr","appendChild","view","futureProps","RootComponent","stage","resize","isPixiHidden","fireBatch","update","initialApplication","PixiWrapperComponent","application","useContext","gameStateUpdaters","fireBatchedSetGameState","childNodes","rerender","hidden","style","Direction","WindowListenerComponent","handleWindowResize","old","newPlayerSaveState","activeQuest","spSpentThisQuest","questProgressHistory","questInitialAmount","score","getCoordNeighbors","neighbors","EAST","addX","WEST","NORTHWEST","addY","SOUTHEAST","NORTHEAST","SOUTHWEST","getWithinDistance","maxDistance","minDistance","disallowedSet","touched","disallowedButTouched","byDist","vec","considering","dd","LockFactory","shortTextTarget","shortTextTimer","TICKING","storageKey","WorldGenStateFactory","mySeed","lockFactory","lockDataMap","create","nodeContentsFactory","loaded","load","serialize","localStorage","setItem","getItem","deserialize","deserializeFromObject","parse","serializeToObject","AllocateNodeAction","input","nodeLocation","newStatus","prevMap","prevGameState","maybeLock","precompute","STARTING_NODE_DESCRIPTION","computeNodeReactData","fogOfWarStatus","reachableStatus","takenStatus","nodeStatus","TAKEN","AVAILABLE","UNREACHABLE","HIDDEN","shortText1","shortText2","shortText","toolTipText","fullText","status","DebugTabContent","lastUpdated","setLastUpdated","slowRenderMsgs","setSlowRenderMsgs","now","msSinceLastTick","msg","toTimeString","virtualGridDimsTrigger","useCallback","debug","retriggerVirtualGridDims","toggleScrollbars","debugShowScrollbars","gameAreaGridRerender","rerenderGameAreaGrid","onDisableScrollJump","enableScrollJump","onEnableScrollJump","forceVirtualGridJump","getForceJumpOffset","addDebugOffsetX","getOffsetX","offsetX","flipCursored","isFlipCursored","toggleTextBoxFocused","saveLocalStorage","PlayerUIState","store","loadLocalStorage","clearLocalStorage","clear","justDisabledSave","idx","onClick","TAB_NAME","StrategicTab","memo","StrategicTabComponent","showAdvancedSearch","setShowAdvancedSearch","highlightInputValue","setHighlightInputValue","onFocus","onBlur","onFireSearch","onCancelSearch","SymbolButton","updateTextInputValue","TextInputButton","icon","insertedText","onChange","onMouseDown","onPointerDown","TabContentInterface","tabName","tabComponents","EmptyTabContent","SELECTED_NODE","SelectedNodeTabContent","STATS","QUESTS","STRATEGIC_VIEW","DEBUG","HELP","TabContentSelector","selectedTabName","tabNames","EmptyTabContentComponent","SelectedNodeTabContentComponent","description","xyCoords","visibleStatus","initialTabLabels","left","right","newPlayerUIState","tabs","activeIndex","isSidebarOpen","Deserialize","new","tryLoad","DEFAULT_SEED","GameStateFactory","worldGenStateFactory","intent","loadComputed","prevReachableStatusMap","CssVariablesComponent","hexGridPx","borderWidth","hexCenterRadius","documentElement","setProperty","GameAreaCell","GameAreaCellComponent","onUpdateStatus","nodeData","isCursored","onUpdateCursored","debugIsCursored","handleClick","stopPropagation","handleClickQuestionMark","Cell","onClickCenter","onClickQuestionMark","CellComponent","isLocked","hovered","setHovered","onHover","onUnhover","classnames","onPointerEnter","onPointerLeave","extractGameGridSubState","depsGameGridSubState","GameAreaGrid","virtualGridDims","virtualCoordsToLocation","updateNodeStatusByLocationCb","cursoredVirtualNode","setCursoredLocation","startTime","nodeReactDataMap","Array","fill","_","Row","rowIdx","virtualCoords","elapsed","RowComponent","odd","InfiniteScrollManager","keyboardScrollDirection","previousContainer","jumpOffset","setJumpOffset","scrollTop","scrollLeft","scrollTo","handleJump","locationOffset","direction","newJumpOffset","handleScroll","newScrollTop","newScrollLeft","lastTime","action","interval","setInterval","clearInterval","onScroll","GameAreaStateManager","virtualCenter","offsetFromVirtualCenter","subtract","relativeLocation","convertVirtualCoordsToLocation","locationToVirtualCoords","offsetFromVirtualGridLocation","relativeVirtualCoords","convertLocationToVirtualCoords","handleUpdateNodeStatusByLocation","actions","allocateNode","enqueueAction","handleUpdateNodeStatus","cursoredVirtualNodeCoords","newLocation","MOVE_CURSOR_NORTHEAST","MOVE_CURSOR_NORTHWEST","MOVE_CURSOR_SOUTHEAST","MOVE_CURSOR_SOUTHWEST","infiniteScrollManagerDebug","gameAreaGridDebug","subGameState","extractGameAreaSubState","depsGameAreaSubState","GameAreaInterface","onDebugRetrigger","Sidebar","placement","Tabs","labels","label","Tab","active","TabComponent","emptyTabLabels","SidebarsInterface","setLeftSidebarHidden","setLeftSidebarUnhidden","setRightSidebarHidden","setRightSidebarUnhidden","tabsState","tabsUpdaters","leftSidebarTabs","rightSidebarTabs","leftActiveTabIndex","rightActiveTabIndex","setLeftSidebarTabs","setRightSidebarTabs","setLeftActiveTabIndex","setRightActiveTabIndex","onSendTabLeft","currentRightTab","newRightSidebarTabs","newLeftSidebarTabs","onSendTabRight","currentLeftTab","leftTabName","rightTabName","PersistenceComponent","onUnload","onbeforeunload","initialGameState","loadOrCreate","App","setGameState","batchedSetGameState","gameStateContextValue","Provider","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.7a93371d.chunk.js","sourcesContent":["import crypto from 'crypto';\n\n/**\n * NOTE(bowei): we use a hash function that is NOT md5 -\n * Either https://github.com/sublee/squirrel3-python/blob/master/squirrel3.py or https://github.com/svaarala/duktape/blob/master/misc/splitmix64.c works fine and is much faster\n * Reference: https://www.youtube.com/watch?v=e4b--cyXEsM or https://www.youtube.com/watch?v=LWFzPP8ZbdU\n * TODO(bowei): port bigint to wasm for faster 64bit operations\n */\n\n// NOTE(bowei): untested\nexport function splitmix64(seed: bigint, i: bigint) {\n  let z: bigint = seed + i * BigInt('0x9e3779b97f4a7c15');\n  z = (z ^ (z >> BigInt(30))) * BigInt('0xBF58476D1CE4E5B9');\n  z = (z ^ (z >> BigInt(27))) * BigInt(0x94d049bb133111eb);\n  return z ^ (z >> BigInt(31));\n}\n\nexport const INTMAX32 = 2 ** 32;\nexport function squirrel3(i: number) {\n  let n = (i + INTMAX32) % INTMAX32;\n  n = Math.imul(n, 0xb5297a4d);\n  n ^= n >>> 8;\n  n += 0x68e31da4;\n  n ^= n << 8;\n  n = Math.imul(n, 0x1b56c4e9);\n  n ^= n >>> 8;\n  return (n + INTMAX32) % INTMAX32;\n}\nexport const PRIME32 = 0x3233f2cd; // not used ; useful for hashing integers; a 32 bit prime\n\n/**\n * Md5 is 16 bytes, or max int of 256 ** 16 = 2 ** 128\n */\nexport class HashState {\n  private seed!: Buffer;\n\n  /**\n   * HashState().step(\"foo\") is equivalent to HashState(\"foo\")\n   */\n  constructor(seed?: string) {\n    const buffer = crypto\n      .createHash('md5')\n      .update((seed || '').toString())\n      .digest();\n    this.seed = buffer;\n  }\n\n  public peekRandom(): number {\n    const buffer = crypto.createHash('md5').update(this.seed).digest();\n    return Number(this.bufferToBigInt(buffer) % BigInt(2 ** 32)) % 2 ** 32;\n  }\n\n  // increment the seed linearly by 1\n  public step(numSteps: number = 1) {\n    this.seed = this.bigIntToBuffer(this.bufferToBigInt(this.seed) + BigInt(1));\n  }\n\n  public stepSeed(seed: string) {\n    const buffer = crypto.createHash('md5').update(seed.toString()).digest();\n    this.seed = this.bigIntToBuffer(\n      this.bufferToBigInt(this.seed) + this.bufferToBigInt(buffer)\n    );\n  }\n\n  private bigIntToBuffer(b: bigint): Buffer {\n    let buf = Buffer.alloc(16);\n    let val = b;\n    for (let i = 0; i < 16; i++) {\n      buf[i] = Number(val % BigInt(256));\n      val = val / BigInt(256);\n    }\n    return buf;\n  }\n\n  private bufferToBigInt(b: Buffer): bigint {\n    let val = BigInt(0);\n    for (let i = 0; i < 16; i++) {\n      val = val * BigInt(256) + BigInt(b[i]);\n    }\n    return val;\n  }\n\n  public random(): number {\n    this.step();\n    return this.peekRandom();\n  }\n}\n","const logRowsToKeep: number = 60; // last 1 seconds, at 60 fps\n\n/**\n * See https://www.npmjs.com/package/pixi-fps https://github.com/jkanchelov/pixi-fps\n */\nexport class FpsTracker {\n  private frameTimestampsInTicks: any[] = [];\n  private frameTimestampsInTime: any[] = [];\n\n  constructor() {\n    this.frameTimestampsInTicks.push(0);\n    // this.frameTimestampsInTime.push((new Date()).getTime());\n  }\n\n  /**\n   * @param ticksSinceLastUpdate should be the delta in ticks since the last update - will probably be a decimal close to 1\n   */\n  public tick(ticksSinceLastUpdate: number) {\n    let lastFrameTime = this.frameTimestampsInTicks[\n      this.frameTimestampsInTicks.length - 1\n    ];\n    this.frameTimestampsInTicks.push(lastFrameTime + ticksSinceLastUpdate);\n\n    // rotate logs\n    if (this.frameTimestampsInTicks.length > logRowsToKeep + 60) {\n      this.frameTimestampsInTicks = this.frameTimestampsInTicks.slice(60);\n    }\n\n    // do the same but track real time\n    this.frameTimestampsInTime.push(new Date().getTime());\n    if (this.frameTimestampsInTime.length > logRowsToKeep + 60) {\n      this.frameTimestampsInTime = this.frameTimestampsInTime.slice(60);\n    }\n  }\n\n  // [0, 3, 4] -> 30 fps\n  public getUps(): number {\n    let ticksDiff =\n      this.frameTimestampsInTicks[this.frameTimestampsInTicks.length - 1] -\n      this.frameTimestampsInTicks[0];\n    let framesDiff = this.frameTimestampsInTicks.length - 1;\n\n    let framesPerTick = framesDiff / ticksDiff;\n    if (!framesPerTick) {\n      return 60;\n    }\n\n    return framesPerTick * 60;\n  }\n\n  public getFps(): number {\n    let timeDiff =\n      this.frameTimestampsInTime[this.frameTimestampsInTime.length - 1] -\n      this.frameTimestampsInTime[0];\n    let framesDiff = this.frameTimestampsInTime.length - 1;\n\n    let framesPerMilli = framesDiff / timeDiff;\n    if (!framesPerMilli) {\n      return 60;\n    }\n\n    return framesPerMilli * 1000;\n  }\n\n  public getFpsString(): string {\n    let fpsNumber = this.getFps();\n\n    return fpsNumber.toFixed(1);\n  }\n\n  public getUpsString(): string {\n    let upsNumber = this.getUps();\n\n    return upsNumber.toFixed(1);\n  }\n}\n","import './DebugOverlayComponent.css';\n\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { FpsTracker } from '../lib/util/fpsTracker';\nimport { WindowState } from '../data/WindowState';\n\n/**\n * Small overlay in the top left which displays window dimensions and fps.\n */\nexport function DebugOverlayComponent(props: {\n  tick: number;\n  windowState: WindowState;\n}) {\n  const pixiFpsTracker = useRef(new FpsTracker());\n  useEffect(() => {\n    pixiFpsTracker.current.tick(0);\n  }, [props.tick]);\n\n  return (\n    <div className=\"text\">\n      <div>\n        {props.windowState.innerWidth}x{props.windowState.innerHeight}\n      </div>\n      <ReactFps />\n      <div>UPS: {pixiFpsTracker.current.getFpsString()}</div>\n    </div>\n  );\n}\n\nfunction ReactFps() {\n  const [counter, setCounter] = useState(0);\n  const reactFpsTracker = useRef(new FpsTracker());\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setCounter((it) => it + 1);\n      reactFpsTracker.current.tick(0);\n    }, 5); // try to refresh every 5 millis\n    return () => clearTimeout(timer);\n  }, [counter]);\n\n  const fpsString = useMemo(() => {\n    if (counter >= 0) {\n      return reactFpsTracker.current.getFpsString();\n    }\n    return '';\n  }, [counter]);\n\n  return <div>RPS: {fpsString}</div>;\n}\n","import { enumKeys } from '../lib/util/misc';\n\n/**\n * Player intents == what they want to do when they press certain mouse/keyboard keys. This is decoupled\n * from their actual keyboard keys to make remapping easier.\n */\n\nexport type PlayerIntentState = {\n  activeIntent: Intent;\n  newIntent: Intent;\n  endedIntent: Intent;\n};\n\nexport type Intent = {\n  [name in IntentName]: boolean;\n};\n\nexport enum IntentName {\n  // Default intent - does nothing\n  NOOP = 'NOOP',\n\n  PAN_NORTH = 'PAN_NORTH',\n  PAN_SOUTH = 'PAN_SOUTH',\n  PAN_WEST = 'PAN_WEST',\n  PAN_EAST = 'PAN_EAST',\n  TRAVEL_UPSTAIRS = 'TRAVEL_UPSTAIRS',\n  TRAVEL_DOWNSTAIRS = 'TRAVEL_DOWNSTAIRS',\n\n  TOGGLE_STRATEGIC_VIEW = 'TOGGLE_STRATEGIC_VIEW',\n  TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR',\n\n  MOVE_CURSOR_WEST = 'MOVE_CURSOR_WEST',\n  MOVE_CURSOR_EAST = 'MOVE_CURSOR_EAST',\n  MOVE_CURSOR_NORTH = 'MOVE_CURSOR_NORTH',\n  MOVE_CURSOR_SOUTH = 'MOVE_CURSOR_SOUTH',\n  MOVE_CURSOR_NORTHWEST = 'MOVE_CURSOR_NORTHWEST',\n  MOVE_CURSOR_NORTHEAST = 'MOVE_CURSOR_NORTHEAST',\n  MOVE_CURSOR_SOUTHWEST = 'MOVE_CURSOR_SOUTHWEST',\n  MOVE_CURSOR_SOUTHEAST = 'MOVE_CURSOR_SOUTHEAST',\n\n  INTERACT_WITH_NODE = 'INTERACT_WITH_NODE',\n}\n\nexport const noIntent = enumKeys(IntentName).reduce((object: Intent, key) => {\n  object[key] = false;\n  return object;\n}, {} as Intent);\n\nexport const newPlayerIntentState = (): PlayerIntentState => {\n  return {\n    activeIntent: noIntent,\n    newIntent: noIntent,\n    endedIntent: noIntent,\n  };\n};\n","let lastUsedId = 0;\n\nexport const getUniqueID = () => {\n  return lastUsedId++;\n};\n\nexport class Util {\n  static MinBy<T>(list: T[], fn: (T: T) => number): T | null {\n    let lowestT: T | null = null;\n    let lowestValue: number | null = null;\n\n    for (const item of list) {\n      const value = fn(item);\n\n      if (lowestValue === null || value < lowestValue) {\n        lowestT = item;\n        lowestValue = value;\n      }\n    }\n\n    return lowestT;\n  }\n\n  static MinByAndValue<T>(\n    list: T[],\n    fn: (T: T) => number\n  ): { obj: T; value: number } | null {\n    let lowestT: T | null = null;\n    let lowestValue: number | null = null;\n\n    for (const item of list) {\n      const value = fn(item);\n\n      if (lowestValue === null || value < lowestValue) {\n        lowestT = item;\n        lowestValue = value;\n      }\n    }\n\n    return lowestT === null || lowestValue === null\n      ? null\n      : { obj: lowestT, value: lowestValue };\n  }\n\n  static MaxBy<T>(list: T[], fn: (T: T) => number): T | null {\n    let highestT: T | null = null;\n    let highestValue: number | null = null;\n\n    for (const item of list) {\n      const value = fn(item);\n\n      if (highestValue === null || value > highestValue) {\n        highestT = item;\n        highestValue = value;\n      }\n    }\n\n    return highestT;\n  }\n\n  static RandRange(low: number, high: number): number {\n    return Math.floor(Math.random() * (high - low) + low);\n  }\n\n  public static SortByKey<T>(array: T[], key: (x: T) => number): T[] {\n    return array.sort((a, b) => {\n      return key(a) - key(b);\n    });\n  }\n\n  public static ReplaceAll(\n    str: string,\n    mapObj: { [key: string]: string }\n  ): string {\n    const re = new RegExp(Object.keys(mapObj).join('|'), 'gi');\n\n    return str.replace(re, (matched) => {\n      return mapObj[matched.toLowerCase()];\n    });\n  }\n\n  public static Debounce<F extends (...args: any[]) => void>(\n    func: F,\n    waitMilliseconds = 50,\n    options = {\n      isImmediate: false,\n    }\n  ): F {\n    let timeoutId: any; // types are different on node vs client, so we have to use any.\n\n    const result = (...args: any[]) => {\n      const doLater = () => {\n        timeoutId = undefined;\n        if (!options.isImmediate) {\n          func.apply(this, args);\n        }\n      };\n\n      const shouldCallNow = options.isImmediate && timeoutId === undefined;\n\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(doLater, waitMilliseconds);\n\n      if (shouldCallNow) {\n        func.apply(this, args);\n      }\n    };\n\n    return result as any;\n  }\n\n  public static FormatDate(d: Date): string {\n    const monthName = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ][d.getMonth()];\n\n    return `${monthName} ${d.getDate()}, ${('00' + d.getHours()).substr(-2)}:${(\n      '00' + d.getMinutes()\n    ).substr(-2)}:${('00' + d.getSeconds()).substr(-2)}`;\n  }\n\n  public static FlattenByOne<T>(arr: T[][]): T[] {\n    let result: T[] = [];\n\n    for (const obj of arr) {\n      result = result.concat(obj);\n    }\n\n    return result;\n  }\n\n  public static PadString(\n    string: string,\n    length: number,\n    intersperse = '',\n    character = ' '\n  ) {\n    return string + intersperse + character.repeat(length - string.length);\n  }\n}\n\n/**\n * A deep readonly type - given an object type, all subobjects and their subobjects are also marked as readonly.\n */\nexport type Const<T> = T extends Function\n  ? T\n  : {\n      readonly [P in keyof T]: T[P] extends { [k: string]: any }\n        ? Const<T[P]>\n        : T[P];\n    };\n\nconst assertOnlyCalledOnceData: { [k: string]: [string, number] } = {};\n\n/**\n * Asserts that a function is not called more than twice. Useful for debugging react lifecycle which may be creating more objects than you realize, impacting performance.\n * @param id identifier\n */\nexport function assertOnlyCalledOnce(id: string | number) {\n  let k = id.toString();\n  if (assertOnlyCalledOnceData[k] !== undefined) {\n    if (assertOnlyCalledOnceData[k][1] === 1) {\n      assertOnlyCalledOnceData[k][1] = 2;\n    } else {\n      throw new Error(\n        'Error, called more than twice with same id: ' +\n          k +\n          ' , callback the first time was : ' +\n          assertOnlyCalledOnceData[k]\n      );\n    }\n  } else {\n    const stacktrace = new Error().stack!;\n    assertOnlyCalledOnceData[k] = [stacktrace, 1];\n  }\n}\n\n/**\n * Multiplies colors (0xFFFFFF === 1). use for applying tints manually.\n * @param color1 A base color\n * @param color2 A tint\n */\nexport function multiplyColor(color1: number, color2: number): number {\n  let reds = [color1 & 0xff0000, color2 & 0xff0000];\n  let blues = [color1 & 0x0000ff, color2 & 0x0000ff];\n  let greens = [color1 & 0x00ff00, color2 & 0x00ff00];\n  let out = Math.round(((reds[0] / 0x010000) * reds[1]) / 0xffffff) * 0x010000;\n  out += Math.round(((greens[0] / 0x000100) * greens[1]) / 0x00ff00) * 0x000100;\n  out += Math.round((blues[0] * blues[1]) / 0x0000ff);\n  return out;\n}\n\nexport function addColor(color1: number, color2: number): number {\n  let reds = [color1 & 0xff0000, color2 & 0xff0000];\n  let blues = [color1 & 0x0000ff, color2 & 0x0000ff];\n  let greens = [color1 & 0x00ff00, color2 & 0x00ff00];\n  let out =\n    Math.round(Math.min(reds[0] / 0x010000 + reds[1] / 0x010000, 255)) *\n    0x010000;\n  out +=\n    Math.round(Math.min(greens[0] / 0x000100 + greens[1] / 0x000100, 255)) *\n    0x000100;\n  out += Math.round(Math.min(blues[0] + blues[1], 255));\n  return out;\n}\n\n/**\n *\n * @param args either { target, proportion, base } or { color, opacity, background } or target\n * @param arg2 if args was a single number, this should be opacity\n * @param arg3 if args was a single number, this should be background, or default to 0 (black) background\n */\nexport function interpolateColor(\n  args:\n    | { target: number; proportion: number; base?: number }\n    | { color: number; opacity: number; background?: number }\n    | number,\n  arg2?: number,\n  arg3?: number\n): number {\n  if (typeof args === 'object') {\n    if (args.hasOwnProperty('target')) {\n      let _args: any = args;\n      return _interpolateColor(_args);\n    } else if (args.hasOwnProperty('color')) {\n      let _args: any = args;\n      return _interpolateColor({\n        target: _args.color,\n        proportion: _args.opacity,\n        base: _args.background,\n      });\n    } else {\n      throw new Error(`missing parameter in interpolateColor: ${args}`);\n    }\n  } else {\n    if (arg2) {\n      return _interpolateColor({ target: args, proportion: arg2, base: arg3 });\n    } else {\n      throw new Error(\n        `missing parameter in interpolateColor: ${args} ${arg2} ${arg3}`\n      );\n    }\n  }\n}\n\nfunction _interpolateColor(args: {\n  target: number;\n  proportion: number;\n  base?: number;\n}): number {\n  const { target, base = 0, proportion = 1 } = args;\n  let reds = [target & 0xff0000, base & 0xff0000];\n  let blues = [target & 0x0000ff, base & 0x0000ff];\n  let greens = [target & 0x00ff00, base & 0x00ff00];\n  let out =\n    Math.round(\n      (reds[0] / 0x010000) * proportion +\n        (reds[1] / 0x010000) * (1 - proportion)\n    ) * 0x010000;\n  out +=\n    Math.round(\n      (greens[0] / 0x000100) * proportion +\n        (greens[1] / 0x000100) * (1 - proportion)\n    ) * 0x000100;\n  out += Math.round(blues[0] * proportion + blues[1] * (1 - proportion));\n\n  return out;\n}\n\nexport function enumKeys<T extends string>(enm: { [key in T]: T }): T[] {\n  return Object.keys(enm) as T[];\n}\n\n// export function enumKeys<T extends string>(enm: { [key: string]: string }) : T[] {\n//   return Object.keys(enm) as T[];\n// }\n\n/**\n * Used on pojo filtering functions.\n * Here deepFilter: T => U is expected to be a pure function of the form object => object with a subset of the same properties (deeply).\n * for instance\n * deepFilter: { a: number, b: { c: number , d: string } } => { a: number, b: { c: number } }\n * @returns a list. each element of the list represents an access path that is in the subset of paths kept by the pure filter function.\n * in the example above, the output would be [ ['a'],  ['b', 'c'] ]\n */\nexport function extractAccessPaths<T, U>(deepFilter: (t: T) => U): string[][] {\n  let accessPaths: string[][] = [[]];\n\n  const proxyHandler: ProxyHandler<{ path: string[] }> = {\n    get: (\n      target: { path: string[] },\n      p: string | number | symbol,\n      receiver: any\n    ): any => {\n      const newPath = target.path.concat([p.toString()]);\n      // detect if we are merely adding on to an existing path and if so update it in place\n      if (accessPaths[accessPaths.length - 1] === target.path) {\n        accessPaths[accessPaths.length - 1] = newPath;\n      } else {\n        accessPaths.push(newPath);\n      }\n      const newObj = new Proxy({ path: newPath }, proxyHandler);\n      return newObj;\n    },\n  };\n\n  // run the function and record the paths\n  deepFilter(new Proxy({ path: accessPaths[0] }, proxyHandler) as any);\n\n  return accessPaths;\n}\n\n/**\n *\n * @param deepFilter pojo filtering function, as above\n * @returns a function that takes a T instance and returns the list of properties accessed by deepFilter. useful in react useMemo calls\n */\nexport function extractDeps<T, U>(\n  deepFilter: (t: T) => U\n): (t: T | Const<U>) => any[] {\n  const accessPaths = extractAccessPaths(deepFilter);\n\n  return (t: T | U) => {\n    const deps = accessPaths.map((accessPath) => {\n      let ref: any = t;\n      for (let p of accessPath) {\n        ref = ref?.[p];\n      }\n      return ref;\n    });\n    // console.log({ deps });\n    return deps;\n  };\n}\n","import React from 'react';\nimport { GameState } from '../data/GameState';\nimport { IntentName, PlayerIntentState } from '../data/PlayerIntentState';\nimport { UpdaterGeneratorType2 } from '../lib/util/updaterGenerator';\n\ntype Props = {\n  updaters: UpdaterGeneratorType2<PlayerIntentState, GameState>;\n  isTextBoxFocused: boolean;\n};\n\ntype State = {\n  keyIntentConfig: keyToIntentMap;\n};\n\n// TODO: enumerate all the keyboard keys we care about\ntype BrowserKeys = string;\n\n/**\n * Holds the mapping of which keyboard keys (as interpreted by the browser)\n * map to which intents, e.g. \"up arrow\" means \"pan left\"\n */\ntype keyToIntentMap = {\n  [key in BrowserKeys]?: IntentName;\n};\n\nconst defaultKeyIntentConfig = {\n  // ArrowUp: IntentName.PAN_NORTH,\n  // ArrowLeft: IntentName.PAN_WEST,\n  // ArrowDown: IntentName.PAN_SOUTH,\n  // ArrowRight: IntentName.PAN_EAST,\n  w: IntentName.PAN_NORTH,\n  a: IntentName.PAN_WEST,\n  s: IntentName.PAN_SOUTH,\n  d: IntentName.PAN_EAST,\n  k: IntentName.PAN_NORTH,\n  h: IntentName.PAN_WEST,\n  j: IntentName.PAN_SOUTH,\n  l: IntentName.PAN_EAST,\n  m: IntentName.TOGGLE_STRATEGIC_VIEW,\n  i: IntentName.TOGGLE_SIDEBAR,\n  // w: IntentName.MOVE_CURSOR_NORTH,\n  // a: IntentName.MOVE_CURSOR_WEST,\n  // s: IntentName.MOVE_CURSOR_SOUTH,\n  // d: IntentName.MOVE_CURSOR_EAST,\n  ArrowUp: IntentName.MOVE_CURSOR_NORTH,\n  ArrowLeft: IntentName.MOVE_CURSOR_WEST,\n  ArrowDown: IntentName.MOVE_CURSOR_SOUTH,\n  ArrowRight: IntentName.MOVE_CURSOR_EAST,\n  // q: IntentName.MOVE_CURSOR_NORTHWEST,\n  // e: IntentName.MOVE_CURSOR_NORTHEAST,\n  // z: IntentName.MOVE_CURSOR_SOUTHWEST,\n  // x: IntentName.MOVE_CURSOR_SOUTHEAST,\n  // c: IntentName.MOVE_CURSOR_SOUTHEAST,\n  ' ': IntentName.INTERACT_WITH_NODE,\n  '<': IntentName.TRAVEL_UPSTAIRS,\n  '>': IntentName.TRAVEL_DOWNSTAIRS,\n};\n\n/**\n * Empty react element with listeners for keyboard actions.\n */\nexport class KeyboardListenerComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      keyIntentConfig: defaultKeyIntentConfig,\n    };\n  }\n\n  componentDidMount() {\n    console.log('adding event listeners for keyboard component');\n    document.addEventListener('keydown', this.handleKeydown);\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  // NOTE(bowei): does using e.repeat here break when window loses focus??\n  handleKeydown = (e: KeyboardEvent) => {\n    const { keyIntentConfig } = this.state;\n    const key: BrowserKeys = e.key;\n    const configuredIntent = keyIntentConfig[key];\n    if (configuredIntent) {\n      if (this.props.isTextBoxFocused) {\n        console.log(\n          'bypassing keyboard event processing because text box is focused'\n        );\n        return;\n      } else {\n        // console.log(\"skipping default on keyboard event because text box is not focused\");\n        e.preventDefault();\n      }\n    }\n\n    if (\n      e.repeat === false &&\n      configuredIntent !== undefined &&\n      configuredIntent !== IntentName.NOOP\n    ) {\n      this.props.updaters.newIntent[configuredIntent].enqueueUpdate(() => {\n        this.props.updaters.newIntent[configuredIntent].enqueueUpdate(\n          () => false\n        );\n        return true;\n      });\n      this.props.updaters.activeIntent[configuredIntent].enqueueUpdate(\n        () => true\n      );\n    }\n  };\n\n  handleKeyup = (e: KeyboardEvent) => {\n    const { keyIntentConfig } = this.state;\n    const key: BrowserKeys = e.key;\n    const configuredIntent = keyIntentConfig[key];\n    if (\n      configuredIntent !== undefined &&\n      configuredIntent !== IntentName.NOOP\n    ) {\n      this.props.updaters.activeIntent[configuredIntent].enqueueUpdate(\n        () => false\n      );\n      this.props.updaters.endedIntent[configuredIntent].enqueueUpdate(() => {\n        this.props.updaters.endedIntent[configuredIntent].enqueueUpdate(\n          () => false\n        );\n        return true;\n      });\n    }\n  };\n\n  componentWillUnmount() {\n    console.log('removing event listeners for keyboard component');\n    document.removeEventListener('keydown', this.handleKeydown);\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  render() {\n    return <> </>;\n  }\n}\n","import React from 'react';\nimport { GameState } from './data/GameState';\nimport { Const } from './lib/util/misc';\nimport { UpdaterGeneratorType2 } from './lib/util/updaterGenerator';\n\n// nullable, but should be OK, just remember to populate the context\n// export const GameContext = React.createContext<GameState>(null as any);\n// export const GameUpdatersContext = React.createContext<UpdaterGeneratorType<GameState>>(null as any);\nexport const UseGameStateContext = React.createContext<\n  [Const<GameState>, UpdaterGeneratorType2<GameState>, () => void]\n>([] as any);\n","export const EPSILON = 0.0000001;\n\nexport const epsEqual = (x: number, y: number) => {\n  return Math.abs(x - y) < EPSILON;\n};\n\nexport const epsGreaterThan = (x: number, y: number) => {\n  return x + EPSILON - y > 0;\n};\n\nexport const epsLessThan = (x: number, y: number) => {\n  return x - EPSILON - y < 0;\n};\n","import { EPSILON } from '../epsilon_math';\nimport { Util } from '../misc';\n\nexport interface IVector2 {\n  x: number;\n  y: number;\n}\n\nexport class Vector2 {\n  private _x: number;\n  private _y: number;\n\n  public get x(): number {\n    return this._x;\n  }\n  public get y(): number {\n    return this._y;\n  }\n\n  constructor();\n  constructor(x: number, y: number);\n  constructor(props: { x: number; y: number });\n  constructor(\n    propsOrX: { x: number; y: number } | number = { x: 0, y: 0 },\n    y?: number\n  ) {\n    if (typeof propsOrX === 'number') {\n      this._x = propsOrX;\n      this._y = y!;\n    } else {\n      this._x = propsOrX.x;\n      this._y = propsOrX.y;\n    }\n  }\n\n  public get half(): Vector2 {\n    return new Vector2({ x: this.x / 2, y: this.y / 2 });\n  }\n\n  public static Zero: Vector2 = new Vector2(0, 0);\n  public static One: Vector2 = new Vector2(1, 1);\n\n  static IsVector2(x: any): x is Vector2 {\n    return x instanceof Vector2;\n  }\n\n  static Random(highX: number, highY: number, lowX = 0, lowY = 0) {\n    return new Vector2({\n      x: Util.RandRange(lowX, highX),\n      y: Util.RandRange(lowY, highY),\n    });\n  }\n\n  hash(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return `[${this.x}, ${this.y}]`;\n  }\n\n  invert(): Vector2 {\n    return new Vector2({\n      x: -this.x,\n      y: -this.y,\n    });\n  }\n\n  round(): Vector2 {\n    return new Vector2({\n      x: Math.round(this.x),\n      y: Math.round(this.y),\n    });\n  }\n\n  floor(): Vector2 {\n    return new Vector2({\n      x: Math.floor(this.x),\n      y: Math.floor(this.y),\n    });\n  }\n\n  taxicabDistance(p: Vector2): number {\n    return Math.abs(p.x - this.x) + Math.abs(p.y - this.y);\n  }\n\n  diagonalDistance(p: IVector2): number {\n    return Math.max(Math.abs(p.x - this.x), Math.abs(p.y - this.y));\n  }\n\n  distance(p: IVector2): number {\n    let dx = Math.abs(p.x - this.x);\n    let dy = Math.abs(p.y - this.y);\n\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  translate(p: { x: number; y: number }): Vector2 {\n    return new Vector2({\n      x: this.x + p.x,\n      y: this.y + p.y,\n    });\n  }\n\n  subtract(p: { x: number; y: number }): Vector2 {\n    return new Vector2({\n      x: this.x - p.x,\n      y: this.y - p.y,\n    });\n  }\n\n  add(p: { x: number; y: number }): Vector2 {\n    return new Vector2({\n      x: this.x + p.x,\n      y: this.y + p.y,\n    });\n  }\n\n  addX(x: number): Vector2 {\n    return new Vector2({\n      x: this.x + x,\n      y: this.y,\n    });\n  }\n\n  addY(y: number): Vector2 {\n    return new Vector2({\n      x: this.x,\n      y: this.y + y,\n    });\n  }\n\n  subtractX(x: number): Vector2 {\n    return new Vector2({\n      x: this.x - x,\n      y: this.y,\n    });\n  }\n\n  subtractY(y: number): Vector2 {\n    return new Vector2({\n      x: this.x,\n      y: this.y - y,\n    });\n  }\n\n  clampX(low: number, high: number): Vector2 {\n    let newX = this.x;\n\n    if (newX < low) {\n      newX = low;\n    }\n    if (newX > high) {\n      newX = high;\n    }\n\n    return new Vector2({\n      x: newX,\n      y: this.y,\n    });\n  }\n\n  clampY(low: number, high: number): Vector2 {\n    let newY = this.y;\n\n    if (newY < low) {\n      newY = low;\n    }\n    if (newY > high) {\n      newY = high;\n    }\n\n    return new Vector2({\n      x: this.x,\n      y: newY,\n    });\n  }\n\n  scale(\n    about: { x: number; y: number },\n    amount: { x: number; y: number }\n  ): Vector2 {\n    return new Vector2({\n      x: (this.x - about.x) * amount.x + about.x,\n      y: (this.y - about.y) * amount.y + about.y,\n    });\n  }\n\n  rotate(origin: Vector2, angle: number): Vector2 {\n    angle = angle / (180 / Math.PI);\n\n    return new Vector2({\n      x:\n        Math.cos(angle) * (this.x - origin.x) -\n        Math.sin(angle) * (this.y - origin.y) +\n        origin.x,\n      y:\n        Math.sin(angle) * (this.x - origin.x) +\n        Math.cos(angle) * (this.y - origin.y) +\n        origin.y,\n    });\n  }\n\n  equals(other: Vector2 | undefined | null): boolean {\n    if (other === undefined || other === null) {\n      return false;\n    }\n\n    return (\n      Math.abs(this.x - other.x) < EPSILON &&\n      Math.abs(this.y - other.y) < EPSILON\n    );\n  }\n\n  multiply(other: Vector2 | number): Vector2 {\n    if (typeof other === 'number') {\n      return new Vector2({\n        x: this.x * other,\n        y: this.y * other,\n      });\n    } else {\n      return new Vector2({\n        x: this.x * other.x,\n        y: this.y * other.y,\n      });\n    }\n  }\n\n  divide(other: Vector2 | number): Vector2 {\n    if (typeof other === 'number') {\n      return new Vector2({\n        x: this.x / other,\n        y: this.y / other,\n      });\n    } else {\n      return new Vector2({\n        x: this.x / other.x,\n        y: this.y / other.y,\n      });\n    }\n  }\n\n  toJSON(): any {\n    return {\n      __type: 'Vector2',\n      x: this.x,\n      y: this.y,\n    };\n  }\n\n  transform(trans: Vector2, scale: number): Vector2 {\n    return new Vector2({\n      x: Math.floor((this.x - trans.x) * scale),\n      y: Math.floor((this.y - trans.y) * scale),\n    });\n  }\n\n  normalize(): Vector2 {\n    if (this.x === 0 && this.y === 0) {\n      return this;\n    }\n\n    const length = Math.sqrt(this.x * this.x + this.y * this.y);\n\n    return new Vector2({\n      x: this.x / length,\n      y: this.y / length,\n    });\n  }\n\n  withX(newX: number): Vector2 {\n    return new Vector2({\n      x: newX,\n      y: this.y,\n    });\n  }\n\n  withY(newY: number): Vector2 {\n    return new Vector2({\n      x: this.x,\n      y: newY,\n    });\n  }\n\n  invertX(): Vector2 {\n    return new Vector2({\n      x: -this.x,\n      y: this.y,\n    });\n  }\n\n  lerp(other: Vector2, t: number): Vector2 {\n    if (t > 1 || t < 0) {\n      console.error('Lerp t must be between 0 and 1.');\n    }\n    if (t === 0) return this;\n    if (t === 1) return other;\n\n    return this.scale({ x: 0, y: 0 }, { x: 1 - t, y: 1 - t }).add(\n      other.scale({ x: 0, y: 0 }, { x: t, y: t })\n    );\n  }\n\n  lerp2D(other: Vector2, tx: number, ty: number): Vector2 {\n    if (tx > 1 || tx < 0 || ty > 1 || ty < 0) {\n      console.error('Lerp t must be between 0 and 1.');\n    }\n    return this.scale({ x: 0, y: 0 }, { x: 1 - tx, y: 1 - ty }).add(\n      other.scale({ x: 0, y: 0 }, { x: tx, y: ty })\n    );\n  }\n\n  coserp(other: Vector2, t: number): Vector2 {\n    t = 0.5 * (1 + Math.cos(2 * t * Math.PI));\n\n    return this.lerp(other, t);\n  }\n\n  static Deserialize(obj: any): Vector2 | null {\n    if (!obj || !obj.hasOwnProperty('x') || !obj.hasOwnProperty('y')) {\n      console.error('Failed deserializing point');\n      return null;\n    }\n\n    return new Vector2({\n      x: obj.x,\n      y: obj.y,\n    });\n  }\n\n  static Serialize(obj: Vector2): string {\n    return JSON.stringify(this.SerializeToObject(obj));\n  }\n\n  static SerializeToObject(obj: Vector2): object {\n    return { x: obj.x, y: obj.y };\n  }\n}\n","let COLORS = {\n  // good colors\n  backgroundBlue: 0x222222,\n  // nodePink: 0xeeaaaa,\n  // nodeLavender: 0xcc88ee,\n  // nodeBlue: 0x99bbff,\n  // nodeAqua: 0xbbccdd,\n  // nodeGrey: 0xddffdd,\n\n  // shitty colors\n  // backgroundBlue: 0xffffff,\n  // nodePink: 0x332244,\n  nodePink: 0x333333, // try this?\n  nodeLavender: 0x4b4b4b,\n  nodeBlue: 0x444444,\n\n  // used for lock nodes\n  nodeAqua: 0xffaaaa,\n  // gateTint: 0xaaaaaa,\n  gateTint: 0xffffff,\n\n  selectedTint: 0xbbbbff,\n  allocatedTint: 0x444444,\n  nodeBorder: 0x666666,\n  nullTint: 0xffffff,\n\n  // colors that dont matter too much\n  tooltipBorderBlack: 0x222222,\n  tooltipFillWhite: 0xeeeeee,\n  white: 0xffffff,\n  grayBlack: 0x1d1d1d,\n  borderBlack: 0x111111,\n  borderWhite: 0x666666,\n  black: 0x000000,\n  textWhite: 0x888888,\n};\n\n// baseColor = 0xccee88; // bright yellow green\n// baseColor = 0xcccccc; // gray almost invisible\n// baseColor = 0xccccee; // lavender almost invisible\n// baseColor = 0xaacccc; // lavender almost invisible\n// baseColor = 0xdddddd; // grayish white?\n// baseColor = 0xaaaaaa; // dark grayish brown\n// baseColor = 0x777777; // very dark brown\n\nexport default COLORS;\n\nexport function colorToCss(c: number): string {\n  return '#' + c.toString(16);\n}\n","/**\n * Intended as a typescript-friendly replacement for {[k: string]: boolean} that allows us to specify what the key type should be (\n * rather than allowing any keyType.toString() to be a valid key, and without going through the trouble of declaring distinguishable\n * types for each key type we want to use). Also serves as a slightly different version of ES6 native Set(), which is hardcoded\n * to use === for object referential equality.\n *\n * NOTE: this assume hash() is a strong test for equality, i.e. 2 objects are considered equal if and only if their hashes are the same!!!\n * TODO: write StrictHashSet<K extends {hash(): string, equals(k: K): boolean}> to handle custom equality checks\n */\nexport class HashSet<K extends { hash(): string }> {\n  private _values: HashMap<K, K>;\n\n  constructor(initialValues: K[] = []) {\n    this._values = new HashMap<K, K>();\n\n    for (const value of initialValues) {\n      this.put(value);\n    }\n  }\n\n  remove(key: K): void {\n    this._values.remove(key);\n  }\n\n  put(key: K): void {\n    this._values.put(key, key);\n  }\n\n  get(key: K): boolean {\n    return this._values.get(key) !== undefined;\n  }\n\n  contains(key: K): boolean {\n    return this._values.contains(key);\n  }\n\n  values(): K[] {\n    return this._values.values();\n  }\n\n  // hash(): string {\n  //   return this._values.hashKeyset();\n  // }\n\n  clone(): HashSet<K> {\n    let n = new HashSet<K>();\n    n._values = this._values.clone();\n    return n;\n  }\n\n  size(): number {\n    return this._values.size();\n  }\n\n  equals(other: HashSet<K> | undefined | null) {\n    if (other === undefined || other === null) {\n      return false;\n    }\n\n    if (this.size() !== other.size()) {\n      return false;\n    }\n\n    for (let k of this.values()) {\n      if (!other.contains(k)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // *[Symbol.iterator]() {\n  //   // construct a new iterator. note that as usual\n  //   for (let key of Object.keys(this._values)) {\n  //     yield key;\n  //   }\n  // }\n}\n\n/**\n * Intended as a typescript-friendly replacement for {[k: string]: V} that allows us to specify what the key type should be (\n * rather than allowing any keyType.toString() to be a valid key, and without going through the trouble of declaring distinguishable\n * types for each key type we want to use). Also serves as a slightly different version of ES6 native Map(), which is hardcoded\n * to use === for object referential equality.\n *\n * NOTE: this assume hash() is a strong test for equality, i.e. 2 objects are considered equal if and only if their hashes are the same!!!\n * TODO: write StrictHashMap<K extends {hash(): string, equals(K): boolean}> to handle custom equality checks\n */\nexport class HashMap<K extends { hash(): string }, V> {\n  protected _values: { [key: string]: V } = {};\n\n  constructor(initialValues: [K, V][] = []) {\n    for (const [key, value] of initialValues) {\n      this.put(key, value);\n    }\n  }\n\n  put(key: K, value: V) {\n    this._values[key.hash()] = value;\n  }\n\n  remove(key: K): void {\n    delete this._values[key.hash()];\n  }\n\n  get(key: K): V | undefined {\n    return this._values[key.hash()];\n  }\n\n  contains(key: K): boolean {\n    // V may be an undefined type\n    return this.get(key) !== undefined && key.hash() in this._values;\n  }\n\n  values(): V[] {\n    return Object.values(this._values);\n    // return Object.keys(this._values).map(key => this._values[key]); // why grant???\n  }\n\n  // *[Symbol.iterator]() {\n  //   // construct a new iterator. note that as usual editing the object during iteration is not supported\n  //   for (let key of Object.keys(this._values)) {\n  //     yield key;\n  //   }\n  // }\n\n  // hashes only the keys - use HashableHashMap if you know that the value type here is also hashable\n  // hashKeyset(): string {\n  //   const hashes: number[] = Object.keys(this._values).map(s => hashCode(s));\n  //   let code: number = hashes.reduce((pv, cv) => pv + cv);\n  //   return code.toString();\n  // }\n\n  size(): number {\n    return Object.keys(this._values).length;\n  }\n\n  clone(): HashMap<K, V> {\n    let n = new HashMap<K, V>();\n    n._values = { ...this._values };\n    return n;\n  }\n}\n\nexport class HashableHashMap<\n  K extends { hash(): string },\n  V extends { hash(): string }\n> extends HashMap<K, V> {\n  hash(): string {\n    const hashes: number[] = Object.entries(this._values).map(\n      ([s, v]) => hashCode(s) + hashCode(v.hash())\n    );\n    let code: number = hashes.reduce((pv, cv) => pv + cv);\n    return code.toString();\n  }\n}\n\n/**\n * Same as HashMap, but actually stores the keys used to key the hashmap, instead of just their hashes.\n * Allows iteration over the full key-value pair set.\n */\nexport class KeyedHashMap<K extends { hash(): string }, V> {\n  private _kvalues: { [key: string]: [K, V] } = {};\n\n  constructor(initialValues: [K, V][] = []) {\n    for (const [key, value] of initialValues) {\n      this.put(key, value);\n    }\n  }\n\n  put(key: K, value: V) {\n    this._kvalues[key.hash()] = [key, value];\n  }\n\n  remove(key: K): void {\n    delete this._kvalues[key.hash()];\n  }\n\n  get(key: K): V | undefined {\n    return this._kvalues[key.hash()]?.[1];\n  }\n\n  contains(key: K): boolean {\n    // V may be an undefined type\n    return this.get(key) !== undefined && key.hash() in this._kvalues;\n  }\n\n  keys(): K[] {\n    return Object.keys(this._kvalues).map((key) => this._kvalues[key][0]);\n  }\n\n  entries(): [K, V][] {\n    return Object.keys(this._kvalues).map((key) => this._kvalues[key]);\n  }\n\n  values(): V[] {\n    return Object.keys(this._kvalues).map((key) => this._kvalues[key][1]);\n  }\n\n  hashKeyset(): string {\n    const hashes: number[] = Object.keys(this._kvalues).map((s) => hashCode(s));\n    let code: number = hashes.reduce((pv, cv) => pv + cv);\n    return code.toString();\n  }\n\n  clone(): KeyedHashMap<K, V> {\n    let n = new KeyedHashMap<K, V>();\n    n._kvalues = { ...this._kvalues };\n    return n;\n  }\n\n  size(): number {\n    return Object.keys(this._kvalues).length;\n  }\n}\n\nexport class DefaultHashMap<K extends { hash(): string }, V> {\n  private _values: { [key: string]: V } = {};\n  private _makeDefault: () => V;\n\n  constructor(makeDefaultValue: () => V) {\n    this._makeDefault = makeDefaultValue;\n  }\n\n  put(key: K, value: V) {\n    this._values[key.hash()] = value;\n  }\n\n  get(key: K): V {\n    if (this._values[key.hash()] === undefined) {\n      this._values[key.hash()] = this._makeDefault();\n    }\n\n    return this._values[key.hash()];\n  }\n}\n\n// Hash a string to a number. source: https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0\nexport function hashCode(s: string): number {\n  let h = 0;\n  for (let i = 0; i < s.length; i++) {\n    h = (Math.imul(31, h) + s.charCodeAt(i)) | 0;\n  }\n  return h;\n}\n\n// declare global {\n//   interface Array<T extends { hash(): string }> {\n//     hash(): string\n//   }\n//\n//   interface Number {\n//     hash(): string\n//   }\n//\n//   interface String {\n//     hash(): String\n//   }\n// }\n//\n// Array.prototype.hash = function () {\n//   return hashArray(this);\n// }\n//\n// Number.prototype.hash = function () {\n//   return this.toString();\n// }\n//\n// String.prototype.hash = function () {\n//   return this;\n// }\n//\n// function hashArray<T extends { hash(): string }>(arr: T[]): string {\n//   return arr.map(elt => hashCode(elt.hash())).reduce((pv, cv) => 31 * pv + cv).hash();\n// }\n//\n","import * as Pixi from 'pixi.js';\nimport { IVector2 } from '../util/geometry/vector2';\n\nexport function PixiPointFrom(p: IVector2): Pixi.Point {\n  return new Pixi.Point(p.x, p.y);\n}\n","/**\n *\n * @param fn an arbitrary callback which performs some operation with side effects.\n * @returns a tuple: [batchedFn, fireBatch].\n * batchedFn takes the same arguments as fn, but the side effects are delayed until fireBatch is called.\n * if batchedFn is called multiple times, those invocations are stored in order, and then popped off in order when fireBatch is called.\n */\nexport function batchify<A extends any[]>(\n  fn: (...args: A) => void\n): [(...args: A) => void, () => void] {\n  let batch: A[] = [];\n\n  return [\n    (...args: A) => {\n      batch.push(args);\n      // console.log({ stack: new Error().stack, batchSize: batch.length });\n      // console.log({ batchSize: batch.length });\n    },\n    () => {\n      if (batch.length !== 0) {\n        console.log({ fired: batch.length });\n      }\n      for (let a of batch) {\n        fn(...a);\n      }\n      batch = [];\n    },\n  ];\n}\n\n/**\n * Same use case and types as [batchify], however, specifically we expect [fn] to be a setState function which takes value-or-callback\n * as its single argument, and instead of calling [fn] repeatedly for each callback in the batch, we apply the callbacks in the batch\n * sequentially to get a single state update which we then provide to [fn].\n */\nexport function batchifySetState<T>(\n  fn: (arg: T) => void\n): [(arg: T) => void, () => void] {\n  let batch: T[] = [];\n\n  return [\n    (arg: T) => {\n      batch.push(arg);\n      // console.log({ batchSize: batch.length });\n    },\n    () => {\n      if (batch.length === 0) {\n        return;\n      }\n      // console.log({ fired: batch.length });\n      let thisBatch = [...batch];\n      batch = [];\n      (fn as any)((prev: any) => {\n        let next = prev;\n        for (let valueOrCallback of thisBatch) {\n          if (typeof valueOrCallback === 'function') {\n            next = valueOrCallback(next);\n          } else {\n            next = valueOrCallback;\n          }\n        }\n        return next;\n      });\n    },\n  ];\n}\n","import { Const } from './misc';\n\ntype UpdaterFnParam2<T, W> =\n  | ((prev: Const<T>, prevWhole: W) => T | Const<T>)\n  | (T extends Function ? never : T); // (T | ((prev: T, prevWhole: W) => T));\n\ntype UpdaterFn2<T, W> = (arg: UpdaterFnParam2<T, W>) => void;\n\n/**\n * Represent the type which has the same deep object struture as T but instead of values, it has\n * functions on [getUpdater], [enqueueUpdate], and [update] attached to every level of the object structure.\n */\nexport type UpdaterGeneratorType2<T, W = T> = {\n  [k in keyof T]: (T[k] extends { [kkt: string]: any }\n    ? UpdaterGeneratorType2<T[k], W>\n    : {}) & {\n    getUpdater: () => UpdaterFn2<T[k], W>;\n    enqueueUpdate: UpdaterFn2<T[k], W>;\n  };\n} & {\n  getUpdater: () => UpdaterFn2<T, W>;\n  enqueueUpdate: UpdaterFn2<T, W>;\n};\n\n// helper method for the recursion\nfunction updaterGenerator2Helper<T, W>(\n  dataObject: T,\n  dataUpdater: UpdaterFn2<T, W>\n): UpdaterGeneratorType2<T, W> {\n  const updaters: UpdaterGeneratorType2<T, W> = {} as any;\n  updaters.getUpdater = () => dataUpdater;\n  updaters.enqueueUpdate = dataUpdater;\n  if (\n    dataObject === null ||\n    dataObject === undefined ||\n    typeof dataObject !== 'object'\n  ) {\n    return updaters;\n  } else {\n    const keys: (keyof T)[] = Object.keys(dataObject) as any;\n    keys.forEach((key: keyof T) => {\n      if (key === 'enqueueUpdate' || key === 'getUpdater' || key === 'update') {\n        throw Error(\n          `Invalid key in updaterGenerator: ${key} conflicts with reserved keywords enqueueUpdate, update, getUpdater.`\n        );\n      }\n      function keyUpdater(\n        newValueOrCallback: UpdaterFnParam2<T[typeof key], W>\n      ) {\n        if (typeof newValueOrCallback === 'function') {\n          dataUpdater((oldData: T, wholeData: W) => {\n            const newKey = (newValueOrCallback as (\n              prev: T[typeof key],\n              whole: W\n            ) => T[typeof key])(oldData[key], wholeData);\n            if (oldData[key] === newKey) {\n              return oldData; // no update detected, no need to update anything\n            } else {\n              const newData = {\n                ...oldData,\n                [key]: newKey,\n              };\n              return newData;\n            }\n          });\n        } else {\n          dataUpdater((oldData, wholeData) => ({\n            ...oldData,\n            [key]: newValueOrCallback,\n          }));\n        }\n      }\n      updaters[key] = (updaterGenerator2Helper<T[typeof key], W>(\n        dataObject[key],\n        keyUpdater\n      ) as unknown) as typeof updaters[typeof key];\n    });\n    return updaters;\n  }\n}\n\n/**\n * Convenience method for generating setState<FancyObject.sub.component>() from setState<FancyObject> callbacks.\n * If used in react, recommended that this be memoized.\n *\n * @generic T should be a data-only object - nested objects are allowed but arrays, sets not supported\n * @param dataObject ANY instance of T, used only for its keys. MUST have all keys present\n * @param setState an updater function, which can be called as: dataUpdater(newT) or\n *   dataUpdater((oldT) => { return newTFromOldT(oldT) }) ; e.g. react setState() function.\n * @return a deep object that has the same keys as T, except each key also has a getUpdater()/set/update member;\n *   the getUpdater() on a subobject of T acts similarly to the [setState] param but to the subobject rather than the whole object;\n *   the whole object is also available as the second argument of the callback\n * e.g. :\n *   let gameStateUpdater = updaterGenerator(skeletonObject, setGameState);\n *   let setName = gameStateUpdater.player.name.getUpdater();\n *   gameStateUpdater.player.name.set(newName);\n *   gameStateUpdater.player.name.update((oldName, wholeObject) => oldName + \" \");\n *\n */\nexport function updaterGenerator2<T>(\n  dataObject: T,\n  setState: UpdaterFn<T>\n): UpdaterGeneratorType2<T> {\n  const dataUpdater2 = (stateCallbackFunction: UpdaterFnParam2<T, T>) => {\n    if (typeof stateCallbackFunction === 'function') {\n      setState((prev: T) => {\n        // if T is a function type already, typescript correctly notifies us that this will fail\n        const next = (stateCallbackFunction as (prev: T, prevWhole: T) => T)(\n          prev,\n          prev\n        );\n        // console.log(\" in updater generator 2\", { next });\n        return next;\n      });\n    } else {\n      setState(stateCallbackFunction);\n    }\n  };\n  return updaterGenerator2Helper<T, T>(dataObject, dataUpdater2);\n}\n\nexport type UpdaterFnParam<T> =\n  | (T extends Function ? never : T)\n  | ((prev: T) => T);\nexport type UpdaterFn<T> = (arg: UpdaterFnParam<T>) => void;\n","import * as Pixi from 'pixi.js';\nimport { batchifySetState } from '../../lib/util/batchify';\nimport { UpdaterFn, updaterGenerator2 } from '../../lib/util/updaterGenerator';\n\ntype Props = {\n  args?: {\n    markForceUpdate?: (self: LifecycleHandlerBase<any, any>) => void;\n    [k: string]: any;\n  };\n  [k: string]: any;\n};\n\ntype State = {};\n\ntype ChildInstructions<\n  ChildInstanceType,\n  ChildPropsType extends Props,\n  ParentPropsType extends Props,\n  ParentStateType extends State\n> = {\n  childClass: new (props: ChildPropsType) => ChildInstanceType;\n  instance?: ChildInstanceType;\n  propsFactory: (\n    parentProps: ParentPropsType,\n    parentState: ParentStateType\n  ) => ChildPropsType;\n};\n\nclass ChildrenArray<P extends Props, S extends State> {\n  private _values: ChildInstructions<\n    LifecycleHandlerBase<any, any>,\n    any,\n    P,\n    S\n  >[] = [];\n\n  public add<CIT extends LifecycleHandlerBase<any, any>, CPT>(\n    c: ChildInstructions<CIT, CPT, P, S>\n  ) {\n    if (\n      this._values.indexOf(c) === -1 ||\n      (c.instance && this.contains(c.instance))\n    ) {\n      // do nohting - its already in here\n    }\n    this._values.push(c);\n  }\n\n  public remove<CIT extends LifecycleHandlerBase<any, any>>(\n    c: CIT\n  ): ChildInstructions<CIT, any, P, S> | undefined {\n    const removed = this._values.splice(\n      this._values.findIndex((it) => it.instance === c),\n      1\n    );\n    if (removed.length === 0) {\n      return undefined;\n    } else {\n      return removed[0] as ChildInstructions<CIT, any, P, S>;\n    }\n  }\n\n  public contains<CIT extends LifecycleHandlerBase<any, any>>(c: CIT): boolean {\n    return this._values.findIndex((it) => it.instance === c) > -1;\n  }\n\n  public get<CIT extends LifecycleHandlerBase<CPT, any>, CPT>(\n    c: CIT\n  ): ChildInstructions<CIT, CPT, P, S> | undefined {\n    return this._values.find((it) => it.instance === c) as\n      | ChildInstructions<CIT, CPT, P, S>\n      | undefined;\n  }\n\n  public clone(): ChildrenArray<P, S> {\n    let cloned = new ChildrenArray<P, S>();\n    cloned._values = [...this._values];\n    return cloned;\n  }\n\n  public forEach(\n    callbackfn: (\n      value: ChildInstructions<LifecycleHandlerBase<any, any>, any, P, S>,\n      index: number,\n      array: ChildInstructions<LifecycleHandlerBase<any, any>, any, P, S>[]\n    ) => void\n  ) {\n    this._values.forEach(callbackfn);\n  }\n}\n\n// export interface LifecycleHandlerBase<P extends Props, S extends State> {\n// // useful for interface merging?? https://stackoverflow.com/questions/44153378/typescript-abstract-optional-method\n// }\n\n/**\n * LifecycleHandlerConstructor <- this should take the usual props, and will return new proxy, new base component(props), the handler object which has the construct() property and that function in it\n */\n// export function LifecycleHandlerConstructor<T>(props:\n// class and interface merging??? https://stackoverflow.com/questions/44153378/typescript-abstract-optional-method\nexport abstract class LifecycleHandlerBase<P extends Props, S extends State> {\n  // public, only to interface with non lifecycleHandler classes that we have yet to refactor\n  public abstract container: Pixi.Container;\n  // public, only to allow useState function below to set this.state\n  public abstract state: S;\n\n  protected _staleProps: P; // NOTE(bowei): need it for args for now; maybe we can extract out args?\n  private _children: ChildrenArray<P, S> = new ChildrenArray();\n  private _childrenToConstruct: ChildrenArray<P, S> = new ChildrenArray();\n  private _childrenToDestruct: ChildrenArray<P, S> = new ChildrenArray();\n  private _forceUpdates: ChildrenArray<P, S> = new ChildrenArray();\n  // private _self!: LifecycleHandlerBase<P, S>;\n\n  constructor(props: P) {\n    this._staleProps = props;\n  }\n\n  protected addChild<CIT extends LifecycleHandlerBase<CPT, any>, CPT>(\n    c: ChildInstructions<CIT, CPT, P, S>\n  ) {\n    this._children.add(c); // make sure children are updated\n    this._childrenToConstruct.add(c); // if not already constructed/added to pixi hierarchy, queue it up\n  }\n\n  protected registerChild<CIT extends LifecycleHandlerBase<CPT, any>, CPT>(\n    c: ChildInstructions<CIT, CPT, P, S>\n  ) {\n    // only add children to updateable, not constructed\n    this._children.add(c);\n  }\n\n  protected removeChild<CIT extends LifecycleHandlerBase<any, any>>(c: CIT) {\n    let childInfo = this._children.remove(c); // make sure children are no longer updated\n    // NOTE(bowei): do we need to call willUnount on the children here??\n    childInfo && this._childrenToDestruct.add(childInfo); // queue it for destruction next update tick\n  }\n\n  private _didConstruct(props: P) {\n    // this._self = this;\n    this._childrenToConstruct.forEach((child) => {\n      if (!child.instance) {\n        child.instance = new child.childClass(\n          child.propsFactory(props, this.state)\n        );\n      }\n      // NOTE(bowei): we are assuming the derived class did NOT manually add child to pixi hierarchy, even if\n      // they constructed the instance themselves (in order to e.g. hold a reference); we do that here\n      this.container.addChild(child.instance.container);\n    });\n    this.renderSelf(props);\n    this.didMount?.();\n  }\n\n  /** callback passed to child - since child is not a pure component, it needs to inform us of updates if otherwise we wouldnt update */\n  protected markForceUpdate = (childInstance: any) => {\n    this._staleProps.args?.markForceUpdate?.(this); // mark us for update in OUR parent\n\n    const childInfo = this._children.get(childInstance);\n    if (childInfo) {\n      this._forceUpdates.add(childInfo);\n    } else {\n      throw new Error(`Error, child ${childInstance} not found in ${this}`);\n    }\n  };\n\n  // cannot be attached to an instance due to typescript\n  // if satic, cannot be called \"useState\" or else react linter complains\n  protected useState<S, T extends { state: S }>(self: T, initialState: S) {\n    const setState: UpdaterFn<S> = (valueOrCallback) => {\n      if (typeof valueOrCallback === 'function') {\n        self.state = (valueOrCallback as (s: S) => S)(self.state);\n      } else {\n        self.state = valueOrCallback;\n      }\n    };\n    const [batchedSetState, fireBatch] = batchifySetState(setState);\n    const stateUpdaters = updaterGenerator2<S>(initialState, batchedSetState);\n\n    return {\n      state: initialState,\n      setState,\n      fireStateUpdaters: fireBatch,\n      stateUpdaters,\n    };\n  }\n\n  // shim while we migrate\n  public update(nextProps: P) {\n    this._update(nextProps);\n  }\n\n  // NOTE(bowei): this is public because the root of component hierarchy needs to be bootstrapped from pixi react bridge\n  public _update(nextProps: P) {\n    // nextProps is guaranteed to be referentially a distinct object (might be shallow copy though)\n    const staleState = { ...this.state };\n    this.fireStateUpdaters?.();\n    this.updateSelf?.(nextProps);\n    if (\n      this.shouldUpdate &&\n      !this.shouldUpdate(this._staleProps, staleState, nextProps, this.state)\n    ) {\n      // we think we don't need to update; however, we still need to\n      // update the chidlren that asked us to forcefully update them\n      let forceUpdates = this._forceUpdates.clone();\n      this._forceUpdates = new ChildrenArray<P, S>();\n      forceUpdates.forEach((childInfo) => {\n        let { instance, propsFactory } = childInfo;\n        instance?._update(propsFactory(nextProps, this.state)); // why are we even calling props factory here?? theres no point... we should just tell the child to use their own stale props, like this:\n        // instance._forceUpdate();\n        // note that children can add themselves into forceupdate next tick as well, if they need to ensure they're continuously in there\n\n        instance && this.didForceUpdateChild?.(instance);\n      });\n      // no need to do anything else -- stale props has not changed\n\n      this.didForceUpdate?.();\n      return;\n    } else {\n      this.updateChildren?.(nextProps);\n      this._updateChildren(nextProps); // implementation should call children._update in here\n      this.renderSelf(nextProps);\n      this._staleProps = nextProps;\n      new Promise((resolve) => resolve(this.didUpdate?.()));\n    }\n  }\n\n  protected updateChildren?(nextProps: P): void;\n\n  // destroy, update, create in that order, so that there's no extra update right before destroy or after create\n  private _updateChildren(nextProps: P) {\n    this._childrenToDestruct.forEach((child) => {\n      if (child.instance) {\n        // should always be true\n        child.instance.willUnmount?.();\n        this.container.removeChild(child.instance.container);\n      }\n    });\n    this._childrenToDestruct = new ChildrenArray();\n\n    this._children.forEach(({ instance, propsFactory }) => {\n      instance?._update(propsFactory(nextProps, this.state));\n    });\n\n    this._childrenToConstruct.forEach((child) => {\n      // here we expect the child instances to be empty, but they could be already constructed, if the derived class needs to keep a reference to it\n      if (!child.instance) {\n        child.instance = new child.childClass(\n          child.propsFactory(nextProps, this.state)\n        );\n      }\n      this.container.addChild(child.instance.container);\n    });\n    this._childrenToConstruct = new ChildrenArray();\n  }\n\n  protected fireStateUpdaters?(): void;\n  protected didMount?(): void;\n  protected updateSelf?(nextProps: P): void;\n  /**\n   *\n   * @param staleProps\n   * @param staleState\n   * @param nextProps\n   * @param state\n   * @returns false if staleProps == nextProps and staleState == state (which will cause the component to be memoized)\n   *          true if the props or state differ significantly\n   */\n  protected shouldUpdate?(\n    staleProps: P,\n    staleState: S,\n    nextProps: P,\n    state: S\n  ): boolean;\n  protected abstract renderSelf(nextProps: P): void;\n  protected didUpdate?(): void;\n  protected didForceUpdate?(): void;\n  public willUnmount(): void {} // TODO(bowei): revert this to protected nullable; however it's needed for shim for now\n  protected didForceUpdateChild?(child: LifecycleHandlerBase<any, any>): void;\n\n  public toString(): string {\n    return 'lifecyclehandler object';\n  }\n}\n\nexport type LifecycleHandlerType<P, S> = LifecycleHandlerBase<P, S>;\nexport const LifecycleHandler = new Proxy(LifecycleHandlerBase, {\n  construct: (target, args, newTarget) => {\n    const instance = Reflect.construct(target, args, newTarget);\n    instance._didConstruct(...args);\n    return instance;\n  },\n});\n\nexport function engageLifecycle<T extends object>(derived: T): T {\n  return new Proxy<T>(derived, {\n    construct: (target, args) => {\n      const instance = new (target as any)(args[0]);\n      instance._didConstruct(args[0]);\n      return instance;\n    },\n  });\n}\n\n/**\n * First render:\n * constructor\n * renderChildren?\n * renderSelf\n * didMount\n *\n * Subsequent updates:\n *\n * fireStateUpdaters\n * updateSelf\n * shouldUpdate(props,state)?\n * updateChildren\n * children._update\n * renderSelf\n * didUpdate\n * staleProps = props\n *\n */\n\ntype ReferenceProps = {\n  updaters: 'stuff';\n  args: { s: 'other stuff' };\n};\ntype ReferenceState = {\n  lalalala: 'hahahah';\n};\n\nexport class Reference extends LifecycleHandler<\n  ReferenceProps,\n  ReferenceState\n> {\n  public container: Pixi.Container;\n  public state: ReferenceState;\n  constructor(props: ReferenceProps) {\n    super(props);\n    this.container = new Pixi.Container();\n    this.state = {\n      lalalala: 'hahahah',\n    };\n  }\n\n  updateSelf(nextProps: ReferenceProps) {}\n  renderSelf(nextProps: ReferenceProps) {}\n  didMount() {}\n  didUpdate() {}\n  shouldUpdate(): boolean {\n    return true;\n  }\n  fireStateUpdaters() {}\n  willUnmount() {}\n}\n","import { NodeContents } from '../game/worldGen/nodeContents/NodeContentsFactory';\nimport { KeyedHashMap } from '../lib/util/data_structures/hash';\nimport { Vector2 } from '../lib/util/geometry/vector2';\nimport { Vector3 } from '../lib/util/geometry/vector3';\nimport { LazyHashMap } from '../lib/util/lazy';\nimport { LockData } from './PlayerSaveState';\n\nexport type WorldGenState = {\n  seed: number;\n  /**\n   * What sort of locks are generated. Does not store the live status of the locks.\n   */\n  lockMap: LazyHashMap<Vector3, LockData | undefined>;\n\n  /**\n   * Data about each node.\n   */\n  nodeContentsMap: LazyHashMap<Vector3, NodeContents>;\n};\n\nexport type ZLevelGen = {\n  id: number;\n  chunks: KeyedHashMap<Vector2, ChunkGen>;\n};\n\nexport type ChunkGen = {\n  id: number;\n  pointNodes: KeyedHashMap<Vector2, PointNodeGen>;\n};\n\nexport class ChunkGenConstants {\n  public static CHUNK_DIM = 9; // each chunk is a DIM x DIM grid of nodes, centered on a single node\n  public static CHUNK_HALF_DIM = (ChunkGenConstants.CHUNK_DIM - 1) / 2;\n  public static DROP_NODES_CHANCE = 0.0; // before generating edges, how many of the nodes to throw out\n}\n\nexport type PointNodeGen = {\n  id: number;\n} & (\n  | {\n      nodeType: NodeType.Basic;\n      // more data to be generated here - size, color, etc.\n      resourceType: ResourceNontrivialType;\n      resourceModifier: ResourceModifier;\n      resourceAmount: number;\n    }\n  | {\n      nodeType: NodeType.Nothing;\n    }\n  | {\n      nodeType: NodeType.EfficiencyGate;\n      resourceType: ResourceNontrivialType;\n      resourceModifier: ResourceModifier;\n      resourceAmount: number;\n\n      efficiencyGateInfo: {\n        thresholdResourceType: ResourceType;\n        thresholdResourceAmount: number;\n        timeUntilLocked: number;\n      };\n    }\n);\n\nexport enum NodeType {\n  Basic = 'Basic',\n  Nothing = 'Nothing',\n  EfficiencyGate = 'EfficiencyGate',\n}\n\nexport enum ResourceNontrivialType {\n  Mana0 = 'Mana0',\n  Mana1 = 'Mana1',\n  Mana2 = 'Mana2',\n}\n\nexport type ResourceType = ResourceNontrivialType;\n// // eslint-disable-next-line\n// export const ResourceType = {\n//   Nothing: \"Nothing\",\n//   EfficiencyGate: \"EfficiencyGate\",\n//   ...ResourceNontrivialType,\n// };\n\nexport enum ResourceModifier {\n  Flat = 'Flat',\n  Increased0 = '% increased',\n  AfterIncreased0 = 'added after % increased',\n  Increased1 = '% increased multiplier',\n  AfterIncreased1 = 'added after % increased multiplier',\n}\n","import * as Pixi from 'pixi.js';\nimport { RenderedChunkConstants } from './ChunkComponent';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { GameState } from '../../data/GameState';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { PixiPointFrom } from '../../lib/pixi/pixify';\nimport { multiplyColor } from '../../lib/util/misc';\nimport { TooltippableAreaComponent } from './TooltippableAreaComponent';\nimport { engageLifecycle, LifecycleHandlerBase } from './LifecycleHandler';\nimport { RootComponentState } from './RootComponent';\nimport { PointNodeTextureSet } from '../textures/PointNodeTexture';\nimport COLORS from '../colors';\nimport {\n  NodeType,\n  PointNodeGen,\n  ResourceModifier,\n  ResourceNontrivialType,\n} from '../../data/WorldGenState';\nimport { PointNodeRef } from '../../data/PointNodeRef';\n\ntype Props = {\n  delta: number;\n  args: {\n    pointNodeTexture: PointNodeTextureSet;\n    position: Vector2;\n    markForceUpdate: (childInstance: any) => void;\n  };\n  selfPointNodeRef: PointNodeRef;\n  updaters: UpdaterGeneratorType2<GameState>;\n  tooltipUpdaters: UpdaterGeneratorType2<RootComponentState>['tooltip'];\n  pointNodeGen: PointNodeGen;\n  isSelected: boolean;\n  isAllocated: boolean;\n};\n\ntype State = {\n  numClicks: number; // debug\n  descriptionText: string;\n};\n\nclass PointNodeComponent extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n\n  public sprite: Pixi.Sprite;\n  public halfwayCenterSprite: Pixi.Sprite;\n  public centerSprite: Pixi.Sprite;\n  public topHalfSprite: Pixi.Sprite;\n  public hitArea: Pixi.IHitArea;\n\n  public tooltippableArea?: TooltippableAreaComponent;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      numClicks: 0,\n      descriptionText: '',\n    };\n    this.updateSelf(props); // initialize the description text properly\n    this.container = new Pixi.Container();\n\n    let defaultTexture = props.args.pointNodeTexture.find((it) => {\n      return it.cropFraction >= 0.99;\n    })?.texture;\n    this.container.sortableChildren = true;\n    this.sprite = new Pixi.Sprite(defaultTexture);\n    this.sprite.anchor.x = 0.5;\n    this.sprite.anchor.y = 0.5;\n    this.sprite.zIndex = -2;\n    this.container.addChild(this.sprite);\n\n    this.topHalfSprite = new Pixi.Sprite(\n      props.args.pointNodeTexture.find((it) => {\n        return it.cropFraction >= 0.499;\n      })?.texture\n    );\n    this.topHalfSprite.anchor.x = 0.5;\n    this.topHalfSprite.anchor.y = 0.5;\n    this.topHalfSprite.zIndex = -1;\n    // this.topHalfSprite.alpha = 0;\n    if (props.pointNodeGen.nodeType === NodeType.EfficiencyGate) {\n      // adding this drops FPS from 90 static/50 moving to 70 static/40 moving, even when alpha off, so we only add it for the nodes that need it\n      this.container.addChild(this.topHalfSprite);\n    }\n\n    const mask = new Pixi.Graphics();\n    mask.beginFill(COLORS.black);\n    mask.drawRect(\n      0,\n      0,\n      this.topHalfSprite.width,\n      this.topHalfSprite.height / 2\n    );\n    mask.pivot.x = this.topHalfSprite.width / 2;\n    mask.pivot.y = this.topHalfSprite.height / 2;\n    mask.zIndex = 30;\n    // this.container.addChild(mask);\n    // this.topHalfSprite.mask = mask; // DO NOT DO THIS, masking many masks is extremely slow: https://forums.rpgmakerweb.com/index.php?threads/games-optimisations-tips.92717/\n\n    this.centerSprite = new Pixi.Sprite(defaultTexture);\n    this.centerSprite.anchor.x = 0.5;\n    this.centerSprite.anchor.y = 0.5;\n    this.centerSprite.scale = PixiPointFrom(new Vector2(0.5, 0.5));\n    this.centerSprite.zIndex = 1;\n    this.centerSprite.alpha = 0; // TESTING\n    // this.container.addChild(this.centerSprite);\n\n    this.halfwayCenterSprite = new Pixi.Sprite(defaultTexture);\n    this.halfwayCenterSprite.anchor.x = 0.5;\n    this.halfwayCenterSprite.anchor.y = 0.5;\n    this.halfwayCenterSprite.scale = PixiPointFrom(new Vector2(0.75, 0.75));\n    this.halfwayCenterSprite.zIndex = 0;\n    // disable this sprite for now - causes a fairly significant fps hit, until we get around to holding less nodes on the page at once\n    this.halfwayCenterSprite.alpha = 0;\n    // this.container.addChild(this.halfwayCenterSprite);\n\n    this.container.interactive = true;\n    // NOTE(bowei): ive tested, the following 2 settings don't significantly affect FPS\n    this.container.buttonMode = true;\n    this.hitArea = new Pixi.Rectangle(\n      -RenderedChunkConstants.NODE_HITAREA_PX / 2,\n      -RenderedChunkConstants.NODE_HITAREA_PX / 2,\n      RenderedChunkConstants.NODE_HITAREA_PX,\n      RenderedChunkConstants.NODE_HITAREA_PX\n    );\n    // note: hitarea breaks child onhover: https://github.com/pixijs/pixi.js/issues/5837\n    this.container.hitArea = this.hitArea;\n\n    // const tooltippableAreaPropsFactory = (p: Props, s: State) => {\n    //   let nodeDescription: string = \"Nothing (empty node)\";\n    //   if (p.pointNodeGen.resourceType !== ResourceType.Nothing) {\n    //     nodeDescription = `${p.pointNodeGen.resourceAmount} ${p.pointNodeGen.resourceModifier} ${p.pointNodeGen.resourceType}`;\n    //   }\n    //   return {\n    //     args: {\n    //       markForceUpdate: this.markForceUpdate,\n    //     },\n    //     text: nodeDescription,\n    //     hitArea: this.hitArea, // TODO(bowei): move into state???\n    //   }\n    // }\n    // this.tooltippableArea = new TooltippableAreaComponent(tooltippableAreaPropsFactory(props, this.state));\n    // this.container.addChild(this.tooltippableArea.container);\n    // this.addChild({\n    //   childClass: TooltippableAreaComponent,\n    //   instance: this.tooltippableArea,\n    //   propsFactory: tooltippableAreaPropsFactory,\n    // });\n  }\n\n  protected updateSelf(props: Props) {\n    let nodeDescription: string = 'Nothing (empty node)';\n    if (props.pointNodeGen.nodeType === NodeType.EfficiencyGate) {\n      nodeDescription = `Unlocks at 300 Mana0 in 14 or fewer allocations`; // TODO\n    } else if (props.pointNodeGen.nodeType !== NodeType.Nothing) {\n      nodeDescription = `${props.pointNodeGen.resourceAmount} ${props.pointNodeGen.resourceModifier} ${props.pointNodeGen.resourceType}`;\n    }\n    this.state.descriptionText = nodeDescription;\n  }\n\n  protected renderSelf(props: Props) {\n    this.container.position = PixiPointFrom(props.args.position);\n    let tint: number;\n    let centerTint: number;\n    if (props.isSelected) {\n      tint = COLORS.selectedTint;\n      centerTint = COLORS.selectedTint;\n    } else {\n      tint = COLORS.nullTint;\n      centerTint = COLORS.nullTint;\n    }\n    if (props.isAllocated) {\n      tint = COLORS.allocatedTint;\n    } else {\n    }\n\n    let baseColor: number = 0;\n    let topHalfColor: number = 0;\n    if (props.pointNodeGen.nodeType === NodeType.Nothing) {\n      baseColor = COLORS.nodeBlue; // blue that mixes in with bg\n    } else if (props.pointNodeGen.nodeType === NodeType.EfficiencyGate) {\n      baseColor = COLORS.nodeAqua; // bg color = abcdef\n      topHalfColor = multiplyColor(COLORS.nodeAqua, COLORS.gateTint); // grayish white\n    } else if (\n      props.pointNodeGen.resourceType === ResourceNontrivialType.Mana0\n    ) {\n      if (props.pointNodeGen.resourceModifier === ResourceModifier.Flat) {\n        baseColor = COLORS.nodePink;\n      } else if (\n        props.pointNodeGen.resourceModifier === ResourceModifier.Increased0\n      ) {\n        baseColor = COLORS.nodeLavender;\n      }\n    }\n    // switch (props.pointNodeGen.resourceType) {\n    //   case ResourceType.Nothing:\n    //     baseColor = 0x99bbff; // blue that mixes in with bg\n    //     break;\n    //   case ResourceType.Mana0:\n    //     baseColor = 0xeeaaaa; // red\n    //     break;\n    //   case ResourceType.Mana1:\n    //     baseColor = 0xbb7733; // brown?\n    //     break;\n    //   case ResourceType.Mana2:\n    //     baseColor = 0x44aa44; // green\n    //     break;\n    // }\n\n    this.sprite.tint = multiplyColor(baseColor, tint);\n    this.centerSprite.tint = multiplyColor(baseColor, centerTint);\n    this.topHalfSprite.tint = multiplyColor(topHalfColor, tint);\n\n    // TESTING\n    let textureToFind = Math.floor(Math.random() * 9) / 8 - 0.001;\n    this.topHalfSprite.texture = props.args.pointNodeTexture.find(\n      (it) => it.cropFraction >= textureToFind\n    )?.texture!;\n\n    // NOTE(bowei): careful, we dont want to set the scale of our tooltip to be bigger\n    if (props.selfPointNodeRef.pointNodeCoord.equals(Vector2.Zero)) {\n      this.container.scale = PixiPointFrom(new Vector2(1.25, 1.25));\n    }\n  }\n\n  protected shouldUpdate(\n    staleProps: Props,\n    staleState: State,\n    props: Props,\n    state: State\n  ): boolean {\n    for (let key of Object.keys(staleProps) as (keyof Props)[]) {\n      if (key === 'delta' || key === 'args' || key === 'updaters') {\n        continue;\n      }\n      if (staleProps[key] !== props[key]) {\n        console.log(`node shouldUpdate differed in ${key}, returning true`);\n        return true;\n      }\n      if (key === 'selfPointNodeRef') {\n        if (staleProps[key]?.hash() !== props[key]?.hash()) {\n          console.log(`node shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n    }\n    return false;\n  }\n\n  protected didMount() {\n    // const { updaters } = this._staleProps; // we assume this will never change\n\n    //     this.container.addListener('pointerover', (event: Pixi.InteractionEvent) => {\n    //       this.state.pointerover = event;\n    //     })\n    //     this.container.addListener('pointerout', () => {\n    //       this.state.pointerover = undefined;\n    //     })\n    //\n\n    this.container.addListener(\n      'pointerdown',\n      (event: Pixi.InteractionEvent) => {\n        this._staleProps.args.markForceUpdate(this);\n        this.state.numClicks++;\n        // selectOrReselectNode(updaters, this._staleProps.selfPointNodeRef);\n        // event.stopPropagation();\n      }\n    );\n\n    this.container.addListener(\n      'pointerover',\n      (event: Pixi.InteractionEvent) => {\n        // this._staleProps.args.markForceUpdate(this);\n\n        // source: https://www.iwm-tuebingen.de/iwmbrowser/lib/pixi/tooltip.js\n        const localPosition = event.data.getLocalPosition(this.container);\n        const position = new Vector2(\n          this.container.worldTransform.tx,\n          this.container.worldTransform.ty\n        );\n        // const position = new Vector2(this.container.worldTransform.tx, this.container.worldTransform.ty);\n\n        this._staleProps.tooltipUpdaters.enqueueUpdate((prev) => {\n          const next = {\n            ...prev,\n            visible: true,\n            text: this.state.descriptionText,\n            position: position.add(localPosition),\n          };\n          // console.log({ next });\n          return next;\n        });\n      }\n    );\n\n    this.container.addListener('pointerout', (event: Pixi.InteractionEvent) => {\n      // this._staleProps.args.markForceUpdate(this);\n\n      this._staleProps.tooltipUpdaters.enqueueUpdate((prev) => {\n        const next = { ...prev, visible: false, text: '' };\n        return next;\n      });\n    });\n\n    this.container.addListener(\n      'pointermove',\n      (event: Pixi.InteractionEvent) => {\n        // this._staleProps.args.markForceUpdate(this);\n\n        // source: https://www.iwm-tuebingen.de/iwmbrowser/lib/pixi/tooltip.js\n        const localPosition = event.data.getLocalPosition(this.container);\n        const position = new Vector2(\n          this.container.worldTransform.tx,\n          this.container.worldTransform.ty\n        );\n\n        this._staleProps.tooltipUpdaters.position.enqueueUpdate(\n          position.add(localPosition)\n        );\n      }\n    );\n  }\n\n  public toString(): string {\n    return 'PointNodeCompoent ' + this._staleProps.selfPointNodeRef.toString();\n  }\n}\n\nconst wrapped = engageLifecycle(PointNodeComponent);\n// eslint-disable-next-line\ntype wrapped = PointNodeComponent;\nexport { wrapped as PointNodeComponent };\nexport type { Props as PointNodeComponentProps };\n","import { Vector2 } from '../lib/util/geometry/vector2';\n\nexport class PointNodeRef {\n  public z: number;\n  public chunkCoord: Vector2;\n  public pointNodeCoord: Vector2;\n  public pointNodeId: number;\n\n  constructor(args: {\n    z: number;\n    chunkCoord: Vector2;\n    pointNodeCoord: Vector2;\n    pointNodeId: number;\n  }) {\n    this.z = args.z;\n    this.chunkCoord = args.chunkCoord;\n    this.pointNodeCoord = args.pointNodeCoord;\n    this.pointNodeId = args.pointNodeId;\n  }\n\n  public hash(): string {\n    return (\n      this.pointNodeId.toString() +\n      this.z.toString() +\n      this.chunkCoord.toString() +\n      this.pointNodeCoord.toString()\n    );\n  }\n\n  public toString(): string {\n    return (\n      this.z +\n      ',' +\n      this.chunkCoord.toString() +\n      ',' +\n      this.pointNodeCoord.toString()\n    );\n  }\n}\n\nexport class ChunkRef {\n  public z: number;\n  public chunkCoord: Vector2;\n  public chunkId: number;\n\n  constructor(args: { z: number; chunkCoord: Vector2; chunkId: number }) {\n    this.z = args.z;\n    this.chunkCoord = args.chunkCoord;\n    this.chunkId = args.chunkId;\n  }\n\n  public hash(): string {\n    return (\n      this.chunkId.toString() + this.z.toString() + this.chunkCoord.toString()\n    );\n  }\n}\n","import * as Pixi from 'pixi.js';\nimport { HashSet, KeyedHashMap } from '../../lib/util/data_structures/hash';\nimport { GameState } from '../../data/GameState';\nimport {\n  PointNodeComponent,\n  PointNodeComponentProps,\n} from './PointNodeComponent';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { PixiPointFrom } from '../../lib/pixi/pixify';\nimport { engageLifecycle, LifecycleHandlerBase } from './LifecycleHandler';\nimport { RootComponentState } from './RootComponent';\nimport { PointNodeTextureSet } from '../textures/PointNodeTexture';\nimport { ChunkRef, PointNodeRef } from '../../data/PointNodeRef';\nimport { ChunkGenConstants, ChunkGen } from '../../data/WorldGenState';\n\nexport class RenderedChunkConstants {\n  //   public static SPACING_PX: number = 24;\n  //   public static CHUNK_SPACING_PX: number = (ChunkGenConstants.CHUNK_DIM + 0.5) * RenderedChunkConstants.SPACING_PX;\n  //   public static NODE_SIZE_PX: number = 14;\n  //   public static NODE_HITAREA_PX: number = 18;\n  public static SPACING_PX: number = 36;\n  public static CHUNK_SPACING_PX: number =\n    (ChunkGenConstants.CHUNK_DIM + 0.0) * RenderedChunkConstants.SPACING_PX;\n  public static NODE_SIZE_PX: number = 22;\n  public static NODE_HITAREA_PX: number =\n    RenderedChunkConstants.NODE_SIZE_PX + 4;\n  public static NODE_ROUNDED_PX: number = 4;\n}\n\ntype Props = {\n  delta: number;\n  args: {\n    pointNodeTexture: PointNodeTextureSet;\n    markForceUpdate: (childInstance: any) => void;\n  };\n  selfChunkRef: ChunkRef;\n  updaters: UpdaterGeneratorType2<GameState>;\n  tooltipUpdaters: UpdaterGeneratorType2<RootComponentState>['tooltip'];\n  position: Vector2;\n  chunkGen: ChunkGen;\n  selectedPointNode: PointNodeRef | undefined;\n  allocatedPointNodeSubset: HashSet<PointNodeRef>;\n};\n\ntype State = {};\n\nclass ChunkComponent2 extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n\n  public children: KeyedHashMap<PointNodeRef, PointNodeComponent>;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {};\n    this.container = new Pixi.Container();\n    this.children = new KeyedHashMap();\n\n    this.resyncChildren(props);\n  }\n\n  protected renderSelf(props: Props) {\n    this.container.position = PixiPointFrom(props.position);\n  }\n\n  protected shouldUpdate(\n    prevProps: Props,\n    prevState: State,\n    props: Props,\n    state: State\n  ): boolean {\n    // return true;\n    for (let key of Object.keys(prevProps) as (keyof Props)[]) {\n      if (key === 'delta' || key === 'args' || key === 'updaters') {\n        continue;\n      }\n      if (key === 'position') {\n        if (!prevProps[key].equals(props[key])) {\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (key === 'selectedPointNode') {\n        if (prevProps[key]?.hash() !== props[key]?.hash()) {\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (key === 'selfChunkRef') {\n        if (prevProps[key]?.hash() !== props[key]?.hash()) {\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (key === 'allocatedPointNodeSubset') {\n        // subsets could be different objects but have the same contents\n        if (!prevProps[key].equals(props[key])) {\n          // console.log(`prevProps: ${JSON.stringify(prevProps[key])}`);\n          // console.log(`props: ${JSON.stringify(props[key])}`);\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (prevProps[key] !== props[key]) {\n        console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private resyncChildren(props: Props) {\n    let childrenToDelete = this.children.clone(); // track which children need to be destroyed according to new props\n    console.log(`chunk component upsert children got here`);\n    // console.log(`chunk component upsert children has ${this.children.size()} children`);\n\n    for (let [\n      pointNodeCoord,\n      pointNodeGen,\n    ] of props.chunkGen.pointNodes.entries()) {\n      const pointNodeRef = new PointNodeRef({\n        z: props.selfChunkRef.z,\n        chunkCoord: props.selfChunkRef.chunkCoord,\n        pointNodeCoord: pointNodeCoord,\n        pointNodeId: pointNodeGen.id,\n      });\n      let childPropsFactory = (\n        props: Props,\n        state: State\n      ): PointNodeComponentProps => {\n        return {\n          delta: props.delta,\n          args: {\n            pointNodeTexture: props.args.pointNodeTexture,\n            markForceUpdate: this.markForceUpdate,\n            position: pointNodeRef.pointNodeCoord.multiply(\n              RenderedChunkConstants.SPACING_PX\n            ),\n          },\n          selfPointNodeRef: pointNodeRef,\n          updaters: props.updaters,\n          tooltipUpdaters: props.tooltipUpdaters,\n          pointNodeGen,\n          isSelected:\n            props.selectedPointNode?.pointNodeId === pointNodeRef.pointNodeId,\n          isAllocated: props.allocatedPointNodeSubset.contains(pointNodeRef),\n        };\n      };\n      const childKey = pointNodeRef;\n\n      let childComponent = this.children.get(childKey);\n      if (childComponent) {\n        // childComponent.update(childPropsFactory(props, this.state));\n        childrenToDelete.remove(childKey);\n      } else {\n        childComponent = new PointNodeComponent(\n          childPropsFactory(props, this.state)\n        );\n        this.children.put(pointNodeRef, childComponent);\n        // this.container.addChild(childComponent.container);\n        this.addChild({\n          childClass: PointNodeComponent,\n          instance: childComponent,\n          propsFactory: childPropsFactory,\n        });\n      }\n    }\n    console.log(\n      `chunk component to delete has ${childrenToDelete.size()} children`\n    );\n    for (let [childKey, childComponent] of childrenToDelete.entries()) {\n      // childComponent.willUnmount();\n      this.children.remove(childKey);\n      // this.container.removeChild(childComponent.container);\n      this.removeChild(childComponent);\n    }\n  }\n\n  protected updateChildren(props: Props) {\n    this.resyncChildren(props);\n  }\n\n  protected didForceUpdateChild(instance: LifecycleHandlerBase<any, any>) {\n    // IMPORTANT! this is intended to raise the child that asked for a force update to the top so it isn't covered\n    // by other sibling pixi containers. however this code doesnt work well during the update call, for some reason (not sure why)\n    this.container.removeChild(instance.container);\n    this.container.addChild(instance.container);\n  }\n}\n\nconst wrapped = engageLifecycle(ChunkComponent2);\n// eslint-disable-next-line\ntype wrapped = ChunkComponent2;\nexport { wrapped as ChunkComponent };\nexport type { Props as ChunkComponentProps };\n","import { KeyedHashMap } from './data_structures/hash';\nimport { Const } from './misc';\n\n/**\n * Class representing a value which is only computed when used.\n *\n * Usage: const lazy = new Lazy(() => thingThatReturnsSomething()).\n * Then thingThatReturnsSomething() will only get called on the first time lazy.get() is called.\n * On the second and subsequent times, lazy.get() will return the same object - the factory method is not called again.\n */\nexport class Lazy<T> {\n  private _wasConstructed: boolean = false;\n  private _value: T | undefined = undefined;\n  private _factory: () => T;\n\n  constructor(\n    factory: () => T\n    // structure?: T extends { [key: string]: any } ? T : void\n  ) {\n    this._factory = factory;\n  }\n  public get(): T {\n    // T might have undefined as a valid value\n    if (this._value !== undefined || this._wasConstructed === true) {\n      return this._value!;\n    } else {\n      this._value = this._factory();\n      this._wasConstructed = true;\n      return this._value;\n    }\n  }\n  public wasConstructed(): boolean {\n    return this._wasConstructed;\n  }\n  // public async getAsync(): Promise<T> {\n  //   if (this._value !== undefined || this._wasConstructed === true) {\n  //     return Promise.resolve(this._value!);\n  //   } else {\n  //     return new Promise<T>((resolve, reject) => {\n  //       this._value = this._factory();\n  //       this._wasConstructed = true;\n  //       resolve(this._value);\n  //     });\n  //   }\n  // }\n}\n\nexport function LazyProxy<\n  T extends { [key: string]: any } | { [i: number]: any }\n>(factory: () => T): Const<T> {\n  return (new Proxy(new Lazy(factory), {\n    get: (target, property, receiver) => {\n      if (property === 'toJSON') {\n        return () => {\n          if (target.wasConstructed()) {\n            return target.get();\n          } else {\n            return '[Object Lazy]';\n          }\n        };\n      }\n      const targetValue = target.get();\n      return Reflect.get(targetValue, property);\n    },\n    ownKeys: (target) => {\n      const targetValue = target.get();\n      return Reflect.ownKeys(targetValue);\n    },\n    getOwnPropertyDescriptor: (target, property) => {\n      /**\n       * https://stackoverflow.com/questions/40352613/why-does-object-keys-and-object-getownpropertynames-produce-different-output\n       */\n\n      return Object.getOwnPropertyDescriptor(target.get(), property);\n    },\n    has: (target, property) => {\n      // This is called when iterating over array i.e. array.forEach()\n      return property in target.get();\n    },\n  }) as unknown) as Const<T>;\n}\n\n/**\n * Similar to HashMap, except it allows setting a factory function to be used for missing keys.\n * Also memoizes the result.\n *\n * NOTE: this assume hash() is a strong test for equality, i.e. 2 objects are considered equal if and only if their hashes are the same!!!\n */\nexport class LazyHashMap<K extends { hash(): string }, V> {\n  protected _values: KeyedHashMap<K, V>;\n  protected _factory: (k: K) => V;\n\n  constructor(factory: (k: K) => V) {\n    this._values = new KeyedHashMap();\n    this._factory = factory;\n  }\n\n  setFactory(factory: (k: K) => V): LazyHashMap<K, V> {\n    this._factory = factory;\n    return this;\n  }\n\n  // overrides any factory provided values\n  put(key: K, value: V) {\n    this._values.put(key, value);\n  }\n\n  // removes the key from the list of memoized (cached) values and forces a re-call of the factory() provider.\n  // also removes the key from any manually put(ted) factory overrides.\n  remove(key: K): void {\n    this._values.remove(key);\n  }\n\n  invalidate(key: K): void {\n    this.remove(key);\n  }\n\n  clear(): void {\n    this._values = new KeyedHashMap();\n  }\n\n  // checks to see if the key is present. returns undefined if populating the key would require a factory() call.\n  peek(key: K): V | undefined {\n    return this._values.get(key);\n  }\n\n  get(key: K): V {\n    if (this._values.contains(key)) {\n      return this._values.get(key)!;\n    } else {\n      const value = this._factory(key);\n      this._values.put(key, value);\n      return value;\n    }\n  }\n\n  // same as get(), but does not return the result. useful for forcing factory() call so the value is available quickly later.\n  precompute(key: K) {\n    if (this._values.contains(key)) {\n      return;\n    } else {\n      const value = this._factory(key);\n      this._values.put(key, value);\n    }\n  }\n\n  // returns true if the key was already instantiated, false otherwise.\n  contains(key: K): boolean {\n    return this._values.contains(key);\n  }\n\n  // only contains populated (i.e. non-factory) entries.\n  values(): V[] {\n    return this._values.values();\n  }\n\n  // only contains populated (i.e. non-factory) entries.\n  keys(): K[] {\n    return this._values.keys();\n  }\n\n  // only contains populated (i.e. non-factory) entries.\n  entries(): [K, V][] {\n    return this._values.entries();\n  }\n\n  // *[Symbol.iterator]() {\n  //   // construct a new iterator. note that as usual editing the object during iteration is not supported\n  //   for (let key of Object.keys(this._values)) {\n  //     yield key;\n  //   }\n  // }\n\n  // hashes only the keys - use HashableHashMap if you know that the value type here is also hashable\n  // hashKeyset(): string {\n  //   const hashes: number[] = Object.keys(this._values).map(s => hashCode(s));\n  //   let code: number = hashes.reduce((pv, cv) => pv + cv);\n  //   return code.toString();\n  // }\n\n  // only contains populated (i.e. non-factory) entries.\n  size(): number {\n    return this._values.size();\n  }\n\n  clone(newFactory?: (k: K) => V): LazyHashMap<K, V> {\n    let n = new LazyHashMap<K, V>(newFactory || this._factory);\n    n._values = this._values.clone();\n    return n;\n  }\n}\n/*\nexport class LazyHashSet<K extends { hash(): string }> {\n  private _values: LazyHashMap<K, boolean>;\n\n  constructor(factory: (k: K) => boolean, initialValues: K[] = []) {\n    this._values = new LazyHashMap<K, boolean>(factory);\n\n    for (const value of initialValues) {\n      this.put(value);\n    }\n  }\n\n  // remove(key: K): void {\n  //   this._values.remove(key);\n  // }\n\n  put(key: K): void {\n    this._values.put(key, true);\n  }\n\n  get(key: K): boolean {\n    return this._values.get(key) !== undefined;\n  }\n\n  contains(key: K): boolean {\n    return this._values.contains(key);\n  }\n\n  values(): K[] {\n    return this._values.values();\n  }\n\n  // hash(): string {\n  //   return this._values.hashKeyset();\n  // }\n\n  clone(): HashSet<K> {\n    let n = new HashSet<K>();\n    n._values = this._values.clone();\n    return n;\n  }\n\n  size(): number {\n    return this._values.size();\n  }\n\n  equals(other: HashSet<K> | undefined | null) {\n    if (other === undefined || other === null) {\n      return false;\n    }\n\n    if (this.size() !== other.size()) {\n      return false;\n    }\n\n    for (let k of this.values()) {\n      if (!other.contains(k)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // *[Symbol.iterator]() {\n  //   // construct a new iterator. note that as usual\n  //   for (let key of Object.keys(this._values)) {\n  //     yield key;\n  //   }\n  // }\n}\n*/\n","export enum NodeAllocatedStatus {\n  TAKEN = 'TAKEN',\n  AVAILABLE = 'AVAILABLE',\n  UNREACHABLE = 'UNREACHABLE',\n  HIDDEN = 'HIDDEN',\n}\n/**\n * taken implies reachable. reachable implies visible.\n */\n\nexport type NodeTakenStatus = {\n  taken: boolean;\n};\nexport type NodeVisibleStatus = {\n  visible: boolean;\n};\nexport type NodeReachableStatus = {\n  reachable: boolean;\n};\n/**\n * Immutable, readable booleans\n */\nexport enum BoolEnum {\n  true = 'true',\n  false = 'false',\n}\n// eslint-disable-next-line\nexport const NodeTakenStatus: {\n  [k in BoolEnum]: NodeTakenStatus;\n} = {\n  true: { taken: true },\n  false: { taken: false },\n};\n// eslint-disable-next-line\nexport const NodeVisibleStatus: {\n  [k in BoolEnum]: NodeVisibleStatus;\n} = {\n  true: { visible: true },\n  false: { visible: false },\n};\n// eslint-disable-next-line\nexport const NodeReachableStatus: {\n  [k in BoolEnum]: NodeReachableStatus;\n} = {\n  true: { reachable: true },\n  false: { reachable: false },\n};\n\nexport enum LockStatus {\n  CLOSED = 'CLOSED',\n  TICKING = 'TICKING',\n  OPEN = 'OPEN',\n}\n","import * as Pixi from 'pixi.js';\nimport { GameState } from '../../data/GameState';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Const } from '../../lib/util/misc';\nimport { engageLifecycle, LifecycleHandlerBase } from './LifecycleHandler';\nimport { TooltipInfo } from './TooltipComponent';\n\ntype Props = {\n  args: {\n    renderer: Pixi.Renderer;\n    markForceUpdate: (childInstance: any) => void;\n  };\n  delta: number;\n  gameState: Const<GameState>;\n  appSize: Vector2;\n  tick: number;\n  tooltip: TooltipInfo;\n};\n\ntype State = {};\n\nclass FixedCameraStageComponent extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this.container = new Pixi.Container();\n    this.container.sortableChildren = true;\n    this.state = {};\n  }\n\n  protected renderSelf(props: Props) {}\n}\n\nconst wrapped = engageLifecycle(FixedCameraStageComponent);\n// eslint-disable-next-line\ntype wrapped = FixedCameraStageComponent;\nexport { wrapped as FixedCameraStageComponent };\nexport type { Props as FixedCameraStageComponentProps };\n","import { EPSILON } from '../epsilon_math';\nimport { IVector2, Vector2 } from './vector2';\n\nexport interface IVector3 {\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport class Vector3 {\n  private _x: number;\n  private _y: number;\n  private _z: number;\n\n  public get x(): number {\n    return this._x;\n  }\n  public get y(): number {\n    return this._y;\n  }\n  public get z(): number {\n    return this._z;\n  }\n\n  constructor();\n  constructor(x: number, y: number, z: number);\n  constructor(props: IVector3);\n  constructor(\n    propsOrX: IVector3 | number = { x: 0, y: 0, z: 0 },\n    y?: number,\n    z?: number\n  ) {\n    if (typeof propsOrX === 'number') {\n      this._x = propsOrX;\n      this._y = y!;\n      this._z = z!;\n    } else {\n      this._x = propsOrX.x;\n      this._y = propsOrX.y;\n      this._z = propsOrX.z;\n    }\n  }\n\n  // public get half(): Vector3 {\n  //   return new Vector3({ x: this.x / 2, y: this.y / 2 });\n  // }\n\n  public static Zero: Vector3 = new Vector3(0, 0, 0);\n  public static One: Vector3 = new Vector3(1, 1, 1);\n\n  static IsVector3(x: any): x is Vector3 {\n    return x instanceof Vector3;\n  }\n\n  static FromVector2(p: IVector2, z: number = 0) {\n    return new Vector3(p.x, p.y, z);\n  }\n\n  // static Random(highX: number, highY: number, lowX = 0, lowY = 0) {\n  //   return new Vector3({\n  //     x: Util.RandRange(lowX, highX),\n  //     y: Util.RandRange(lowY, highY),\n  //   });\n  // }\n\n  hash(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return `[${this.x}, ${this.y}, ${this.z}]`;\n  }\n\n  // invert(): Vector3 {\n  //   return new Vector3({\n  //     x: -this.x,\n  //     y: -this.y,\n  //   });\n  // }\n\n  // round(): Vector3 {\n  //   return new Vector3({\n  //     x: Math.round(this.x),\n  //     y: Math.round(this.y),\n  //   });\n  // }\n\n  // floor(): Vector3 {\n  //   return new Vector3({\n  //     x: Math.floor(this.x),\n  //     y: Math.floor(this.y),\n  //   });\n  // }\n\n  // taxicabDistance(p: Vector3): number {\n  //   return Math.abs(p.x - this.x) + Math.abs(p.y - this.y);\n  // }\n\n  // diagonalDistance(p: IVector3): number {\n  //   return Math.max(Math.abs(p.x - this.x), Math.abs(p.y - this.y));\n  // }\n\n  // distance(p: IVector3): number {\n  //   let dx = Math.abs(p.x - this.x);\n  //   let dy = Math.abs(p.y - this.y);\n\n  //   return Math.sqrt(dx * dx + dy * dy);\n  // }\n\n  // translate(p: { x: number; y: number }): Vector3 {\n  //   return new Vector3({\n  //     x: this.x + p.x,\n  //     y: this.y + p.y,\n  //   });\n  // }\n\n  subtract(p: IVector3): Vector3 {\n    return new Vector3({\n      x: this.x - p.x,\n      y: this.y - p.y,\n      z: this.z - p.z,\n    });\n  }\n\n  add(pOrX: IVector3 | number, y?: number, z?: number): Vector3 {\n    if (typeof pOrX === 'number') {\n      return new Vector3({\n        x: this.x + pOrX,\n        y: this.y + y!,\n        z: this.z + z!,\n      });\n    } else {\n      return new Vector3({\n        x: this.x + pOrX.x,\n        y: this.y + pOrX.y,\n        z: this.z + pOrX.z,\n      });\n    }\n  }\n\n  addX(x: number): Vector3 {\n    return new Vector3({\n      x: this.x + x,\n      y: this.y,\n      z: this.z,\n    });\n  }\n\n  addY(y: number): Vector3 {\n    return new Vector3({\n      x: this.x,\n      y: this.y + y,\n      z: this.z,\n    });\n  }\n\n  addZ(z: number): Vector3 {\n    return new Vector3({\n      x: this.x,\n      y: this.y,\n      z: this.z + z,\n    });\n  }\n\n  subtractX(x: number): Vector3 {\n    return new Vector3({\n      x: this.x - x,\n      y: this.y,\n      z: this.z,\n    });\n  }\n\n  subtractY(y: number): Vector3 {\n    return new Vector3({\n      x: this.x,\n      y: this.y - y,\n      z: this.z,\n    });\n  }\n\n  subtractZ(z: number): Vector3 {\n    return new Vector3({\n      x: this.x,\n      y: this.y,\n      z: this.z - z,\n    });\n  }\n\n  // clampY(low: number, high: number): Vector3 {\n  //   let newY = this.y;\n\n  //   if (newY < low) {\n  //     newY = low;\n  //   }\n  //   if (newY > high) {\n  //     newY = high;\n  //   }\n\n  //   return new Vector3({\n  //     x: this.x,\n  //     y: newY,\n  //   });\n  // }\n\n  scale(about: IVector3, amount: IVector3): Vector3 {\n    return new Vector3({\n      x: (this.x - about.x) * amount.x + about.x,\n      y: (this.y - about.y) * amount.y + about.y,\n      z: (this.z - about.z) * amount.z + about.z,\n    });\n  }\n\n  // rotate(origin: Vector3, angle: number): Vector3 {\n  //   angle = angle / (180 / Math.PI);\n\n  //   return new Vector3({\n  //     x:\n  //       Math.cos(angle) * (this.x - origin.x) -\n  //       Math.sin(angle) * (this.y - origin.y) +\n  //       origin.x,\n  //     y:\n  //       Math.sin(angle) * (this.x - origin.x) +\n  //       Math.cos(angle) * (this.y - origin.y) +\n  //       origin.y,\n  //   });\n  // }\n\n  equals(other: IVector3 | undefined | null): boolean {\n    if (other === undefined || other === null) {\n      return false;\n    }\n\n    return (\n      Math.abs(this.x - other.x) < EPSILON &&\n      Math.abs(this.y - other.y) < EPSILON &&\n      Math.abs(this.z - other.z) < EPSILON\n    );\n  }\n\n  multiply(other: IVector3 | number): Vector3 {\n    if (typeof other === 'number') {\n      return new Vector3({\n        x: this.x * other,\n        y: this.y * other,\n        z: this.z * other,\n      });\n    } else {\n      return new Vector3({\n        x: this.x * other.x,\n        y: this.y * other.y,\n        z: this.z * other.z,\n      });\n    }\n  }\n\n  divide(other: IVector3 | number): Vector3 {\n    if (typeof other === 'number') {\n      return new Vector3({\n        x: this.x / other,\n        y: this.y / other,\n        z: this.z / other,\n      });\n    } else {\n      return new Vector3({\n        x: this.x / other.x,\n        y: this.y / other.y,\n        z: this.z / other.z,\n      });\n    }\n  }\n\n  toJSON(): any {\n    return {\n      __type: 'Vector3',\n      x: this.x,\n      y: this.y,\n      z: this.z,\n    };\n  }\n\n  // transform(trans: Vector3, scale: number): Vector3 {\n  //   return new Vector3({\n  //     x: Math.floor((this.x - trans.x) * scale),\n  //     y: Math.floor((this.y - trans.y) * scale),\n  //   });\n  // }\n\n  // normalize(): Vector3 {\n  //   if (this.x === 0 && this.y === 0) {\n  //     return this;\n  //   }\n\n  //   const length = Math.sqrt(this.x * this.x + this.y * this.y);\n\n  //   return new Vector3({\n  //     x: this.x / length,\n  //     y: this.y / length,\n  //   });\n  // }\n\n  pairXY(): Vector2 {\n    return new Vector2({\n      x: this.x,\n      y: this.y,\n    });\n  }\n\n  withX(newX: number): Vector3 {\n    return new Vector3({\n      x: newX,\n      y: this.y,\n      z: this.z,\n    });\n  }\n\n  withY(newY: number): Vector3 {\n    return new Vector3({\n      x: this.x,\n      y: newY,\n      z: this.z,\n    });\n  }\n\n  withZ(newZ: number): Vector3 {\n    return new Vector3({\n      x: this.x,\n      y: this.y,\n      z: newZ,\n    });\n  }\n\n  // invertX(): Vector3 {\n  //   return new Vector3({\n  //     x: -this.x,\n  //     y: this.y,\n  //   });\n  // }\n\n  // lerp(other: Vector3, t: number): Vector3 {\n  //   if (t > 1 || t < 0) {\n  //     console.error('Lerp t must be between 0 and 1.');\n  //   }\n  //   if (t === 0) return this;\n  //   if (t === 1) return other;\n\n  //   return this.scale({ x: 0, y: 0 }, { x: 1 - t, y: 1 - t }).add(\n  //     other.scale({ x: 0, y: 0 }, { x: t, y: t })\n  //   );\n  // }\n\n  // lerp2D(other: Vector3, tx: number, ty: number): Vector3 {\n  //   if (tx > 1 || tx < 0 || ty > 1 || ty < 0) {\n  //     console.error('Lerp t must be between 0 and 1.');\n  //   }\n  //   return this.scale({ x: 0, y: 0 }, { x: 1 - tx, y: 1 - ty }).add(\n  //     other.scale({ x: 0, y: 0 }, { x: tx, y: ty })\n  //   );\n  // }\n\n  // coserp(other: Vector3, t: number): Vector3 {\n  //   t = 0.5 * (1 + Math.cos(2 * t * Math.PI));\n\n  //   return this.lerp(other, t);\n  // }\n\n  static Deserialize(obj: any): Vector3 | null {\n    if (\n      !obj ||\n      !obj.hasOwnProperty('x') ||\n      !obj.hasOwnProperty('y') ||\n      !obj.hasOwnProperty('z')\n    ) {\n      console.error('Failed deserializing vector3');\n      return null;\n    }\n\n    return new Vector3({\n      x: obj.x,\n      y: obj.y,\n      z: obj.z,\n    });\n  }\n\n  static Serialize(obj: IVector3): string {\n    return JSON.stringify(this.SerializeToObject(obj));\n  }\n\n  static SerializeToObject(obj: IVector3): object {\n    return { x: obj.x, y: obj.y, z: obj.z };\n  }\n}\n","import { Vector3 } from '../../../lib/util/geometry/vector3';\nimport { squirrel3 } from '../../../lib/util/random';\nimport {\n  randomDice,\n  randomSwitch,\n  randomUniform,\n  randomValue,\n} from '../../../lib/util/randomHelpers';\n\ntype NodeContentsFactoryConfig = {};\n\nexport interface NodeContents {\n  lines: NodeContentsLine[];\n\n  condition?: NodeContentsCondition;\n}\n\nexport interface NodeContentsCondition {\n  type: 'SPEND';\n  attribute: Attribute;\n  amount: number;\n}\n\nexport interface NodeContentsLine {\n  amount: number;\n  attribute: Attribute;\n  modifier: Modifier;\n}\n\nexport enum Attribute {\n  RED0 = 'RED0',\n  RED1 = 'RED1',\n  RED2 = 'RED2',\n  DEL0 = 'DEL0',\n  DEL1 = 'DEL1',\n  DEL2 = 'DEL2',\n}\n\nexport enum Modifier {\n  FLAT = 'FLAT',\n  INCREASED = 'INCREASED',\n}\n\nconst WEIGHTS = {\n  DECISION_0: {\n    EMPTY: 800,\n    NO_SPEND: 100,\n    SPEND: 0,\n  },\n  // how many different attributes are in the non-spend section\n  DECISION_1: {\n    SINGLE: 500,\n    DOUBLE: 0,\n  },\n  // if we are doing a single attribute, what attribute is it going to be\n  SINGLE_COLORS: {\n    [Attribute.RED0]: 100,\n    [Attribute.RED1]: 100,\n    [Attribute.RED2]: 100,\n    [Attribute.DEL0]: 10,\n    [Attribute.DEL1]: 10,\n    [Attribute.DEL2]: 10,\n  },\n  // if we are doing a single attribute, what modifier is it going to be\n  SINGLE_MODIFIERS: {\n    [Modifier.FLAT]: 100,\n    [Modifier.INCREASED]: 75,\n  },\n};\n\nexport class NodeContentsFactory {\n  public config: NodeContentsFactoryConfig;\n\n  constructor(config: NodeContentsFactoryConfig) {\n    this.config = config;\n  }\n\n  private createSingle(args: { randInt: number }): NodeContentsLine {\n    const attribute = randomValue<typeof Attribute>({\n      randInt: args.randInt,\n      weights: WEIGHTS.SINGLE_COLORS,\n    });\n\n    const modifier = randomValue<typeof Modifier>({\n      randInt: squirrel3(args.randInt),\n      weights: WEIGHTS.SINGLE_MODIFIERS,\n    });\n\n    let amount = 0;\n    if (modifier === Modifier.FLAT) {\n      amount = randomDice({\n        randInt: squirrel3(args.randInt + 1),\n        formula: '2d6',\n        plus: 8,\n      });\n    } else {\n      amount = randomUniform({\n        randInt: squirrel3(args.randInt + 2),\n        min: 4,\n        max: 7,\n        increment: 0.5,\n        inclusive: true,\n      });\n    }\n\n    return {\n      attribute: Attribute[attribute],\n      amount,\n      modifier: Modifier[modifier],\n    };\n  }\n\n  private createNoSpend(args: { randInt: number }): NodeContents {\n    return randomSwitch<NodeContents>({\n      randInt: args.randInt,\n      weights: WEIGHTS.DECISION_1,\n      behaviors: {\n        SINGLE: (randInt) => {\n          return {\n            lines: [this.createSingle({ randInt })],\n          };\n        },\n        DOUBLE: (randInt) => {\n          return {\n            lines: [\n              this.createSingle({ randInt }),\n              this.createSingle({ randInt: squirrel3(randInt) }),\n            ],\n          };\n        },\n      },\n    });\n  }\n\n  public create(args: { seed: number; location: Vector3 }): NodeContents {\n    const { seed, location } = args;\n    if (location.equals(Vector3.Zero)) {\n      return {\n        lines: [],\n      };\n    }\n\n    return randomSwitch<NodeContents>({\n      randInt: squirrel3(\n        seed +\n          location.x +\n          location.y +\n          squirrel3(seed + location.x + location.z)\n      ),\n      weights: WEIGHTS.DECISION_0,\n      behaviors: {\n        EMPTY: (randInt: number) => {\n          return {\n            lines: [],\n          };\n        },\n        NO_SPEND: (randInt: number) => {\n          return this.createNoSpend({ randInt });\n        },\n        SPEND: (randInt: number) => {\n          const base = this.createNoSpend({ randInt });\n\n          const attribute = randomValue<typeof Attribute>({\n            randInt,\n            weights: {\n              [Attribute.RED0]: 100,\n              [Attribute.RED1]: 100,\n              [Attribute.RED2]: 100,\n              [Attribute.DEL0]: 0,\n              [Attribute.DEL1]: 0,\n              [Attribute.DEL2]: 0,\n            },\n          });\n\n          return {\n            ...base,\n            condition: {\n              type: 'SPEND',\n              amount: 12,\n              attribute: Attribute[attribute],\n            },\n          };\n        },\n      },\n    });\n  }\n}\n","import { INTMAX32, squirrel3 } from './random';\n\nexport function randomSwitch<T>(args: {\n  randInt: number;\n  weights: { [k: string]: number };\n  behaviors: { [k: string]: (randInt: number) => T };\n}): T {\n  const { randInt, weights, behaviors } = args;\n  const p = randInt / INTMAX32;\n  const newRandInt = squirrel3(randInt);\n  const weightTotal = Object.values(weights).reduce((pv, cv) => pv + cv);\n  let unusedWeight = p * weightTotal;\n  for (const [key, weight] of Object.entries(weights)) {\n    if (unusedWeight <= weight) {\n      // use key\n      return behaviors[key](newRandInt);\n    } else {\n      unusedWeight -= weight;\n    }\n  }\n  throw Error();\n}\n\nexport function randomValue<T>(args: {\n  randInt: number;\n  weights: { [k in keyof T]: number };\n}): keyof T {\n  const { randInt, weights } = args;\n  const p = randInt / INTMAX32;\n  const weightTotal = (Object.values(weights) as number[]).reduce(\n    (pv, cv) => pv + cv\n  );\n  let unusedWeight = p * weightTotal;\n  for (const [key, weight] of Object.entries(weights) as [keyof T, number][]) {\n    if (unusedWeight <= weight) {\n      // use key\n      return key;\n    } else {\n      unusedWeight -= weight;\n    }\n  }\n  throw Error();\n}\n\nexport function randomUniform(args: {\n  randInt: number;\n  min: number;\n  max: number;\n  increment?: number;\n  inclusive?: boolean;\n}): number {\n  const { randInt, min, max, increment = 1, inclusive = true } = args;\n  const p = randInt / INTMAX32;\n  let numBuckets = Math.ceil((max - min) / increment);\n  if (min + increment * numBuckets === max && inclusive === true) {\n    numBuckets += 1;\n  }\n  const g = Math.floor(p * numBuckets);\n  return min + g * increment;\n}\n\nexport function randomDice(args: {\n  randInt: number;\n  formula: string;\n  plus?: number;\n}): number {\n  const { randInt, formula, plus = 0 } = args;\n  const numDice = parseInt(formula.split('d')[0]);\n  const numPips = parseInt(formula.split('d')[1]);\n  let val = 0;\n  for (let i = 0; i < numDice; i++) {\n    val += randomUniform({\n      randInt: squirrel3(randInt + i),\n      min: 1,\n      max: numPips,\n      inclusive: true,\n    });\n  }\n  return val + plus;\n}\n","import {\n  Attribute,\n  Modifier,\n  NodeContentsCondition,\n  NodeContentsLine,\n} from './NodeContentsFactory';\n\nexport const AttributeSymbolMap = {\n  [Attribute.RED0]: '🔴',\n  [Attribute.RED1]: '🟢',\n  [Attribute.RED2]: '🔵',\n  [Attribute.DEL0]: '⚔️',\n  [Attribute.DEL1]: '🛡',\n  [Attribute.DEL2]: '✨',\n};\n\nexport const AttributeDescriptionMap = {\n  [Attribute.RED0]: 'Red',\n  [Attribute.RED1]: 'Green',\n  [Attribute.RED2]: 'Blue',\n  [Attribute.DEL0]: 'Offense',\n  [Attribute.DEL1]: 'Defense',\n  [Attribute.DEL2]: 'Magic',\n};\n\nexport const AttributeDescriptionReverseMap: { [k: string]: Attribute } = {\n  Red: Attribute.RED0,\n  Green: Attribute.RED1,\n  Blue: Attribute.RED2,\n  Offense: Attribute.DEL0,\n  Defense: Attribute.DEL1,\n  Magic: Attribute.DEL2,\n};\n\nexport const ModifierSymbolMap = {\n  [Modifier.FLAT]: '+',\n  [Modifier.INCREASED]: '%',\n};\nexport const ModifierDescriptionMap = {\n  [Modifier.FLAT]: 'flat',\n  [Modifier.INCREASED]: 'increased',\n};\nexport const ModifierDescriptionReverseMap: { [k: string]: Modifier } = {\n  flat: Modifier.FLAT,\n  increased: Modifier.INCREASED,\n};\n\nexport function nodeContentsLineToString(line: NodeContentsLine): string {\n  if (line.modifier === Modifier.FLAT) {\n    return `+${line.amount} ${AttributeDescriptionMap[line.attribute]}`;\n  } else {\n    return `${line.amount}% increased ${\n      AttributeDescriptionMap[line.attribute]\n    }`;\n  }\n}\n\nexport function nodeContentsConditionToString(\n  condition: NodeContentsCondition\n): string {\n  return `SPEND: ${condition.amount} ${\n    AttributeDescriptionMap[condition.attribute]\n  }`;\n}\n","import * as Pixi from 'pixi.js';\nimport { GameState } from '../../data/GameState';\nimport {\n  LockStatus,\n  NodeReachableStatus,\n  NodeTakenStatus,\n  NodeVisibleStatus,\n} from '../../data/NodeStatus';\nimport { StrategicSearchState } from '../../data/PlayerUIState';\nimport {\n  Attribute,\n  NodeContents,\n} from '../../game/worldGen/nodeContents/NodeContentsFactory';\nimport {\n  AttributeDescriptionReverseMap,\n  ModifierDescriptionReverseMap,\n} from '../../game/worldGen/nodeContents/NodeContentsRendering';\nimport { PixiPointFrom } from '../../lib/pixi/pixify';\nimport { KeyedHashMap } from '../../lib/util/data_structures/hash';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport {\n  Const,\n  extractDeps,\n  extractAccessPaths,\n  interpolateColor,\n  addColor,\n} from '../../lib/util/misc';\nimport COLORS from '../colors';\nimport { engageLifecycle, LifecycleHandlerBase } from './LifecycleHandler';\n\ntype Props = {\n  delta: number;\n  args: {\n    position: Vector2;\n    textures: {\n      circle: Pixi.Texture;\n      rect: Pixi.Texture;\n      square: Pixi.Texture;\n    };\n  };\n  appSize: Vector2;\n  gameState: StrategicHexGridSubState;\n};\n\n/**\n * The subset of the game state that is relevant to game area components.\n */\nexport function extractStrategicHexGridSubState(gameState: Const<GameState>) {\n  return {\n    playerUI: {\n      virtualGridLocation: gameState.playerUI.virtualGridLocation,\n      cursoredNodeLocation: gameState.playerUI.cursoredNodeLocation,\n      strategicSearch: gameState.playerUI.strategicSearch,\n    },\n    playerSave: {\n      allocationStatusMap: gameState.playerSave.allocationStatusMap,\n    },\n    computed: {\n      fogOfWarStatusMap: gameState.computed.fogOfWarStatusMap,\n      reachableStatusMap: gameState.computed.reachableStatusMap,\n      lockStatusMap: gameState.computed.lockStatusMap,\n    },\n    worldGen: {\n      nodeContentsMap: gameState.worldGen.nodeContentsMap,\n      lockMap: gameState.worldGen.lockMap,\n    },\n  };\n}\nexport type StrategicHexGridSubState = ReturnType<\n  typeof extractStrategicHexGridSubState\n>;\nexport const depsStrategicHexGridSubState = extractDeps(\n  extractStrategicHexGridSubState\n);\n\ntype State = {};\n\nclass StrategicHexGridComponent extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n  private graphics: Pixi.Sprite;\n  private hexGrid: KeyedHashMap<Vector2, Pixi.Sprite> = new KeyedHashMap();\n  private animations: KeyedHashMap<Vector2, any> = new KeyedHashMap();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      numClicks: 0,\n      descriptionText: '',\n    };\n    this.updateSelf(props);\n    this.container = new Pixi.Container();\n\n    // test graphics\n    this.graphics = new Pixi.Sprite();\n    this.graphics.texture = props.args.textures.circle;\n    this.graphics.tint = COLORS.borderBlack;\n    this.graphics.visible = false;\n    this.container.addChild(this.graphics);\n\n    // populate a grid\n    // TODO(bowei): unhardcode\n    for (let j = -20; j <= 20; j++) {\n      for (let i = -35 + Math.floor(j / 2); i <= 35 + Math.floor(j / 2); i++) {\n        const graphics = new Pixi.Sprite();\n        graphics.texture = props.args.textures.circle;\n        graphics.tint = COLORS.nodePink;\n        // graphics.visible = false;\n        // if ((i == 0 && j == 0) || (i == 5 && j == 5)) {\n        //   // graphics.visible = true;\n        //   graphics.tint = COLORS.borderBlack;\n        // }\n        graphics.position = PixiPointFrom(\n          props.appSize.divide(2).add(new Vector2(30 * i - 15 * j, -26 * j))\n        );\n        this.container.addChild(graphics);\n        this.hexGrid.put(new Vector2(i, j), graphics);\n      }\n    }\n  }\n\n  protected updateSelf(props: Props) {\n    const { delta } = props;\n    for (let [v, graphics] of this.hexGrid.entries()) {\n      const animation = this.animations.get(v);\n      if (!animation) continue;\n\n      // the last frame was rendered at this phase in the animation\n      let phase = animation.phase || 0;\n\n      // increment it. phase of 1 == a full period == animation.period secs\n      let newPhase =\n        (phase + (delta * (1 / 60) * 1) / animation.periodSecs) % 1;\n\n      // animation starts with bezierX == 0, goes up to 1, then back down\n      let bezierX = 1 - Math.abs(newPhase * 2 - 1);\n      /* NOTE(bowei): specifically ease-in-out. we want to draw attention both to the lit-up state and to the base state. */\n      // ease-in\n      // let bezierY = ( bezierX * bezierX); // we use the shitty approximation cubicBezier(0.42,0,1,1) == x ** 2.\n      // let bezierY = (bezierX * bezierX) * (1.5 - 0.5 * bezierX); // adjustment to decrease the slope at x=1 from 2 to 1.5\n      // ease-in-out\n      let bezierY =\n        bezierX < 0.5\n          ? 2 * (bezierX * bezierX)\n          : 1 - 2 * (1 - bezierX) * (1 - bezierX);\n\n      // calculate the proper tint now\n      let tintProp = 1 - bezierY; // animation should start with tint == 1, go back down to 0, go back up\n\n      // set the tint\n      // tintProp = tintProp * .75 + 0.25; // minimum opacity = 0.25\n      graphics.tint = interpolateColor({\n        target: animation.max,\n        base: animation.min,\n        proportion: tintProp,\n      });\n      // console.log({ delta, phase, newPhase, bezierX, tintProp, tint: graphics.tint });\n\n      // update phase on animation object\n      animation.phase = newPhase;\n      // animation\n    }\n  }\n\n  protected renderSelf(props: Props) {\n    this.container.position = PixiPointFrom(props.args.position);\n    this.graphics.position = PixiPointFrom(props.appSize.divide(2));\n    const { gameState } = props;\n\n    for (let [v, graphics] of this.hexGrid.entries()) {\n      const basePosition = props.appSize\n        .divide(2)\n        .add(new Vector2(30 * v.x - 15 * v.y, -26 * v.y)); // 30 x 26 hex units\n      graphics.position = PixiPointFrom(basePosition);\n      // if (v.x <= 1 && v.x >= -1 && v.y <= 1 && v.y >= -1) {\n\n      // } else {\n      //   continue;\n      // }\n      // props.allocationStatusMap.get(props.virtualGridLocation.add(Vector3.FromVector2(v)))\n      const virtualLocation = gameState.playerUI.virtualGridLocation.add(\n        Vector3.FromVector2(v)\n      );\n      const nodeVisibleStatus =\n        gameState.computed.fogOfWarStatusMap?.get(virtualLocation) ||\n        NodeVisibleStatus.false;\n      const nodeTakenStatus =\n        gameState.playerSave.allocationStatusMap.get(virtualLocation) ||\n        NodeTakenStatus.false;\n      const nodeReachableStatus =\n        gameState.computed.reachableStatusMap?.get(virtualLocation) ||\n        NodeReachableStatus.false;\n      const lockData = gameState.worldGen.lockMap.get(virtualLocation);\n      const lockStatus = gameState.computed.lockStatusMap?.get(virtualLocation);\n\n      if (nodeTakenStatus.taken) {\n        graphics.visible = true;\n        graphics.tint = COLORS.borderBlack;\n      } else if (nodeReachableStatus.reachable) {\n        // only recolor if it is not locked\n        if (!lockData || lockStatus === LockStatus.OPEN) {\n          graphics.visible = true;\n          graphics.tint = COLORS.nodeLavender;\n        } else {\n          // use the ordinary visible-but-unreachable coloring\n          graphics.visible = true;\n          graphics.tint = COLORS.nodePink;\n        }\n      } else if (nodeVisibleStatus.visible) {\n        graphics.visible = true;\n        graphics.tint = COLORS.nodePink;\n      } else {\n        // hidden\n        graphics.visible = false;\n      }\n\n      // graphics.anchor = PixiPointFrom(Vector2.Zero);\n      // graphics.pivot = PixiPointFrom(Vector2.Zero);\n      if (lockData && lockStatus !== LockStatus.OPEN) {\n        graphics.texture = props.args.textures.rect;\n        graphics.position = PixiPointFrom(basePosition);\n        graphics.position.x -= props.args.textures.rect.width / 2;\n        graphics.position.y -= props.args.textures.rect.height / 2;\n        // graphics.tint = COLORS.borderBlack;\n      } else {\n        graphics.texture = props.args.textures.circle;\n        graphics.position = PixiPointFrom(basePosition);\n        graphics.position.x -= props.args.textures.circle.width / 2;\n        graphics.position.y -= props.args.textures.circle.height / 2;\n      }\n\n      const nodeContents = gameState.worldGen.nodeContentsMap.get(\n        virtualLocation\n      );\n\n      const matched = matchStrategicSearch({\n        nodeContents,\n        query: gameState.playerUI.strategicSearch,\n      });\n\n      if (matched) {\n        // graphics.texture = props.args.textures.square;\n        // graphics.position = PixiPointFrom(basePosition);\n        // graphics.position.x -= props.args.textures.square.width / 2;\n        // graphics.position.y -= props.args.textures.square.height / 2;\n        // graphics.tint = COLORS.nodeBlue;\n        this.animations.put(v, {\n          max: addColor(COLORS.nodeBlue, graphics.tint),\n          // max: graphics.tint === COLORS.borderBlack ? COLORS.nodeLavender : COLORS.nodeBlue,\n          // max: COLORS.nodeBlue,\n          // max: graphics.tint,\n          min: graphics.tint,\n          periodSecs: 2,\n          mode: 'start-min ease-in-out',\n          phase: 0,\n        });\n      } else {\n        this.animations.put(v, null);\n      }\n    }\n  }\n\n  /**\n   * @param staleProps\n   * @param staleState\n   * @param props\n   * @param state\n   * @returns false if staleProps == nextProps and staleState == state (which will cause the component to be memoized)\n   *          true if the props or state differ anywhere\n   */\n  protected shouldUpdate(\n    staleProps: Props,\n    staleState: State,\n    props: Props,\n    state: State\n  ): boolean {\n    for (let key of Object.keys(staleProps) as (keyof Props)[]) {\n      // if (key === 'delta' || key === 'args' || key === 'updaters') {\n      if (key === 'args' || key === 'delta') {\n        continue;\n      }\n      if (key === 'gameState') {\n        const staleGameState = staleProps[key];\n        const gameState = props[key];\n        const staleDeps = depsStrategicHexGridSubState(staleGameState);\n        const deps = depsStrategicHexGridSubState(gameState);\n        for (let i = 0; i < staleDeps.length; i++) {\n          if (deps[i] !== staleDeps[i]) {\n            console.log(\n              `hexgrid substate differed in ${i} : ${extractAccessPaths(\n                extractStrategicHexGridSubState\n              )[i].join('.')}, returning true for shouldupdate`\n            );\n            return true;\n          }\n        }\n        continue;\n      }\n      if (staleProps[key] !== props[key]) {\n        console.log(`hexgrid shouldUpdate differed in ${key}, returning true`);\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nconst wrapped = engageLifecycle(StrategicHexGridComponent);\n// eslint-disable-next-line\ntype wrapped = StrategicHexGridComponent;\nexport { wrapped as StrategicHexGridComponent };\nexport type { Props as StrategicHexGridComponentProps };\n\nexport function matchStrategicSearch(args: {\n  nodeContents: NodeContents;\n  query: StrategicSearchState;\n}): boolean {\n  const { nodeContents, query } = args;\n\n  // missing query! return no matches\n  if (!query) {\n    return false;\n  }\n\n  // first separate out the terms\n  const highlight1 = query.highlight1.value;\n  const terms = highlight1\n    .split(' ')\n    .filter((it) => !!it)\n    .map((wrappedTerm) => wrappedTerm.slice(1, wrappedTerm.length - 1));\n\n  // missing query! return no matches\n  if (terms.length === 0) {\n    return false;\n  }\n\n  // for ALL of the terms, make sure node contents matches\n  let unmatchedTerm: string | null = null;\n  console.log({ terms });\n  for (let term of terms) {\n    // is the term a attribute or modifier?\n    const maybeAttribute = AttributeDescriptionReverseMap[term];\n    const maybeModifier = ModifierDescriptionReverseMap[term];\n    if (!!maybeAttribute) {\n      if (\n        nodeContents.lines?.[0]?.attribute === maybeAttribute ||\n        nodeContents.lines?.[1]?.attribute === maybeAttribute\n      ) {\n        // console.log(\"matched by attribute\" , maybeAttribute);\n      } else {\n        unmatchedTerm = maybeAttribute;\n        break;\n      }\n    } else if (!!maybeModifier) {\n      if (\n        nodeContents.lines?.[0]?.modifier === maybeModifier ||\n        nodeContents.lines?.[1]?.modifier === maybeModifier\n      ) {\n        // console.log(\"matched by modifier\" , maybeModifier);\n      } else {\n        unmatchedTerm = maybeModifier;\n        break;\n      }\n    } else if (term === '*') {\n      if (\n        nodeContents.lines?.[0]?.attribute ||\n        nodeContents.lines?.[1]?.attribute\n      ) {\n        // console.log(\"matched by wild card attribute\");\n      } else {\n        unmatchedTerm = term;\n        break;\n      }\n    } else {\n      console.error('unparsed term: ', term);\n      return false;\n    }\n  }\n  if (unmatchedTerm) {\n    return false; // match failed\n  }\n  return true;\n}\n","import * as Pixi from 'pixi.js';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { GameState } from '../../data/GameState';\nimport {\n  generatePointNodeTexture,\n  PointNodeTextureSet,\n} from '../textures/PointNodeTexture';\nimport { Const } from '../../lib/util/misc';\nimport { Lazy } from '../../lib/util/lazy';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { engageLifecycle, LifecycleHandlerBase } from './LifecycleHandler';\nimport { FixedCameraStageComponent } from './FixedCameraStageComponent';\nimport { TooltipInfo } from './TooltipComponent';\nimport COLORS from '../colors';\nimport {\n  extractStrategicHexGridSubState,\n  StrategicHexGridComponent,\n  StrategicHexGridComponentProps,\n} from './StrategicHexGridComponent';\nimport {\n  generateSimpleTextures,\n  SimpleTextureSet,\n} from '../textures/SimpleTextures';\n\ntype State = {\n  pointNodeTexture: Lazy<PointNodeTextureSet>;\n  simpleTexture: Lazy<SimpleTextureSet>;\n  tick: number;\n  playerCurrentZ: number;\n  tooltip: TooltipInfo;\n};\n\ntype Props = {\n  args: {\n    renderer: Pixi.Renderer;\n    markForceUpdate: (childInstance: any) => void;\n  };\n  updaters: UpdaterGeneratorType2<GameState>;\n  delta: number;\n  gameState: Const<GameState>;\n  appSize: Vector2;\n};\n\nclass RootComponent2 extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n  private stateUpdaters: UpdaterGeneratorType2<State>;\n  protected fireStateUpdaters: () => void;\n\n  /* children */\n  // Contains HUD, and other entities that don't move when game camera moves\n  private fixedCameraStage: FixedCameraStageComponent;\n  // Contains game entities that move when game camera pans/zooms. Highly encouraged to have further subdivions.\n  private actionStage: Pixi.Container;\n  // Contains a few entities that doesn't move when game camera moves, but located behind action stage entities, e.g. static backgrounds\n  private backdropStage: Pixi.Container;\n  // public keyboard: KeyboardState;\n  private strategicHexGrid: StrategicHexGridComponent;\n\n  private backdrop: Pixi.Graphics;\n\n  constructor(props: Props) {\n    super(props);\n    this.container = new Pixi.Container();\n    this.container.sortableChildren = true;\n    ({\n      state: this.state,\n      stateUpdaters: this.stateUpdaters,\n      fireStateUpdaters: this.fireStateUpdaters,\n    } = this.useState<State, RootComponent2>(this, {\n      pointNodeTexture: new Lazy(() =>\n        generatePointNodeTexture(props.args.renderer)\n      ),\n      simpleTexture: new Lazy(() =>\n        generateSimpleTextures(props.args.renderer)\n      ),\n      tick: 0,\n      playerCurrentZ: 0,\n      tooltip: {\n        visible: false,\n        position: undefined,\n        text: '',\n      },\n    }));\n\n    const fixedCameraStagePropsFactory = (props: Props, state: State) => {\n      return {\n        args: {\n          renderer: props.args.renderer,\n          markForceUpdate: this.markForceUpdate,\n        },\n        delta: props.delta,\n        gameState: props.gameState,\n        appSize: props.appSize,\n        tick: state.tick,\n        tooltip: { ...state.tooltip },\n      };\n    };\n    this.fixedCameraStage = new FixedCameraStageComponent(\n      fixedCameraStagePropsFactory(props, this.state)\n    );\n    this.addChild({\n      childClass: FixedCameraStageComponent,\n      instance: this.fixedCameraStage,\n      propsFactory: fixedCameraStagePropsFactory,\n    });\n\n    this.actionStage = new Pixi.Sprite();\n    this.actionStage.zIndex = 0;\n    this.actionStage.sortableChildren = true;\n    this.container.addChild(this.actionStage);\n\n    const strategicHexGridPropsFactory = (\n      props: Props,\n      state: State\n    ): StrategicHexGridComponentProps => {\n      const { gameState } = props;\n      return {\n        delta: props.delta,\n        args: {\n          position: Vector2.Zero,\n          textures: state.simpleTexture.get(),\n        },\n        appSize: props.appSize,\n        gameState: extractStrategicHexGridSubState(gameState),\n      };\n    };\n    this.strategicHexGrid = new StrategicHexGridComponent(\n      strategicHexGridPropsFactory(props, this.state)\n    );\n    this.addChild({\n      childClass: StrategicHexGridComponent,\n      instance: this.strategicHexGrid,\n      propsFactory: strategicHexGridPropsFactory,\n    });\n\n    this.backdropStage = new Pixi.Sprite();\n    this.backdropStage.zIndex = -1;\n    this.backdropStage.sortableChildren = true;\n    this.container.addChild(this.backdropStage);\n\n    this.backdrop = new Pixi.Graphics();\n    this.backdropStage.addChild(this.backdrop);\n    this.backdrop.beginFill(COLORS.backgroundBlue, 1);\n    // backdrop.alpha = 0.5; // if alpha == 0, Pixi does not register this as a hittable area\n    this.backdrop.interactive = true;\n    // backdrop.interactiveChildren = true; // not sure what this does\n    this.backdrop.drawRect(0, 0, props.appSize.x, props.appSize.y);\n  }\n\n  protected updateSelf(props: Props) {\n    this.state.tick++;\n  }\n\n  protected renderSelf(props: Props) {\n    this.backdrop.width = props.appSize.x;\n    this.backdrop.height = props.appSize.y;\n  }\n\n  protected didMount() {\n    // const { updaters } = this._staleProps;\n  }\n\n  protected didUpdate() {\n    // const { updaters } = this._staleProps;\n  }\n}\n\nconst wrapped = engageLifecycle(RootComponent2);\n// eslint-disable-next-line\ntype wrapped = RootComponent2;\nexport { wrapped as RootComponent };\nexport type { Props as RootComponentProps, State as RootComponentState };\n","import * as Pixi from 'pixi.js';\nimport COLORS from '../colors';\nimport { RenderedChunkConstants } from '../components/ChunkComponent';\n\nexport type PointNodeTextureSet = {\n  cropFraction: number;\n  texture: Pixi.Texture;\n}[];\n\nexport function generatePointNodeTexture(\n  renderer: Pixi.Renderer\n): PointNodeTextureSet {\n  // generate sprite textures for 0 to 100% vertical cropped in increments of 1/8\n  let textureSet: PointNodeTextureSet = [];\n  for (let i = 0; i <= 8; i++) {\n    const cropFraction = i / 8;\n    let g = new Pixi.Graphics();\n    g.beginFill(COLORS.white);\n    g.drawRoundedRect(\n      -RenderedChunkConstants.NODE_SIZE_PX / 2,\n      -RenderedChunkConstants.NODE_SIZE_PX / 2,\n      RenderedChunkConstants.NODE_SIZE_PX,\n      RenderedChunkConstants.NODE_SIZE_PX,\n      RenderedChunkConstants.NODE_ROUNDED_PX\n    );\n    let mask = new Pixi.Graphics();\n    mask.beginFill(COLORS.black);\n    mask.drawRect(\n      -RenderedChunkConstants.NODE_SIZE_PX / 2,\n      -RenderedChunkConstants.NODE_SIZE_PX / 2,\n      RenderedChunkConstants.NODE_SIZE_PX,\n      RenderedChunkConstants.NODE_SIZE_PX * cropFraction\n    );\n    g.mask = mask;\n    // g.x = 200;\n    // g.y = 200;\n    // this.app.stage.addChild(g);\n    // let texture = renderer.generateTexture(g, Pixi.SCALE_MODES.NEAREST, 1);\n    let texture = renderer.generateTexture(g, Pixi.SCALE_MODES.LINEAR, 1);\n    // const sprite = new Pixi.Sprite(texture);\n    // sprite.x = 300;\n    // sprite.y = 300;\n    // this.app.stage.addChild(sprite);\n    textureSet.push({\n      cropFraction,\n      texture,\n    });\n  }\n  return textureSet;\n}\n","import * as Pixi from 'pixi.js';\nimport COLORS from '../colors';\n\nexport interface SimpleTextureSet {\n  circle: Pixi.Texture;\n  rect: Pixi.Texture;\n  square: Pixi.Texture;\n}\n\nexport function generateSimpleTextures(\n  renderer: Pixi.Renderer\n): SimpleTextureSet {\n  let circle = new Pixi.Graphics();\n  circle.beginFill(COLORS.white);\n  circle.drawCircle(0, 0, 8);\n  // circle.pivot = PixiPointFrom(Vector2.Zero);\n\n  let rect = new Pixi.Graphics();\n  rect.beginFill(COLORS.white);\n  // rect.drawRect(-6, -10, 12, 20);\n  rect.drawRect(0, 0, 4, 20);\n  // rect.pivot = PixiPointFrom(Vector2.Zero);\n\n  let square = new Pixi.Graphics();\n  square.beginFill(COLORS.white);\n  square.drawRect(0, 0, 16, 16);\n  // square.pivot = PixiPointFrom(Vector2.Zero);\n\n  return {\n    circle: renderer.generateTexture(circle, Pixi.SCALE_MODES.LINEAR, 1),\n    rect: renderer.generateTexture(rect, Pixi.SCALE_MODES.LINEAR, 1),\n    square: renderer.generateTexture(square, Pixi.SCALE_MODES.LINEAR, 1),\n  };\n}\n","import { Vector2 } from '../lib/util/geometry/vector2';\nimport { Const } from '../lib/util/misc';\n\n/**\n * current window settings -- allows for dynamic resizing and also rotation on mobile web\n */\nexport type WindowState = {\n  orientation: 'original' | 'rotated'; // rotated === we are forcing landscape-in-portrait\n  innerWidth: number;\n  innerHeight: number;\n};\n\nexport const newWindowState = (): WindowState => {\n  return {\n    orientation: 'original',\n    innerWidth: window.innerWidth,\n    innerHeight: window.innerHeight,\n  };\n};\n\n/**\n * given the dimensions of the entire html window, computes the size of the intended play area -- leaves a 24px border\n * TODO(bowei): move this somewhere more appropriate. for now it's just here because it's used in both pixi and react components\n */\nexport function appSizeFromWindowSize(window?: Const<Vector2>): Vector2 {\n  return new Vector2({\n    x: Math.min(1920, (window?.x || Infinity) - 24),\n    y: Math.min(1080, (window?.y || Infinity) - 24),\n  });\n}\n","import * as Pixi from 'pixi.js';\nimport { Vector2 } from '../lib/util/geometry/vector2';\nimport { GameState } from '../data/GameState';\n// eslint-disable-next-line\nimport { assertOnlyCalledOnce, Const } from '../lib/util/misc';\nimport { RootComponent } from './components/RootComponent';\nimport { UpdaterGeneratorType2 } from '../lib/util/updaterGenerator';\nimport COLORS from './colors';\n// eslint-disable-next-line\nimport createBunnyExample from './BunnyExample';\nimport { appSizeFromWindowSize } from '../data/WindowState';\n\ntype Props = {\n  args: {\n    fireBatch: () => void;\n    isSecondConstructorCall: boolean;\n  };\n  updaters: UpdaterGeneratorType2<GameState>; // aka updaters\n  gameState: Const<GameState>;\n};\n\ntype State = {\n  appSize: Vector2;\n  originalAppSize: Vector2;\n};\n\n/**\n * Pixi side of a pixi-react bridge. This class owns a pixi application and receives props updates from react by way of rerender().\n * Those props updates do not apply immediately but are queued up and apply all at once on the next tick in the baseGameLoop().\n * Kicks off the pixi component lifecycle handling by updating props on Pixi RootComponent.\n */\nexport class PixiReactBridge {\n  public app!: Pixi.Application;\n\n  state!: State;\n  props!: Props;\n  private staleProps?: Props;\n\n  rootComponent: RootComponent | undefined;\n  onTick!: (d: number) => void;\n\n  /**\n   * NOTE: for lifecycle convenience, we allow initializing with essentially empty props, and to finish the initialization\n   * lazily at the first rerender() call\n   * NOTE: this causes an annoying flash since we don't know the initial window size\n   */\n  constructor(props?: Props, isSecondConstructorCall: boolean = false) {\n    // verify that we are not loading this twice when we expect to load it only once -- bad for performance!!\n    if (!(props?.args?.isSecondConstructorCall || isSecondConstructorCall)) {\n      // assertOnlyCalledOnce(\"Pixi react bridge constructor\"); // annoying with react hot reload, disable for now}\n    }\n\n    let appSize = new Vector2(800, 600);\n    this.state = {\n      appSize,\n      originalAppSize: appSize,\n    };\n\n    this.app = new Pixi.Application({\n      width: this.state.appSize.x,\n      height: this.state.appSize.y,\n      antialias: true, // both about the same FPS, i get around 30 fps on 1600 x 900\n      transparent: true, // true -> better fps?? https://github.com/pixijs/pixi.js/issues/5580\n      resolution: window.devicePixelRatio || 1, // lower -> more FPS but uglier\n      // resolution: 0.5,\n      // resolution: 2,\n      autoDensity: true,\n      powerPreference: 'low-power', // the only valid one for webgl\n      backgroundColor: COLORS.white, // immaterial - we recommend setting color in backdrop graphics\n    });\n\n    // test\n    // createBunnyExample({ parent: this.app.stage, ticker: this.app.ticker, x: this.app.screen.width / 2, y: this.app.screen.height / 2 });\n  }\n\n  public pause() {\n    this.app.ticker.remove(this.onTick);\n  }\n  public destroy() {\n    this.app.destroy(true, {\n      children: true,\n      texture: true,\n      baseTexture: true,\n    });\n  }\n\n  public didMount() {\n    this.onTick = (delta) => this.baseGameLoop(delta);\n    this.onTick = this.onTick.bind(this);\n    this.app.ticker.add(this.onTick);\n\n    // we forgot to set app size properly when pixi first loaded, so do it now\n    this.state.appSize = appSizeFromWindowSize(\n      new Vector2(\n        this.props.gameState.windowState.innerWidth,\n        this.props.gameState.windowState.innerHeight\n      )\n    );\n  }\n\n  /**\n   * Please only call once!!\n   * Usage: const container = useRef<HTMLDivElement>(null); useEffect(() => { application.register(container.current!); }, []);\n   */\n  public register(curr: HTMLDivElement) {\n    curr.appendChild(this.app.view);\n  }\n\n  updateSelf(props: Props, staleProps?: Props) {\n    if (props === staleProps) {\n      props.updaters.tick.enqueueUpdate((it) => it + 1); // TODO(bowei): reneable this\n      return;\n    }\n\n    // memoize: compute app state from window state dimensions only if they changed from last tick\n    if (\n      !(\n        props.gameState.windowState.innerWidth ===\n          staleProps?.gameState.windowState.innerWidth &&\n        props.gameState.windowState.innerHeight ===\n          staleProps?.gameState.windowState.innerHeight\n      )\n    ) {\n      // console.log(\n      //   'update self inner',\n      //   props.gameState.windowState,\n      //   staleProps?.gameState.windowState\n      // );\n      this.state.appSize = appSizeFromWindowSize(\n        new Vector2(\n          props.gameState.windowState.innerWidth,\n          props.gameState.windowState.innerHeight\n        )\n      );\n    }\n\n    props.updaters.tick.enqueueUpdate((it) => it + 1); // TODO(bowei): reneable this\n  }\n\n  // shim, called from react, possibly many times , possibly at any time, including during the baseGameLoop below\n  // props should be a referentially distinct object from props the last time this was called\n  rerender(futureProps: Props) {\n    if (this.rootComponent && this.props === futureProps) {\n      // skip updating props if we're already initialized and there's no new props object\n      return;\n    }\n\n    // console.log('base app rerender called');\n\n    // take the props handed down from react (probably due to our own props.updaters.fireBatch() call, see game loop) and\n    // record them for future use. note that the future props do not take effect down the child hierarchy unless they are\n    // manually told to do so.\n    this.props = futureProps;\n\n    // If we're not done initializing yet (note that constructor does not set props!), finish it now\n    if (!this.rootComponent) {\n      // finish initialization\n      this.rootComponent = new RootComponent({\n        args: {\n          renderer: this.app.renderer,\n          markForceUpdate: () => {},\n        },\n        updaters: this.props.updaters,\n        delta: 0,\n        gameState: this.props.gameState,\n        appSize: this.state.appSize,\n      });\n      this.app.stage.addChild(this.rootComponent.container);\n\n      this.renderSelf(this.props);\n\n      // test\n      // createBunnyExample({ parent: this.app.stage, ticker: this.app.ticker, x: this.app.screen.width / 2, y: this.app.screen.height / 2 });\n      this.didMount();\n    }\n  }\n\n  renderSelf(props: Props) {\n    this.app.renderer.resize(this.state.appSize.x, this.state.appSize.y);\n  }\n\n  baseGameLoop(delta: number) {\n    if (this.props.gameState.playerUI.isPixiHidden) {\n      if (this.props.gameState.tick % 10 === 0) {\n        // console.log('computing pixi update even though pixi is not visible');\n      } else {\n        // console.log('skipping update since pixi is not visible');\n        // have to manually update the tick number since updateSelf is not being called, because staleProps is not being updated\n        this.props.updaters.tick.enqueueUpdate((it) => it + 1); // TODO(bowei): reneable this\n        this.props.args.fireBatch(); // fire enqueued game state updates, which should come back from react in the rerender()\n        return; // skip update loop if pixi is hidden\n      }\n    }\n    // assume props is up to date\n    this.updateSelf(this.props, this.staleProps);\n\n    // send props downwards\n    this.rootComponent?.update({\n      args: {\n        renderer: this.app.renderer,\n        markForceUpdate: () => {},\n      },\n      updaters: this.props.updaters,\n      delta,\n      gameState: this.props.gameState,\n      appSize: this.state.appSize,\n    });\n\n    this.renderSelf(this.props);\n    this.staleProps = this.props;\n    this.props.args.fireBatch(); // fire enqueued game state updates, which should come back from react in the rerender()\n  }\n}\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { UseGameStateContext } from '../contexts';\nimport { PixiReactBridge } from '../pixi/PixiReactBridge';\nimport { Lazy } from '../lib/util/lazy';\n\nconst initialApplication = new Lazy(() => new PixiReactBridge());\n\n/**\n * React side of a pixi-react bridge. This react component owns the div which own the canvas element,\n * and send rerender props updates to pixi application when react causes state to be updated.\n */\nexport function PixiWrapperComponent(props: { hidden: boolean }) {\n  const [application] = useState(initialApplication.get());\n  const container = useRef<HTMLDivElement>(null);\n  const [gameState, gameStateUpdaters, fireBatchedSetGameState] = useContext(\n    UseGameStateContext\n  );\n\n  useEffect(() => {\n    // remove old application if it exists\n    for (let i = container.current!.childNodes.length - 1; i >= 0; i--) {\n      container.current!.removeChild(container.current!.childNodes[i]);\n    }\n    // add the application\n    container.current!.appendChild(application.app.view);\n  }, [application]);\n\n  // Trigger component render on first load and also when game state is updated\n  // wrap in useeffect to avoid triggering every react render (130+ UPS) and only check every pixi render (60fps)\n  useEffect(() => {\n    application.rerender({\n      args: {\n        fireBatch: fireBatchedSetGameState,\n        isSecondConstructorCall: false,\n      },\n      updaters: gameStateUpdaters,\n      gameState,\n    });\n  }, [application, fireBatchedSetGameState, gameStateUpdaters, gameState]);\n\n  return (\n    <>\n      <div ref={container} hidden={props.hidden} style={{}} />\n    </>\n  );\n}\n","import React from 'react';\n// import UAParser from 'ua-parser-js';\nimport { GameState } from '../data/GameState';\nimport { WindowState } from '../data/WindowState';\nimport { UpdaterGeneratorType2 } from '../lib/util/updaterGenerator';\n\ntype Props = {\n  updaters: UpdaterGeneratorType2<WindowState, GameState>;\n};\n\ntype State = {};\n\n// TODO(bowei): on mobile, for either ios or android, when in portrait locked orientation, we want to serve a landscape\n// experience - similar to a native app which is landscape locked.\n// (on mobile in already landscape orientation, and in all desktop, serve ordinary orientation.)\n// also note that android webapp supports manifest.json setting orientation, but not in the browser\n// FOR NOW - ignore this\n// https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Managing_screen_orientation\n// https://stackoverflow.com/questions/14360581/force-landscape-orientation-mode\n\n// const browser = new UAParser().getBrowser();\n// let forceRotate = false;\n// if (\n//   browser.name === 'Mobile Safari' &&\n//   window.innerWidth < window.innerHeight\n// ) {\n//   forceRotate = true;\n// }\n//     <div className={classnames({ App: true, \"force-landscape\": forceRotate })}>\n/*\n.force-landscape {\n  transform: rotate(90deg);\n}\n*/\n\n/**\n * Empty react element with listeners for window changes.\n */\nexport class WindowListenerComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n  // NOTE(bowei): does using e.repeat here break when window loses focus??\n  handleWindowResize = (e: any) => {\n    this.props.updaters.enqueueUpdate((old) => {\n      // console.log(\"executing window state update in window onresize in app\");\n      // const result = { ...old };\n      // result.innerWidth = window.innerWidth;\n      // result.innerHeight = window.innerHeight;\n      // return result;\n      return {\n        ...old,\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight,\n      };\n    });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n  render() {\n    return <> </>;\n  }\n}\n","import { HashSet } from '../../lib/util/data_structures/hash';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\n\nexport enum Direction {\n  NORTHWEST = 'NORTHWEST',\n  SOUTHWEST = 'SOUTHWEST',\n  NORTHEAST = 'NORTHEAST',\n  SOUTHEAST = 'SOUTHEAST',\n  EAST = 'EAST',\n  WEST = 'WEST',\n  UP = 'UP',\n  DOWN = 'DOWN',\n}\n\n/**\n * Moving 1 unit of grid on a z level corresponds to moving this many units of grid in the same direction on the z level below.\n */\n// const PER_Z_SCALE_FACTOR = 6;\n\n/**\n *   2   3\n * 4 - O - 1\n *   6   5\n * x-axis is along 0 -> 1\n * y-axis is along 0 -> 2\n * z-axis is vertical\n *\n * @param base 0\n */\nexport function getCoordNeighbors(\n  base: Vector3\n): { [d in Direction]?: Vector3 } {\n  let neighbors: { [d in Direction]?: Vector3 } = {} as any;\n\n  neighbors.EAST = base.addX(1);\n  neighbors.WEST = base.addX(-1);\n  neighbors.NORTHWEST = base.addY(1);\n  neighbors.SOUTHEAST = base.addY(-1);\n  neighbors.NORTHEAST = base.add(1, 1, 0);\n  neighbors.SOUTHWEST = base.add(-1, -1, 0);\n\n  // TODO(bowei): reenable up/down neighbors later\n  // neighbors.DOWN = base\n  //   .multiply(new Vector3(PER_Z_SCALE_FACTOR, PER_Z_SCALE_FACTOR, 1))\n  //   .addZ(-1);\n\n  // if (base.x % PER_Z_SCALE_FACTOR === 0 && base.y % PER_Z_SCALE_FACTOR === 0) {\n  //   neighbors.UP = base\n  //     .divide(new Vector3(PER_Z_SCALE_FACTOR, PER_Z_SCALE_FACTOR, 1))\n  //     .addZ(1);\n  // }\n\n  return neighbors;\n}\n\nexport type IReadonlySet<K> = {\n  contains: (k: K) => boolean;\n};\n\n/**\n *\n * @param base\n * @param maxDistance\n * @param minDistance\n * @returns all vector3 coords that are <= maxDistance and >= minDistance.\n */\nexport function getWithinDistance(\n  base: Vector3,\n  maxDistance: number,\n  minDistance?: number,\n  disallowedSet?: IReadonlySet<Vector3>\n): Vector3[] {\n  let touched: HashSet<Vector3> = new HashSet();\n  let disallowedButTouched: HashSet<Vector3> = new HashSet();\n  touched.put(base);\n  const byDist: Vector3[][] = [[base]];\n\n  for (let d = 1; d <= maxDistance; d++) {\n    byDist.push([]);\n    for (let vec of byDist[d - 1]) {\n      const considering = Object.values(getCoordNeighbors(vec));\n      for (const n of considering) {\n        if (!n) continue;\n        if (touched.get(n)) continue;\n\n        if (disallowedSet?.contains(n)) {\n          disallowedButTouched.put(n);\n        } else {\n          touched.put(n);\n          byDist[d].push(n);\n        }\n      }\n    }\n  }\n\n  let result: Vector3[] = [];\n  for (let dd = minDistance || 0; dd <= maxDistance; dd++) {\n    result = result.concat(byDist[dd]);\n  }\n  result = result.concat(disallowedButTouched.values());\n  return result;\n}\n","import { LockStatus, NodeTakenStatus } from './NodeStatus';\nimport { KeyedHashMap } from '../lib/util/data_structures/hash';\nimport { Vector3 } from '../lib/util/geometry/vector3';\nimport { ResourceType } from './WorldGenState';\n\nexport type PlayerSaveState = {\n  /**\n   * DEPRECATED\n   */\n  activeQuest: Quest | undefined;\n  spSpentThisQuest: number | undefined;\n  questProgressHistory: number[];\n  questInitialAmount: number;\n  score: number;\n  // questsCompleted: Quest[];\n\n  /**\n   * NOT DEPRECATED\n   */\n\n  /**\n   * Indicated which nodes are allocated or not. NOTE: does not contain fog of war information\n   */\n  allocationStatusMap: KeyedHashMap<Vector3, NodeTakenStatus>;\n  // lockMap: LazyHashMap<Vector3, LockData | undefined>;\n};\n\n// DEPRECATED\nexport type Quest = {\n  description: string | undefined;\n  resourceType: ResourceType;\n  resourceAmount: number;\n};\n\n// NOT DEPRECATED\nexport type LockData = {\n  shortTextTarget: string;\n  shortTextTimer: string;\n  lockStatus: LockStatus;\n};\n\nexport const newPlayerSaveState = (): PlayerSaveState => {\n  return {\n    // justAllocated: undefined,\n    activeQuest: undefined,\n    spSpentThisQuest: undefined,\n    questProgressHistory: [],\n    questInitialAmount: 0,\n    // questsCompleted: [],\n    score: 0,\n\n    // make sure to allocate the beginning node\n    allocationStatusMap: new KeyedHashMap<Vector3, NodeTakenStatus>([\n      [Vector3.Zero, NodeTakenStatus.true],\n    ]),\n  };\n};\n","import { LockStatus } from '../../data/NodeStatus';\nimport { LockData } from '../../data/PlayerSaveState';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { INTMAX32, squirrel3 } from '../../lib/util/random';\n\ntype LockFactoryConfig = {};\n\nexport class LockFactory {\n  public config: LockFactoryConfig;\n\n  constructor(config: LockFactoryConfig) {\n    this.config = config;\n  }\n\n  public create(args: {\n    seed: number;\n    location: Vector3;\n  }): LockData | undefined {\n    const id = squirrel3(\n      args.seed +\n        args.location.x +\n        args.location.y +\n        squirrel3(args.seed + args.location.x + args.location.z)\n    );\n    const p = id / INTMAX32;\n\n    let lockData: LockData = {\n      shortTextTarget: '🔒',\n      shortTextTimer: '',\n      lockStatus: LockStatus.TICKING,\n    };\n    if (args.location.equals(Vector3.Zero)) {\n      return undefined;\n    }\n    // TODO(bowei): unhardcode\n    // locks occur at this frequency\n    // a good non-debug value is 0.47\n    if (p < 0.37) {\n      return lockData;\n    }\n\n    return undefined;\n  }\n}\n","import { LockData } from '../../data/PlayerSaveState';\nimport { WorldGenState } from '../../data/WorldGenState';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { LazyHashMap } from '../../lib/util/lazy';\nimport { LockFactory } from './LockFactory';\nimport {\n  NodeContentsFactory,\n  NodeContents,\n} from './nodeContents/NodeContentsFactory';\n\nexport type WorldGenStateConfig = {};\n\nconst storageKey = 'WorldGenState';\n\nexport class WorldGenStateFactory {\n  public config: WorldGenStateConfig;\n\n  constructor(config: WorldGenStateConfig) {\n    this.config = config;\n  }\n\n  public create(args: { seed: number }): WorldGenState {\n    const mySeed = args.seed;\n\n    const lockFactory = new LockFactory({});\n    const lockDataMap = new LazyHashMap<Vector3, LockData | undefined>((k) =>\n      lockFactory.create({ seed: mySeed, location: k })\n    );\n    const nodeContentsFactory = new NodeContentsFactory({});\n    const nodeContentsMap = new LazyHashMap<Vector3, NodeContents>((k) =>\n      nodeContentsFactory.create({ seed: mySeed, location: k })\n    );\n    return {\n      seed: mySeed,\n      lockMap: lockDataMap,\n      nodeContentsMap,\n    };\n  }\n\n  public tryLoad(args: { seed: number }): WorldGenState {\n    const loaded = this.load();\n    if (loaded) {\n      return this.create(loaded);\n    } else {\n      return this.create(args);\n    }\n  }\n\n  public store(s: WorldGenState) {\n    const data = this.serialize(s);\n    window.localStorage.setItem(storageKey, data);\n  }\n\n  load(): { seed: number } | null {\n    const data = window.localStorage.getItem(storageKey);\n    const loaded = (data && this.deserialize(data)) || null;\n    return loaded;\n  }\n\n  deserialize(obj: string): { seed: number } | null {\n    return this.deserializeFromObject(JSON.parse(obj));\n  }\n\n  deserializeFromObject(obj: any): { seed: number } | null {\n    if (!obj || !obj.hasOwnProperty('seed')) {\n      return null;\n    }\n    return { ...obj };\n  }\n\n  serialize(s: WorldGenState) {\n    return JSON.stringify(this.serializeToObject(s));\n  }\n\n  serializeToObject(s: WorldGenState): object {\n    return { seed: s.seed };\n  }\n\n  public clear() {\n    window.localStorage.setItem(storageKey, '');\n  }\n}\n","import { GameState } from '../../data/GameState';\nimport {\n  LockStatus,\n  NodeReachableStatus,\n  NodeTakenStatus,\n  NodeVisibleStatus,\n} from '../../data/NodeStatus';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { getWithinDistance, IReadonlySet } from '../lib/HexGrid';\n\nexport interface AllocateNodeInput {\n  nodeLocation: Vector3;\n  newStatus: NodeTakenStatus;\n}\n\n// TODO(bowei): unhardcode\nexport const FOG_OF_WAR_DISTANCE = 6;\n\n/**\n * Stateless action wrapper over updaters.\n * Represents the action of allocating a node.\n */\nexport class AllocateNodeAction {\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n\n  constructor(updaters: UpdaterGeneratorType2<GameState, GameState>) {\n    this.updaters = updaters;\n  }\n\n  enqueueAction(input: AllocateNodeInput) {\n    const { nodeLocation, newStatus } = input;\n\n    this.updaters.playerSave.allocationStatusMap.enqueueUpdate((prevMap) => {\n      // console.log('prev was', prevMap.get(nodeLocation), 'now', newStatus);\n      // if (prevMap.get(nodeLocation) === newStatus) {\n      //   return prevMap;\n      // }\n      prevMap.put(nodeLocation, newStatus);\n      return prevMap.clone();\n    });\n\n    // before updating Fog of war, first unlock any locks\n    this.updaters.computed.lockStatusMap?.enqueueUpdate(\n      (prevMap, prevGameState) => {\n        if (!prevMap) {\n          return prevMap;\n        }\n\n        for (let [\n          location,\n          lockData,\n        ] of prevGameState.worldGen.lockMap.entries()) {\n          if (lockData) {\n            // TODO: compute lock status\n            const newStatus = LockStatus.TICKING;\n            prevMap.put(location, newStatus);\n          }\n        }\n\n        return prevMap.clone();\n      }\n    );\n\n    this.updaters.computed.reachableStatusMap?.enqueueUpdate((prevMap) => {\n      if (!prevMap) {\n        return prevMap;\n      }\n\n      getWithinDistance(nodeLocation, 1).forEach((n) => {\n        prevMap.put(n, NodeReachableStatus.true);\n      });\n      return prevMap.clone();\n    });\n\n    this.updaters.computed.fogOfWarStatusMap?.enqueueUpdate(\n      (prevMap, prevGameState) => {\n        if (!prevMap) {\n          return prevMap;\n        }\n        prevMap.put(nodeLocation, NodeVisibleStatus.true);\n\n        getWithinDistance(nodeLocation, 1).forEach((n) => {\n          prevMap.put(n, NodeVisibleStatus.true);\n        });\n\n        // make sure we make use of lock state\n        // getWithinDistance(nodeLocation, 3).forEach((n) => {\n        // const validLocks = prevGameState.worldGen.lockMap\n        const validLocks: IReadonlySet<Vector3> = {\n          // TODO(bowei): optimize this?\n          contains: (v: Vector3) => {\n            // const maybeLock = prevGameState.worldGen.lockMap.get(v);\n            const maybeLock = prevGameState.computed.lockStatusMap?.get(v);\n            if (maybeLock && maybeLock !== LockStatus.OPEN) {\n              return true;\n            }\n            return false;\n          },\n        };\n        getWithinDistance(\n          nodeLocation,\n          FOG_OF_WAR_DISTANCE,\n          0,\n          validLocks\n        ).forEach((n) => {\n          if (!prevMap.get(n)?.visible) {\n            // NOTE(bowei): fuck, this doesnt cause a update to be propagated... i guess it's fine though\n            prevGameState.worldGen.lockMap.precompute(n);\n            prevMap.put(n, NodeVisibleStatus.true);\n          }\n        });\n\n        return prevMap.clone();\n      }\n    );\n  }\n}\n","import React from 'react';\nimport { LockStatus, NodeAllocatedStatus } from '../../data/NodeStatus';\nimport {\n  AttributeSymbolMap,\n  ModifierSymbolMap,\n  nodeContentsConditionToString,\n  nodeContentsLineToString,\n} from '../../game/worldGen/nodeContents/NodeContentsRendering';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { LazyHashMap } from '../../lib/util/lazy';\nimport { GameGridSubState } from './GameAreaGrid';\n\nexport type NodeReactData = {\n  // 3-4 character description that goes on the main board\n  shortText: React.ReactElement;\n  // 3-4 line description that gets displayed on hover\n  toolTipText: React.ReactElement;\n  // Extended description that shows up in sidebar\n  fullText: React.ReactElement;\n  lockData?: {\n    shortTextTarget: string;\n    shortTextTimer: string;\n    lockStatus: LockStatus;\n  };\n  status: NodeAllocatedStatus;\n  nodeLocation: Vector3;\n  id: string;\n};\n\n// Text to display both in the tooltip and sidebar for node description.\n// Currently we only have a description for the starting node.\nexport const STARTING_NODE_DESCRIPTION = 'The starting node.';\n\n/**\n * Computes a hash map of vector2 virtual hex grid coordinates to\n * text & tooltip info about the node at those coordinates.\n */\nexport function computeNodeReactData(args: {\n  gameState: GameGridSubState;\n  location: Vector3;\n}): NodeReactData {\n  const { location } = args;\n  const {\n    fogOfWarStatusMap,\n    reachableStatusMap,\n    // lockStatusMap,\n  } = args.gameState.computed;\n  const { allocationStatusMap } = args.gameState.playerSave;\n  const { lockMap, nodeContentsMap } = args.gameState.worldGen;\n\n  const fogOfWarStatus = fogOfWarStatusMap?.get(location);\n  const reachableStatus = reachableStatusMap?.get(location);\n  const takenStatus = allocationStatusMap.get(location);\n  const nodeStatus = takenStatus?.taken\n    ? NodeAllocatedStatus.TAKEN\n    : reachableStatus?.reachable\n    ? NodeAllocatedStatus.AVAILABLE\n    : fogOfWarStatus?.visible\n    ? NodeAllocatedStatus.UNREACHABLE\n    : NodeAllocatedStatus.HIDDEN;\n  const id = location.hash();\n  const lockData = lockMap.get(location);\n  const nodeContents = nodeContentsMap.get(location);\n  let shortText1 = '';\n  if (nodeContents.lines[0]) {\n    shortText1 += ModifierSymbolMap[nodeContents.lines[0].modifier];\n    shortText1 += AttributeSymbolMap[nodeContents.lines[0].attribute];\n  } else {\n    // the origin node is empty\n    shortText1 = '';\n  }\n  if (\n    nodeContents.lines[1] &&\n    nodeContents.lines[0].attribute !== nodeContents.lines[1].attribute\n  ) {\n    // add another symbol if it's a mixed node\n    // TODO(bowei): make sure that node contents generation cannot mix modifiers!!\n    shortText1 += AttributeSymbolMap[nodeContents.lines[1].attribute];\n  }\n  let shortText2 = '';\n  if (nodeContents.condition) {\n    // SPENDing\n    shortText2 = '-' + AttributeSymbolMap[nodeContents.condition.attribute];\n  }\n\n  const nodeData: NodeReactData = {\n    nodeLocation: location,\n    shortText: shortText2 ? (\n      <>\n        {shortText1}\n        <br />\n        {shortText2}\n      </>\n    ) : (\n      <>{shortText1}</>\n    ),\n    toolTipText: (\n      <>\n        <div>{nodeStatus.toString()}</div>\n        {location.equals(Vector3.Zero) ? (\n          <>\n            {' '}\n            <br /> <div>{STARTING_NODE_DESCRIPTION}</div>\n          </>\n        ) : (\n          <> </>\n        )}\n        {nodeContents.lines[0] ? <br /> : <></>}\n        <div>\n          {nodeContents.lines[0] &&\n            nodeContentsLineToString(nodeContents.lines[0])}\n        </div>\n        <div>\n          {nodeContents.lines[1] &&\n            nodeContentsLineToString(nodeContents.lines[1])}\n        </div>\n        <div>\n          {nodeContents.condition &&\n            nodeContentsConditionToString(nodeContents.condition)}\n        </div>\n      </>\n    ),\n    fullText: <> </>,\n    status: nodeStatus,\n    lockData,\n    id,\n  };\n  return nodeData;\n}\n\nexport function computeNodeReactDataMap(args: {\n  gameState: GameGridSubState;\n}): LazyHashMap<Vector3, NodeReactData> {\n  const map = new LazyHashMap<Vector3, NodeReactData>((location: Vector3) => {\n    return computeNodeReactData({ location, gameState: args.gameState });\n  });\n\n  return map;\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { GameState } from '../../data/GameState';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { PlayerUIState } from '../../data/PlayerUIState';\nimport { WorldGenStateFactory } from '../../game/worldGen/WorldGenStateFactory';\n\nexport function DebugTabContent(props: {\n  gameState: GameState; // definitely needs gameState.tick in order that this component updates regularly\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n  hidden: boolean;\n}) {\n  const { gameState } = props;\n  const { tick } = gameState;\n\n  const [lastUpdated, setLastUpdated] = useState(+new Date());\n  const [slowRenderMsgs, setSlowRenderMsgs] = useState<string[]>([]);\n\n  useEffect(() => {\n    const now = new Date();\n    const msSinceLastTick = +now - lastUpdated;\n    if (msSinceLastTick > 30) {\n      const msg = `Tick ${tick} took ${msSinceLastTick}ms at ${\n        now.toTimeString().split(' ')[0]\n      }`;\n      console.log(msg);\n      setSlowRenderMsgs((prev) => {\n        return [msg, ...prev];\n      });\n    }\n    setLastUpdated(+new Date());\n  }, [tick, lastUpdated, setLastUpdated, setSlowRenderMsgs]);\n\n  const virtualGridDimsTrigger = useCallback(() => {\n    console.log('tried triggered update from debug tab');\n    // NOTE(bowei): this apparently takes around 100ms alone. full jump takes ~200ms\n    props.updaters.debug.retriggerVirtualGridDims.enqueueUpdate((prev) => {\n      return () => {\n        console.log('force triggered update from debug tab');\n      };\n    });\n  }, [props.updaters]);\n\n  const toggleScrollbars = useCallback(() => {\n    props.updaters.debug.debugShowScrollbars?.enqueueUpdate((prev) => {\n      const next = !prev;\n      return next;\n    });\n  }, [props.updaters]);\n\n  const gameAreaGridRerender = useCallback(() => {\n    props.updaters.debug.rerenderGameAreaGrid.enqueueUpdate((prev) => {\n      return () => {\n        console.log('force triggered react rerender from debug tab');\n      };\n    });\n  }, [props.updaters]);\n\n  const onDisableScrollJump = useCallback(() => {\n    props.updaters.debug.enableScrollJump.enqueueUpdate(() => {\n      return false;\n    });\n  }, [props.updaters]);\n\n  const onEnableScrollJump = useCallback(() => {\n    props.updaters.debug.enableScrollJump.enqueueUpdate(() => {\n      return true;\n    });\n  }, [props.updaters]);\n\n  const forceVirtualGridJump = useCallback(() => {\n    props.updaters.debug.getForceJumpOffset.enqueueUpdate((prev) => {\n      return () => {\n        console.log('force triggered virtual jump only');\n        return new Vector2(1, 2);\n      };\n    });\n  }, [props.updaters]);\n\n  const addDebugOffsetX = useCallback(() => {\n    props.updaters.debug.getOffsetX.enqueueUpdate((prev) => {\n      const offsetX = prev() || 0;\n      return () => {\n        return offsetX + 1;\n      };\n    });\n  }, [props.updaters]);\n\n  const flipCursored = useCallback(() => {\n    props.updaters.debug.isFlipCursored.enqueueUpdate((prev) => {\n      const flipCursored = prev() || false;\n      return () => {\n        return !flipCursored;\n      };\n    });\n  }, [props.updaters]);\n\n  const toggleTextBoxFocused = useCallback(() => {\n    props.updaters.playerUI.isTextBoxFocused.enqueueUpdate((prev) => {\n      const isTextBoxFocused = !prev;\n      console.log({ isTextBoxFocused });\n      return isTextBoxFocused;\n    });\n  }, [props.updaters]);\n\n  const saveLocalStorage = useCallback(() => {\n    PlayerUIState.store(props.gameState.playerUI);\n  }, [props.gameState]);\n\n  const loadLocalStorage = useCallback(() => {\n    const loaded = PlayerUIState.load();\n    if (loaded) {\n      props.updaters.playerUI.enqueueUpdate(() => loaded);\n    }\n  }, [props.updaters]);\n\n  const clearLocalStorage = useCallback(() => {\n    PlayerUIState.clear();\n    new WorldGenStateFactory({}).clear();\n    props.updaters.justDisabledSave.enqueueUpdate(true);\n  }, [props.updaters]);\n\n  if (props.hidden) {\n    return <> </>;\n  }\n  return (\n    <>\n      <div> debug tab </div>\n      <div className=\"tab-content-body\">\n        <br></br>\n        <div>Recent slow renders:</div>\n        {slowRenderMsgs.slice(0, 5).map((it, idx) => {\n          return <div key={idx}>{it}</div>;\n        })}\n        <br></br>\n      </div>\n      <div> buttons </div>\n      <div className=\"tab-content-body\">\n        <br></br>\n        <div>\n          <button onClick={toggleScrollbars}>Toggle scrollbars</button>\n        </div>\n        <div>\n          <button onClick={virtualGridDimsTrigger}>\n            Trigger virtual grid dims rerender\n          </button>\n        </div>\n        <div>\n          <button onClick={gameAreaGridRerender}>\n            Trigger only virtual game area grid react rerender\n          </button>\n        </div>\n        <div>\n          <button onClick={onDisableScrollJump}>\n            Disable scroll jump trigger\n          </button>\n        </div>\n        <div>\n          <button onClick={onEnableScrollJump}>\n            Reenable scroll jump trigger\n          </button>\n        </div>\n        <div>\n          <button onClick={forceVirtualGridJump}>\n            Force virtual grid jump only\n          </button>\n        </div>\n        <div>\n          <button onClick={addDebugOffsetX}>add weird x offset to grid</button>\n        </div>\n        <div>\n          <button onClick={flipCursored}>\n            weird flip cursored state on all nodes\n          </button>\n        </div>\n        <div>\n          <button onClick={toggleTextBoxFocused}>\n            toggle text box focused\n          </button>\n        </div>\n        <div>\n          <button onClick={saveLocalStorage}>\n            save state to local storage\n          </button>\n        </div>\n        <div>\n          <button onClick={loadLocalStorage}>\n            load state from local storage\n          </button>\n        </div>\n        <div>\n          <button onClick={clearLocalStorage}>\n            clear local storage and disable saving\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { GameState } from '../../data/GameState';\nimport {\n  Attribute,\n  Modifier,\n} from '../../game/worldGen/nodeContents/NodeContentsFactory';\nimport {\n  AttributeDescriptionMap,\n  AttributeSymbolMap,\n  ModifierDescriptionMap,\n  ModifierSymbolMap,\n} from '../../game/worldGen/nodeContents/NodeContentsRendering';\n\nexport const StrategicTab = React.memo(StrategicTabComponent);\n\n// TODO(bowei): prune down state\nfunction StrategicTabComponent(props: {\n  gameState: GameState;\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n}) {\n  const { gameState, updaters } = props;\n\n  const [showAdvancedSearch, setShowAdvancedSearch] = useState(false);\n  const [highlightInputValue, setHighlightInputValue] = useState('');\n\n  const onFocus = useCallback(() => {\n    updaters.playerUI.isTextBoxFocused.enqueueUpdate(true);\n  }, [updaters]);\n  const onBlur = useCallback(() => {\n    updaters.playerUI.isTextBoxFocused.enqueueUpdate(false);\n  }, [updaters]);\n\n  const onFireSearch = useCallback(() => {\n    updaters.playerUI.strategicSearch.highlight1.enqueueUpdate(() => {\n      return {\n        value: highlightInputValue,\n      };\n    });\n  }, [updaters, highlightInputValue]);\n\n  // const onCancelSearch = useCallback(() => {\n  //   setHighlightInputValue(gameState.playerUI.strategicSearch.highlight1.value);\n  // }, [gameState.playerUI.strategicSearch.highlight1.value]);\n  const onCancelSearch = useCallback(() => {\n    setHighlightInputValue('');\n    updaters.playerUI.strategicSearch.highlight1.enqueueUpdate(() => {\n      return {\n        value: '',\n      };\n    });\n  }, [updaters]);\n\n  if (gameState.playerUI.isPixiHidden) {\n    return (\n      <>\n        <div>Strategic view is not open!</div>\n        <br></br>\n        <div>Click [m] to toggle strategic view.</div>\n      </>\n    );\n  }\n  return (\n    <>\n      <div>{showAdvancedSearch ? 'Custom' : 'Basic'} search</div>\n      <br></br>\n      <div className=\"tab-content-body\">\n        <br></br>\n        <div>\n          Symbols: {/* TODO(bowei): need tooltip text here */}\n          <SymbolButton\n            updateTextInputValue={setHighlightInputValue}\n            attribute={Attribute.RED0}\n          />\n          <SymbolButton\n            updateTextInputValue={setHighlightInputValue}\n            attribute={Attribute.RED1}\n          />\n          <SymbolButton\n            updateTextInputValue={setHighlightInputValue}\n            attribute={Attribute.RED2}\n          />\n          <SymbolButton\n            updateTextInputValue={setHighlightInputValue}\n            attribute={Attribute.DEL0}\n          />\n          <SymbolButton\n            updateTextInputValue={setHighlightInputValue}\n            attribute={Attribute.DEL1}\n          />\n          <SymbolButton\n            updateTextInputValue={setHighlightInputValue}\n            attribute={Attribute.DEL2}\n          />\n          <TextInputButton\n            updateTextInputValue={setHighlightInputValue}\n            icon={'*'}\n            insertedText={'[*] '}\n          />\n          <br></br>\n          <TextInputButton\n            updateTextInputValue={setHighlightInputValue}\n            id={Modifier.FLAT}\n            icon={ModifierSymbolMap[Modifier.FLAT]}\n            insertedText={'[' + ModifierDescriptionMap[Modifier.FLAT] + '] '}\n          />\n          <TextInputButton\n            updateTextInputValue={setHighlightInputValue}\n            id={Modifier.INCREASED}\n            icon={ModifierSymbolMap[Modifier.INCREASED]}\n            insertedText={\n              '[' + ModifierDescriptionMap[Modifier.INCREASED] + '] '\n            }\n          />\n        </div>\n        <br></br>\n        <div>\n          Highlight:{' '}\n          <input\n            type={'text'}\n            onFocus={onFocus}\n            onChange={(e) => {\n              // need to set value manually: https://stackoverflow.com/questions/41736213/why-cant-i-change-my-input-value-in-react-even-with-the-onchange-listener\n              setHighlightInputValue(e.target.value);\n            }}\n            onBlur={onBlur}\n            value={highlightInputValue}\n          ></input>\n          <button onClick={onFireSearch}>🔎</button>\n          <button onClick={onCancelSearch}>🚫</button>\n        </div>\n        {showAdvancedSearch ? (\n          <>\n            <div>\n              Highlight 2: <input type={'text'}></input>\n              <button>Apply</button>\n              <button>Cancel</button>\n            </div>\n            <br></br>\n            <div>Filter:</div>\n            <br></br>\n            <div>\n              Show if: <input type={'text'}></input>\n              <button>Apply</button>\n              <button>Cancel</button>\n            </div>\n            <br></br>\n            <div>Color:</div>\n            <br></br>\n            <div>\n              Grayscale by: <input type={'text'}></input>\n              <button>Apply</button>\n              <button>Cancel</button>\n            </div>\n            <div>\n              Color by: <input type={'text'}></input>\n              <button>Apply</button>\n              <button>Cancel</button>\n            </div>\n            <br></br>\n            <div>Shape:</div>\n            <br></br>\n            <div>\n              Shape = | if: <input type={'text'}></input>\n              <button>Apply</button>\n              <button>Cancel</button>\n            </div>\n            <br></br>\n            <br></br>\n            <div>\n              <input type={'text'}></input>\n              <button>Save config</button>\n            </div>\n            <div>\n              <input type={'text'}></input>\n              <button>Load config</button>\n            </div>\n            <div>\n              <button>Reset to defaults</button>\n            </div>\n            <br></br>\n            <div>\n              <button\n                onClick={() => {\n                  setShowAdvancedSearch(false);\n                }}\n              >\n                Use basic search\n              </button>\n            </div>\n          </>\n        ) : (\n          <>\n            <br></br>\n            <div>\n              <button\n                onClick={() => {\n                  setShowAdvancedSearch(true);\n                }}\n              >\n                Use custom search\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction SymbolButton(props: {\n  updateTextInputValue: (fn: (s: string) => string) => void;\n  attribute: Attribute;\n}) {\n  return (\n    <TextInputButton\n      updateTextInputValue={props.updateTextInputValue}\n      insertedText={'[' + AttributeDescriptionMap[props.attribute] + '] '}\n      icon={AttributeSymbolMap[props.attribute]}\n    />\n  );\n}\n\nfunction TextInputButton(props: {\n  updateTextInputValue: (fn: (s: string) => string) => void;\n  icon: string;\n  id?: any;\n  insertedText: string;\n}) {\n  return (\n    <button\n      onMouseDown={(e) => {\n        // needed to preserve textbox focus: https://stackoverflow.com/questions/12154954/how-to-make-element-not-lose-focus-when-button-is-pressed\n        // keydown does NOT work here!\n        e.preventDefault();\n      }}\n      onPointerDown={(e) => {\n        e.preventDefault();\n      }}\n      onClick={(e) => {\n        e.preventDefault();\n        props.updateTextInputValue((prev) => prev + props.insertedText);\n      }}\n    >\n      {props.icon}\n    </button>\n  );\n}\n","import React from 'react';\nimport './TabContent.css';\nimport { GameState } from '../../data/GameState';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { STARTING_NODE_DESCRIPTION } from '../GameArea/computeVirtualNodeDataMap';\nimport { DebugTabContent } from './DebugTab';\nimport { StrategicTab } from './StrategicTab';\n\nexport enum TAB_NAME {\n  EMPTY = 'EMPTY',\n  SELECTED_NODE = 'SELECTED_NODE',\n  STATS = 'STATS',\n  QUESTS = 'QUESTS',\n  DEBUG = 'DEBUG',\n  HELP = 'HELP',\n  STRATEGIC_VIEW = 'STRATEGIC_VIEW',\n}\n\n// in charge of constructing content. no css\nexport function TabContentInterface(props: {\n  tabName: TAB_NAME;\n  gameState: GameState;\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n}) {\n  const { tabName } = props;\n\n  const tabComponents = {\n    [TAB_NAME.EMPTY]: <EmptyTabContent />,\n    [TAB_NAME.SELECTED_NODE]: (\n      <SelectedNodeTabContent gameState={props.gameState} />\n    ),\n    [TAB_NAME.STATS]: <>stats info???</>,\n    [TAB_NAME.QUESTS]: <>quests info???</>,\n    [TAB_NAME.STRATEGIC_VIEW]: (\n      <StrategicTab gameState={props.gameState} updaters={props.updaters} />\n    ),\n    [TAB_NAME.DEBUG]: (\n      <DebugTabContent\n        gameState={props.gameState}\n        updaters={props.updaters}\n        hidden={tabName !== TAB_NAME.DEBUG}\n      />\n    ),\n    [TAB_NAME.HELP]: <>How to play the game</>,\n  };\n\n  return <TabContentSelector tabComponents={tabComponents} tabName={tabName} />;\n}\n\n// layout & switch statement. pure. no knowledge of game state\nfunction TabContentSelector(props: {\n  tabComponents: { [k in TAB_NAME]: React.ReactNode };\n  tabName: TAB_NAME;\n}) {\n  const selectedTabName = props.tabName;\n  const tabNames = Object.keys(TAB_NAME) as TAB_NAME[];\n\n  return (\n    <>\n      {tabNames.map((tabName) => {\n        return (\n          <div key={tabName} hidden={tabName !== selectedTabName}>\n            {props.tabComponents[tabName]!}\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\n/**\n * Tabs\n */\nexport const EmptyTabContent = React.memo(EmptyTabContentComponent);\nfunction EmptyTabContentComponent(props: {}) {\n  console.log('got here empty tab content');\n  return <div>Nothing here!</div>;\n}\n\nexport const SelectedNodeTabContent = React.memo(\n  SelectedNodeTabContentComponent\n);\n// TODO(bowei): trim down the game state here\nfunction SelectedNodeTabContentComponent(props: { gameState: GameState }) {\n  const { gameState } = props;\n  const location = gameState.playerUI.cursoredNodeLocation;\n\n  if (location === null) {\n    return (\n      <>\n        <div>Nothing selected!</div>\n        <div>\n          <br></br>\n        </div>\n        <div>Hover and click the question mark tooltip to select a node.</div>\n      </>\n    );\n  }\n\n  let description = '';\n  if (location.equals(Vector3.Zero)) {\n    description = STARTING_NODE_DESCRIPTION;\n  } else if (gameState.worldGen.lockMap?.get(location) !== undefined) {\n    description = 'A locked node.';\n  } else {\n    description = 'An allocatable node.';\n  }\n\n  let xyCoords = new Vector2(\n    location.x - location.y / 2,\n    (location.y * Math.sqrt(3)) / 2\n  );\n  xyCoords = new Vector2(\n    Math.round(xyCoords.x * 100) / 100,\n    Math.round(xyCoords.y * 100) / 100\n  );\n\n  const takenStatus = (\n    gameState.playerSave.allocationStatusMap?.get(location)?.taken || false\n  ).toString();\n  const reachableStatus = (\n    gameState.computed.reachableStatusMap?.get(location)?.reachable || false\n  ).toString();\n  const visibleStatus = (\n    gameState.computed.fogOfWarStatusMap?.get(location)?.visible || false\n  ).toString();\n\n  return (\n    <>\n      <div className=\"tab-content-body\">\n        <div>\n          Location: ( {xyCoords.x} , {xyCoords.y} ) , z-layer = {location.z}\n        </div>\n        <br></br>\n        <div>Description: {description}</div>\n        <br></br>\n        <div>Taken?: {takenStatus}</div>\n        <div>Reachable?: {reachableStatus}</div>\n        <div>Visible?: {visibleStatus}</div>\n        <div>Locked?: {'???'}</div>\n        <br></br>\n        <div>Contents: {'???'}</div>\n      </div>\n    </>\n  );\n}\n","import { TAB_NAME } from '../components/Sidebars/TabContentInterface';\nimport { Vector2 } from '../lib/util/geometry/vector2';\nimport { Vector3 } from '../lib/util/geometry/vector3';\n\nexport const initialTabLabels: { [k in 'left' | 'right']: TAB_NAME[] } = {\n  left: [],\n  right: [\n    TAB_NAME.SELECTED_NODE,\n    TAB_NAME.STATS,\n    TAB_NAME.QUESTS,\n    TAB_NAME.DEBUG,\n    TAB_NAME.HELP,\n    TAB_NAME.STRATEGIC_VIEW,\n  ],\n};\n\nexport type PlayerUIState = {\n  /**\n   * Determines if pixi (i.e. strategic view) is hidden or not.\n   */\n  isPixiHidden: boolean;\n  /**\n   * Determines where in the universe the user has scrolled to.\n   */\n  virtualGridLocation: Vector3;\n  /**\n   * Which, if any, node is highlighted with a selection cursor\n   */\n  cursoredNodeLocation: Vector3 | null;\n  /**\n   * state of the sidebar component\n   */\n  isSidebarOpen: boolean;\n  /**\n   * whether or not the cursor is captured by a text entry element. if so, we need to allow default behavior on keyboard events\n   */\n  isTextBoxFocused: boolean;\n\n  /**\n   * Tab controls.\n   */\n  tabs: {\n    left: {\n      tabs: TAB_NAME[];\n      activeIndex: number;\n    };\n    right: {\n      tabs: TAB_NAME[];\n      activeIndex: number;\n    };\n  };\n\n  strategicSearch: StrategicSearchState;\n\n  // WIP?\n  virtualApproximateScroll?: Vector2;\n  strategicGridLocation?: Vector3;\n};\n\nexport type StrategicSearchState = {\n  highlight1: {\n    value: string;\n  };\n};\n\nexport const newPlayerUIState = (): PlayerUIState => {\n  return {\n    tabs: {\n      left: {\n        tabs: initialTabLabels['left'],\n        activeIndex: 0,\n      },\n      right: {\n        tabs: initialTabLabels['right'],\n        activeIndex: 0,\n      },\n    },\n    strategicSearch: {\n      highlight1: {\n        value: '',\n      },\n    },\n    isPixiHidden: true,\n    virtualGridLocation: Vector3.Zero,\n    cursoredNodeLocation: null,\n    isSidebarOpen: false,\n    isTextBoxFocused: false,\n  };\n};\n\nconst serializeToObject = (s: PlayerUIState): object => {\n  return {\n    ...s,\n    virtualGridLocation: Vector3.SerializeToObject(s.virtualGridLocation),\n  };\n};\n\nconst serialize = (s: PlayerUIState) => JSON.stringify(serializeToObject(s));\n\nconst deserializeFromObject = (obj: any): PlayerUIState | null => {\n  if (\n    !obj ||\n    !obj.hasOwnProperty('isPixiHidden') ||\n    !obj.hasOwnProperty('virtualGridLocation') ||\n    !obj.hasOwnProperty('cursoredNodeLocation') ||\n    !obj.hasOwnProperty('isSidebarOpen') ||\n    !obj.hasOwnProperty('isTextBoxFocused') ||\n    !obj.hasOwnProperty('tabs') ||\n    !obj.hasOwnProperty('strategicSearch')\n  ) {\n    console.error('Failed deserializing PlayerUIState: ', obj);\n    return null;\n  }\n\n  const virtualGridLocation = Vector3.Deserialize(obj.virtualGridLocation);\n  if (!virtualGridLocation) {\n    return null;\n  }\n  const cursoredNodeLocation = Vector3.Deserialize(obj.cursoredNodeLocation);\n\n  return {\n    ...obj,\n    virtualGridLocation,\n    cursoredNodeLocation,\n  } as PlayerUIState;\n};\n\nconst deserialize = (obj: string) => deserializeFromObject(JSON.parse(obj));\n\nconst storageKey = 'PlayerUIState';\n\n/**\n * Tries to load from local storage and falls back to creating a new object if unsuccessful.\n * see: https://gist.github.com/muzfr7/7e15582add46e74dee111002ec6cf594\n * http://vaughnroyko.com/idbonbeforeunload/\n * https://discourse.mozilla.org/t/saving-to-localstorage-on-window-close/35627/7\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n */\nconst tryLoad = (): PlayerUIState => {\n  const loaded = load();\n  if (loaded) {\n    return loaded;\n  } else {\n    console.log('Failed to load PlayerUIState');\n    return newPlayerUIState();\n  }\n};\n\nconst load = (): PlayerUIState | null => {\n  const data = window.localStorage.getItem(storageKey);\n  const loaded = (data && deserialize(data)) || null;\n  return loaded;\n};\n\nconst store = (s: PlayerUIState) => {\n  const data = serialize(s);\n  window.localStorage.setItem(storageKey, data);\n};\n\nconst clear = () => {\n  window.localStorage.setItem(storageKey, '');\n};\n\n// eslint-disable-next-line\nexport const PlayerUIState = {\n  new: newPlayerUIState,\n  serialize,\n  deserialize,\n  tryLoad,\n  load,\n  store,\n  clear,\n};\n","import { GameState } from '../data/GameState';\nimport {\n  LockStatus,\n  NodeReachableStatus,\n  NodeVisibleStatus,\n} from '../data/NodeStatus';\nimport { newPlayerIntentState } from '../data/PlayerIntentState';\nimport { newWindowState } from '../data/WindowState';\nimport { newPlayerSaveState } from '../data/PlayerSaveState';\nimport { HashMap } from '../lib/util/data_structures/hash';\nimport { Vector3 } from '../lib/util/geometry/vector3';\nimport { getWithinDistance, IReadonlySet } from './lib/HexGrid';\nimport { WorldGenStateFactory } from './worldGen/WorldGenStateFactory';\nimport { FOG_OF_WAR_DISTANCE } from './actions/AllocateNode';\nimport { newDebugState } from '../data/DebugState';\nimport { PlayerUIState } from '../data/PlayerUIState';\n\nexport type GameStateConfig = any;\n\nconst DEFAULT_SEED = 0x19283;\n\nexport class GameStateFactory {\n  public config: GameStateConfig;\n\n  constructor(config: GameStateConfig) {\n    this.config = config;\n  }\n\n  /**\n   * Tries to read out game state info from localstorage. if not present, creates a new state\n   */\n  public loadOrCreate(seed: number | undefined | null = undefined): GameState {\n    const mySeed = seed || DEFAULT_SEED;\n\n    const worldGenStateFactory = new WorldGenStateFactory({});\n    const gameState: GameState = {\n      tick: 0,\n      worldGen: worldGenStateFactory.tryLoad({ seed: mySeed }),\n      playerSave: newPlayerSaveState(),\n      playerUI: PlayerUIState.tryLoad(),\n      computed: {},\n      intent: newPlayerIntentState(),\n      windowState: newWindowState(),\n      debug: newDebugState(),\n      justDisabledSave: false,\n    };\n\n    loadComputed(gameState);\n\n    return gameState;\n  }\n\n  public create(seed: number | undefined | null = undefined): GameState {\n    if (seed === undefined) {\n      // assertOnlyCalledOnce(\"GameStateFactory.create\");\n    }\n    const mySeed = seed || DEFAULT_SEED;\n\n    const worldGenStateFactory = new WorldGenStateFactory({});\n    const gameState: GameState = {\n      tick: 0,\n      worldGen: worldGenStateFactory.create({ seed: mySeed }),\n      playerSave: newPlayerSaveState(),\n      playerUI: PlayerUIState.new(),\n      computed: {},\n      intent: newPlayerIntentState(),\n      windowState: newWindowState(),\n      debug: newDebugState(),\n      justDisabledSave: false,\n    };\n\n    loadComputed(gameState);\n\n    return gameState;\n  }\n}\n\n/**\n * computes the computed portion of game state from a freshly created or loaded game state and inserts it into the provided obj\n * @param gameState\n */\nexport function loadComputed(gameState: GameState): GameState {\n  gameState.computed.lockStatusMap = new HashMap();\n  gameState.computed.fogOfWarStatusMap = new HashMap();\n  gameState.computed.reachableStatusMap = new HashMap();\n\n  /**\n   * Initialize fog of war and visible locks\n   */\n  // let prevMap = gameState.playerSave.allocationStatusMap;\n  // first precompute the nearby lock states\n  getWithinDistance(Vector3.Zero, FOG_OF_WAR_DISTANCE).forEach((n) => {\n    gameState.worldGen.lockMap.precompute(n);\n  });\n  // fill in lock statuses with computed statuses\n  {\n    let prevMap = gameState.computed.lockStatusMap;\n    // let nodeLocation = Vector3.Zero;\n    const prevGameState = gameState;\n\n    for (let [location, lockData] of prevGameState.worldGen.lockMap.entries()) {\n      if (lockData) {\n        // compute lock status\n        const newStatus = LockStatus.TICKING;\n        prevMap.put(location, newStatus);\n      }\n    }\n  }\n  // now fog of war flow vision based on computed lock statuses\n  {\n    let prevMap = gameState.computed.fogOfWarStatusMap;\n    let prevReachableStatusMap = gameState.computed.reachableStatusMap;\n    let nodeLocation = Vector3.Zero;\n    // let newStatus = NodeAllocatedStatus.TAKEN;\n    const prevGameState = gameState;\n\n    prevMap.put(nodeLocation, NodeVisibleStatus.true);\n\n    getWithinDistance(nodeLocation, 1).forEach((n) => {\n      prevMap.put(n, NodeVisibleStatus.true);\n      prevReachableStatusMap.put(n, NodeReachableStatus.true);\n    });\n\n    // make sure we make use of lock state\n    // getWithinDistance(nodeLocation, 3).forEach((n) => {\n    // const validLocks = prevGameState.worldGen.lockMap\n    const validLocks: IReadonlySet<Vector3> = {\n      // TODO(bowei): optimize this?\n      contains: (v: Vector3) => {\n        // const maybeLock = prevGameState.worldGen.lockMap.get(v);\n        const maybeLock = prevGameState.computed.lockStatusMap?.get(v);\n        if (maybeLock && maybeLock !== LockStatus.OPEN) {\n          return true;\n        }\n        return false;\n      },\n    };\n    getWithinDistance(nodeLocation, FOG_OF_WAR_DISTANCE, 0, validLocks).forEach(\n      (n) => {\n        if (!prevMap.get(n)?.visible) {\n          // NOTE(bowei): fuck, this doesnt cause a update to be propagated... i guess it's fine though\n          prevGameState.worldGen.lockMap.precompute(n);\n          prevMap.put(n, NodeVisibleStatus.true);\n        }\n      }\n    );\n  }\n  return gameState;\n}\n","import { Vector2 } from '../lib/util/geometry/vector2';\n\nexport type DebugState = {\n  retriggerVirtualGridDims: () => void;\n  debugShowScrollbars: boolean; // default false\n  rerenderGameAreaGrid: () => void;\n  enableScrollJump: boolean; // default true\n  getForceJumpOffset: () => Vector2 | void;\n  getOffsetX: () => number | void;\n  isFlipCursored: () => boolean | void;\n};\n\nexport const newDebugState = (): DebugState => {\n  return {\n    retriggerVirtualGridDims: () => {},\n    debugShowScrollbars: false,\n    rerenderGameAreaGrid: () => {},\n    enableScrollJump: true,\n    getForceJumpOffset: () => {},\n    getOffsetX: () => {},\n    isFlipCursored: () => {},\n  };\n};\n","import { Vector2 } from '../../lib/util/geometry/vector2';\nimport React, { useEffect } from 'react';\nimport { colorToCss } from '../../pixi/colors';\n\nexport const CssVariablesComponent = React.memo(Component);\n\n/**\n * Handles loading display settings from props into css variables.\n * component is empty in the DOM - can be embedded anywhere in react hierarchy\n */\nfunction Component(props: {\n  appSize: Vector2;\n  hexGridPx: Vector2;\n  borderWidth: number;\n  hexCenterRadius: number;\n  COLORS: any;\n  children?: any;\n}) {\n  const { hexGridPx, borderWidth, hexCenterRadius, appSize, COLORS } = props;\n  useEffect(() => {\n    document.documentElement.style.setProperty(\n      '--grid-width',\n      ` ${hexGridPx.x}px`\n    );\n    document.documentElement.style.setProperty(\n      '--grid-height',\n      ` ${hexGridPx.y}px`\n    );\n    document.documentElement.style.setProperty(\n      '--hex-center-radius',\n      ` ${hexCenterRadius}px`\n    );\n    document.documentElement.style.setProperty(\n      '--border-width',\n      ` ${borderWidth}px`\n    );\n  }, [hexGridPx, hexCenterRadius, borderWidth]);\n  useEffect(() => {\n    document.documentElement.style.setProperty(\n      '--background-black',\n      colorToCss(COLORS.backgroundBlue)\n    );\n    document.documentElement.style.setProperty(\n      '--deemphasized-black',\n      colorToCss(COLORS.grayBlack)\n    );\n    document.documentElement.style.setProperty(\n      '--active-purple',\n      colorToCss(COLORS.nodePink)\n    );\n    document.documentElement.style.setProperty(\n      '--border-unimportant-black',\n      colorToCss(COLORS.borderBlack)\n    );\n    document.documentElement.style.setProperty(\n      '--border-important-white',\n      colorToCss(COLORS.borderWhite)\n    );\n    document.documentElement.style.setProperty(\n      '--text-readable-white',\n      colorToCss(COLORS.textWhite)\n    );\n  }, [COLORS]);\n  useEffect(() => {\n    document.documentElement.style.setProperty(\n      '--app-size-width',\n      ` ${appSize.x}px`\n    );\n    document.documentElement.style.setProperty(\n      '--app-size-height',\n      ` ${appSize.y}px`\n    );\n  }, [appSize]);\n\n  return <>{props.children}</>;\n}\n","import './GameAreaCell.css';\nimport './GameArea.css';\n\nimport classnames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport { NodeReactData } from './computeVirtualNodeDataMap';\nimport { NodeAllocatedStatus } from '../../data/NodeStatus';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\n\n/**\n * Smart wrapper for the Cell (rectangular component of a hex grid).\n *\n * Handles sending the click event upstream to cause a status update.\n * @param idx x-coord of this cell in its row of hex cells\n * @param rowIdx y-coord of this row of hex cells\n * @param onUpdateStatus callback for updating the status of this cell\n * @param nodeData react fragments to help render this cell\n * @param isCursored whether or not to display a flashing cursor for this cell\n * @param onUpdateCursored callback, should be called with the cell virtual position to select that cell, or undefined to unselect the currently selected cell\n */\nexport const GameAreaCell = React.memo(GameAreaCellComponent);\nfunction GameAreaCellComponent({\n  id,\n  onUpdateStatus,\n  nodeData,\n  isCursored,\n  onUpdateCursored,\n  debugIsCursored,\n}: {\n  id: string;\n  onUpdateStatus: (args: {\n    nodeLocation: Vector3;\n    newStatus: NodeAllocatedStatus;\n  }) => void;\n  nodeData: NodeReactData;\n  isCursored: boolean;\n  onUpdateCursored: (v: Vector3 | null) => void;\n  debugIsCursored: boolean;\n}) {\n  // const startTime = +new Date();\n  // console.log(`GameAreaCell key ${id} rerendered at ${startTime}`);\n  const { nodeLocation } = nodeData;\n\n  const handleClick = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n      // console.log(`clicked`);\n      // console.log({ idx, rowIdx, status: nodeData.status });\n      onUpdateStatus({\n        nodeLocation,\n        newStatus: NodeAllocatedStatus.TAKEN,\n      });\n    },\n    [onUpdateStatus, nodeLocation]\n  );\n\n  const handleClickQuestionMark = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n      // TODO(bowei): use nodeData.id here instead of (idx, rowIdx), so that onUpdateStatus callback doesn't ever have to be recreated in the parent statemanager\n      onUpdateCursored(isCursored ? null : nodeLocation);\n    },\n    [isCursored, onUpdateCursored, nodeLocation]\n  );\n\n  return (\n    <Cell\n      key={id}\n      id={id}\n      onClickCenter={handleClick}\n      nodeData={nodeData}\n      onClickQuestionMark={handleClickQuestionMark}\n      isCursored={isCursored}\n      // debugIsCursored={debugIsCursored}\n    ></Cell>\n  );\n}\n\n/**\n * Renderes a single rectangular component of a hex grid.\n * Contains a central node, hover-over tooltips attached to the node, and optionally 2 rectangular text boxes\n * that represent the locked state.\n *\n * @param onClickCenter callback to fire when the node itself (as opposed to the region around it) is clicked.\n * @param onClickQuestionMark callback to fire when the question mark tooltip icon is clicked.\n */\nconst Cell = React.memo(CellComponent);\nfunction CellComponent({\n  id,\n  onClickCenter,\n  onClickQuestionMark,\n  nodeData,\n  isCursored,\n  debugIsCursored,\n}: {\n  id: string;\n  onClickCenter: React.MouseEventHandler;\n  onClickQuestionMark: React.MouseEventHandler;\n  nodeData: NodeReactData;\n  isCursored: boolean;\n  debugIsCursored?: boolean;\n}) {\n  // const startTime = +new Date();\n  // console.log(`GameAreaCellComponent key: ${id} rerendered at ${startTime}`);\n\n  const status = nodeData.status;\n  const isLocked = !!nodeData.lockData;\n\n  const [hovered, setHovered] = useState(false);\n\n  const onHover = (e: React.PointerEvent) => {\n    console.log(`got pointer enter on ${id}`);\n    setHovered(true);\n  };\n  const onUnhover = (e: React.PointerEvent) => {\n    console.log(`got pointer leave on ${id}`);\n    setHovered(false);\n  };\n\n  return (\n    <div className=\"hex-block hex-full-block\" key={id} id={id}>\n      <div\n        className={classnames(\n          'hex-center',\n          status === NodeAllocatedStatus.TAKEN\n            ? 'node-allocated'\n            : 'node-unallocated',\n          status === NodeAllocatedStatus.TAKEN ||\n            status === NodeAllocatedStatus.UNREACHABLE\n            ? 'border-unimportant'\n            : 'border-important'\n        )}\n        onClick={onClickCenter}\n        onPointerEnter={onHover}\n        onPointerLeave={onUnhover}\n        hidden={status === NodeAllocatedStatus.HIDDEN}\n      >\n        <div className=\"hex-center-text-wrapper\">\n          <div className=\"tiny-text\">{nodeData.shortText}</div>\n        </div>\n      </div>\n      {isLocked ? (\n        <div\n          className=\"hex-center-lock\"\n          hidden={status === NodeAllocatedStatus.HIDDEN}\n          onPointerEnter={onHover}\n          onPointerLeave={onUnhover}\n        >\n          <div className=\"hex-center-lock-left\">\n            <div className=\"tiny-text\">\n              {nodeData.lockData?.shortTextTarget}\n            </div>\n          </div>\n          <div className=\"hex-center-lock-right\">\n            <div className=\"tiny-text\">{nodeData.lockData?.shortTextTimer}</div>\n          </div>\n        </div>\n      ) : null}\n      <div className=\"empty-positioned node-tooltip-wrapper\">\n        <div\n          // className=\"hover-only absolute-positioned node-tooltip\" // temp disabling this, the css is causing perf issues\n          className=\"absolute-positioned node-tooltip\"\n          hidden={!hovered}\n        >\n          {nodeData.toolTipText}\n        </div>\n      </div>\n      <div className=\"empty-positioned\">\n        <div className=\"hover-only-2 absolute-positioned\">\n          <div\n            className=\"question\"\n            hidden={status === NodeAllocatedStatus.HIDDEN}\n            onClick={onClickQuestionMark}\n          >\n            ?\n          </div>\n        </div>\n      </div>\n      <div className=\"empty-positioned selection-cursor-wrapper\">\n        <div\n          className=\"absolute-positioned selection-cursor\"\n          // hidden={!debugIsCursored}\n          hidden={!isCursored}\n        ></div>\n      </div>\n    </div>\n  );\n}\n","import './GameAreaGrid.css';\nimport './GameArea.css';\n\nimport React, { useMemo } from 'react';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport {\n  computeNodeReactData,\n  NodeReactData,\n} from './computeVirtualNodeDataMap';\nimport { GameAreaCell } from './GameAreaCell';\nimport { NodeAllocatedStatus } from '../../data/NodeStatus';\nimport { GameAreaSubState } from './GameAreaInterface';\nimport { LazyHashMap } from '../../lib/util/lazy';\nimport { extractDeps } from '../../lib/util/misc';\n\n/**\n * The subset of the game state that is relevant to game area components.\n */\nexport function extractGameGridSubState(gameState: GameAreaSubState) {\n  return {\n    playerUI: {\n      cursoredNodeLocation: gameState.playerUI.cursoredNodeLocation,\n    },\n    playerSave: {\n      allocationStatusMap: gameState.playerSave.allocationStatusMap,\n    },\n    worldGen: {\n      nodeContentsMap: gameState.worldGen.nodeContentsMap,\n      lockMap: gameState.worldGen.lockMap,\n    },\n    computed: {\n      fogOfWarStatusMap: gameState.computed.fogOfWarStatusMap,\n      reachableStatusMap: gameState.computed.reachableStatusMap,\n      lockStatusMap: gameState.computed.lockStatusMap,\n    },\n  };\n}\nexport type GameGridSubState = ReturnType<typeof extractGameGridSubState>;\nexport const depsGameGridSubState = extractDeps(extractGameGridSubState);\n\nexport const GameAreaGrid = React.memo(Component);\n/**\n * Dumb-ish component that manages the game board where the skill tree is located\n * , as well as the \"virtual\"\n * game space which is larger than the currently visible scrollable area the player can see.\n *\n * @param virtualGridDims the integer dimensions of the virtual scrollable space, measured in grid units. integer vector.\n * @param virtualCoordsToLocation utility stateless function to convert from ui virtual grid coords (ints) to 3d node location in game state (ints)\n * @param virtualNodeDataMap table of ui grid corods to object containing react fragments for contents of that node\n * @param updateNodeStatusCb callback for when a node is allocated and the node status needs to change. need to provide the virtual grid coords of the node to be allocated, and the new status.\n * @param cursoredVirtualNode 2d virtual dims of the node which is currently cursored (flashing and may show up in sidebar), or undefined if there is none\n * @param setCursoredVirtualNode callback which takes virtual 2d coords and causes that node to now be cursored, or undefined to clear cursor\n */\nfunction Component(props: {\n  gameState: GameGridSubState;\n  virtualGridDims: Vector2;\n  virtualCoordsToLocation: (v: Vector2) => Vector3;\n  updateNodeStatusByLocationCb: (args: {\n    nodeLocation: Vector3;\n    newStatus: NodeAllocatedStatus;\n  }) => void;\n  cursoredVirtualNode: Vector2 | null;\n  setCursoredLocation: (v: Vector3 | null) => void;\n  debug?: any;\n}) {\n  const {\n    gameState,\n    virtualGridDims,\n    virtualCoordsToLocation,\n    updateNodeStatusByLocationCb,\n    cursoredVirtualNode,\n    setCursoredLocation,\n    debug,\n  } = props;\n  const startTime = +new Date();\n\n  debug?.rerenderGameAreaGrid();\n  // const debugOffsetX = (debug?.getOffsetX?.() || 0) % 8;\n  const flipCursored = debug?.isFlipCursored?.() || false;\n  // console.log('Game area grid rerender');\n\n  const nodeReactDataMap = useMemo(\n    () =>\n      new LazyHashMap<Vector3, NodeReactData>((location: Vector3) =>\n        computeNodeReactData({ location, gameState })\n      ),\n    [gameState]\n  );\n\n  /**\n   * See pointer/mouse, over/enter/out/leave, event propagation documentation\n   * https://www.w3schools.com/jquery/tryit.asp?filename=tryjquery_event_mouseenter_mouseover#:~:text=mouseenter%20and%20mouseover.-,The%20mouseover%20event%20triggers%20when%20the%20mouse%20pointer%20enters%20the,moved%20over%20the%20div%20element.\n   * https://stackoverflow.com/questions/4697758/prevent-onmouseout-when-hovering-child-element-of-the-parent-absolute-div-withou\n   * https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events\n   * https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Examples#example_5_event_propagation\n   * https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation\n   * https://developer.mozilla.org/en-US/docs/Web/API/Event/target\n   * https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget\n   * https://stackoverflow.com/questions/55546973/react-onmouseenter-event-triggering-on-child-element\n   * https://developer.mozilla.org/en-US/docs/Web/API/Touch_events\n   */\n  const result = (\n    <>\n      {Array(virtualGridDims.y)\n        .fill(0)\n        .map((_, y) => (\n          <Row\n            key={virtualCoordsToLocation(new Vector2(0, y)).y.toString()} // important to force react to hang on to the old row\n            // key={y} // stupid, for debug\n            rowIdx={y}\n          >\n            {\n              Array(virtualGridDims.x)\n                .fill(0)\n                .map((_, x) => {\n                  const virtualCoords = new Vector2(x, y);\n                  const location = virtualCoordsToLocation(virtualCoords);\n                  const nodeData = nodeReactDataMap.get(location);\n                  let isCursored =\n                    !!cursoredVirtualNode &&\n                    cursoredVirtualNode.equals(virtualCoords);\n                  // if (flipCursored) {\n                  //   isCursored = !isCursored;\n                  // }\n                  const key = nodeData.id || `loading${x}`;\n                  // console.log(`key should be ${key} from ${nodeData.toString()}`);\n                  return (\n                    <GameAreaCell\n                      // key={nodeData.id}\n                      key={key}\n                      id={key}\n                      // key={x.toString() + \",\" + y.toString()} // stupid debug??\n                      // key={x} // debug??\n                      nodeData={nodeData}\n                      onUpdateStatus={updateNodeStatusByLocationCb}\n                      isCursored={isCursored}\n                      debugIsCursored={flipCursored ? !isCursored : isCursored}\n                      onUpdateCursored={setCursoredLocation}\n                    />\n                  );\n                })\n              // .slice(debugOffsetX, virtualGridDims.x - 8 + debugOffsetX)\n            }\n          </Row>\n        ))}\n    </>\n  );\n  const now = +new Date();\n  const elapsed = now - startTime;\n  console.log(`Game area grid elapsed ${elapsed}ms at ${now}`);\n  return result;\n}\n\nconst Row = React.memo(RowComponent);\nfunction RowComponent({\n  rowIdx,\n  children,\n}: {\n  rowIdx: number;\n  children?: React.ReactNode;\n}) {\n  const odd = !!(rowIdx % 2);\n\n  // If the row number is odd, prepend a half-block to the row contents of hex blocks\n  // Else, if the row number is even, append a half-block\n  return (\n    <div className=\"hex-block-row\">\n      {odd && <div className=\"hex-block hex-half-block\" />}\n      {children}\n      {!odd && <div className=\"hex-block hex-half-block\" />}\n    </div>\n  );\n}\n","import './GameAreaGrid.css';\nimport './GameArea.css';\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { GameState } from '../../data/GameState';\n\nconst SCROLL_INTERVAL_MS = 8; // polling interval - how often to check keyboard scroll state. recommended 60 FPS == 16ms or faster.\nconst SCROLL_VELOCITY = 0.75; // pixels per ms. independent of interval_ms tick rate\n\ntype Props = {\n  hidden: boolean;\n  appSize: Vector2;\n  hexGridPx: Vector2; // the size of a single grid unit, in px\n  virtualGridDims: Vector2; // in grid units. width x height, guaranteed to be integers\n  children?: any;\n  debug?: any;\n\n  updaters: UpdaterGeneratorType2<GameState, GameState>; // TODO(bowei): remove this\n  keyboardScrollDirection: Vector2;\n};\n\nexport const InfiniteScrollManager = React.memo(Component);\n/**\n * Manages the scroll state.\n * @param hidden true to disappear this entire component and all its children.\n * @param appSize size of the scrollable viewport\n * @param hexGridPx size of a single grid unit, in px. needs to be a good ratio if we want an actual hex grid\n * @param virtualGridDims integer vector for # of grid cells in each dimension\n * @param children any react subcomponents. Note that updating children causes this component to update as well - react memo is sensitive to it\n * @param debug TODO(bowei): contains triggers (extracted out of gameState.playerUI) for debugging the scroll jump and the virtual position rerender, SEPARATELY\n * @param keyboardScrollDirection unit-ish vector indicating player using keyboard controls to scroll (we disabled native browser keyboard scrolling)\n */\nfunction Component(props: Props) {\n  const {\n    hexGridPx,\n    virtualGridDims,\n    appSize,\n    updaters,\n    keyboardScrollDirection,\n    debug,\n  } = props;\n  // console.log('infinite scroll manager rerender');\n\n  const container = useRef<HTMLDivElement>(null);\n  const previousContainer = useRef<HTMLDivElement>(null) as any;\n\n  const [jumpOffset, setJumpOffset] = useState(new Vector2(0, 0));\n\n  // Set initial position in the center, exactly once!\n  useEffect(() => {\n    if (\n      container.current != null &&\n      container.current !== previousContainer.current\n    ) {\n      // TODO(bowei): figure out where the actual center is, so we can center the screen on the starting node perfectly\n      container.current.scrollTop =\n        (virtualGridDims.y * hexGridPx.y - appSize.y) / 2;\n      container.current.scrollLeft =\n        ((virtualGridDims.x + 0.5) * hexGridPx.x - appSize.x) / 2;\n    }\n    previousContainer.current = container.current;\n  }, [appSize, virtualGridDims, hexGridPx]);\n\n  // Uses offset to jump to a new scroll position, exactly once\n  useEffect(() => {\n    if (!jumpOffset) return;\n    const ref = container.current;\n    if (!ref) return;\n    ref.scrollTo(\n      ref.scrollLeft - jumpOffset.x * hexGridPx.x,\n      ref.scrollTop - jumpOffset.y * hexGridPx.y\n    );\n  }, [jumpOffset, hexGridPx]);\n\n  // when we trigger a scroll jump, compute where we jump to, and don't forget to update the virtual grid location\n  const handleJump = useCallback(\n    (args: { direction: Vector2 }) => {\n      // // direction: if we hit bottom right of screen, direction == (1,1)\n      // // console.log({ direction: args.direction });\n      // // let jumpAmounts = virtualGridDims.multiply(0.35).floor();\n      // let jumpAmounts = virtualGridDims.multiply(0.05).floor();\n      // // jumpAmounts = jumpAmounts.withY(Math.floor(jumpAmounts.y / 2) * 2);\n      // jumpAmounts = jumpAmounts\n      //   .clampX(1, virtualGridDims.x - 1)\n      //   .clampY(1, virtualGridDims.y - 1);\n      // // .clampY(2, Math.floor((virtualGridDims.y - 1) / 2) * 2);\n\n      // let newJumpOffset = jumpAmounts.multiply(args.direction); // multiply the magnitudes by unit-ish direction vector\n      let locationOffset = new Vector2(args.direction.x, -1 * args.direction.y); // biased\n      if (args.direction.x === args.direction.y) {\n        locationOffset = new Vector2(0, -1 * args.direction.y);\n      }\n\n      const newJumpOffset = new Vector2(locationOffset.x, 0).add(\n        new Vector2(-0.5, -1).multiply(locationOffset.y)\n      );\n\n      // console.log({ newJumpOffset });\n\n      updaters.playerUI.virtualGridLocation.enqueueUpdate((it) => {\n        return it.add(Vector3.FromVector2(locationOffset, 0));\n      });\n      // force a rerender\n      setJumpOffset(newJumpOffset);\n    },\n    [updaters]\n  );\n\n  const getForceJumpOffset = debug.getForceJumpOffset;\n  useEffect(() => {\n    const newJumpOffset = getForceJumpOffset?.();\n    if (newJumpOffset) {\n      updaters.playerUI.virtualGridLocation.enqueueUpdate((it) => {\n        return it\n          .addX(newJumpOffset.x)\n          .add(new Vector3(-1, -2, 0).multiply(newJumpOffset.y / 2));\n      });\n    }\n  }, [updaters, getForceJumpOffset]);\n\n  // Detect if the user has scrolled to the edge of the screen, and if so trigger a scroll jump\n  const enableScrollJump = debug.enableScrollJump;\n  const handleScroll = useCallback(\n    (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n      // console.log(\"NOW IN handlescroll\");\n\n      // fast exit if debug\n      if (!enableScrollJump) {\n        // console.log(\"skipped scroll trigger due to debug\", { debug });\n        return;\n      }\n\n      // handle scroll\n      let direction = { x: 0, y: 0 };\n      const target = e.target! as Element;\n      let newScrollTop = target.scrollTop; // only used as boolean to see if it changed\n      let newScrollLeft = target.scrollLeft;\n      if (target.scrollTop < hexGridPx.y * 0.9) {\n        // between 0.1 and 0.4 of leeway is recommended. increasing it more helps with lag but also incurs more virtual area cost.\n        newScrollTop += hexGridPx.y * 2;\n        direction.y -= 1;\n      }\n      if (\n        target.scrollTop >\n        (virtualGridDims.y - 0.9) * hexGridPx.y - appSize.y\n      ) {\n        newScrollTop -= hexGridPx.y * 2;\n        direction.y += 1;\n      }\n      if (target.scrollLeft < hexGridPx.x * 0.9) {\n        // between 0.6 and 0.9 of leeway is recommended. increasing it more helps with lag but also incurs more virtual area cost.\n        newScrollLeft += hexGridPx.x * 2;\n        direction.x -= 1;\n      }\n      if (\n        target.scrollLeft >\n        (virtualGridDims.x - 0.9) * hexGridPx.x - appSize.x\n      ) {\n        newScrollLeft -= hexGridPx.x * 2;\n        direction.x += 1;\n      }\n      // console.log(target);\n      // console.log(target.scrollTop);\n      // console.log(target.scrollLeft);\n\n      if (\n        target.scrollTop !== newScrollTop ||\n        target.scrollLeft !== newScrollLeft\n      ) {\n        // console.log('jump!', +new Date());\n        // target.scrollTo(newScrollLeft, newScrollTop);\n        handleJump({ direction: new Vector2(direction.x, direction.y) });\n      }\n    },\n    [appSize, handleJump, hexGridPx, virtualGridDims, enableScrollJump]\n  );\n\n  // control scroll with keyboard\n  useEffect(() => {\n    if (!keyboardScrollDirection.equals(Vector2.Zero)) {\n      // console.log('nonzero keyboard scroll direction update received');\n\n      let lastTime: number | null = null;\n      const action = () => {\n        const ref = container.current;\n        if (!ref) return;\n        let direction = Vector2.Zero;\n        if (lastTime === null) {\n          direction = keyboardScrollDirection.multiply(SCROLL_INTERVAL_MS); // assume 1 tick\n          lastTime = +new Date();\n        } else {\n          const elapsed = +new Date() - lastTime;\n          if (elapsed > 40) {\n            console.log('WAS SLOW - ' + elapsed.toString());\n          }\n          direction = keyboardScrollDirection.multiply(elapsed);\n          lastTime = +new Date();\n        }\n        direction = direction.multiply(SCROLL_VELOCITY);\n        ref.scrollTo(\n          ref.scrollLeft + direction.x,\n          ref.scrollTop - direction.y // scroll is measured from the top left\n        );\n      };\n      const interval = setInterval(action, SCROLL_INTERVAL_MS);\n      action();\n      return () => clearInterval(interval);\n    }\n  }, [keyboardScrollDirection]);\n\n  return (\n    <div\n      ref={container}\n      className={classnames({\n        'game-area': true,\n        'hidden-scrollbars': !(debug?.debugShowScrollbars || false),\n      })}\n      hidden={props.hidden}\n      onScroll={handleScroll}\n    >\n      <div className=\"virtual-game-area\">{props.children}</div>\n    </div>\n  );\n}\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { GameState } from '../../data/GameState';\nimport {\n  NodeAllocatedStatus,\n  NodeReachableStatus,\n  NodeTakenStatus,\n} from '../../data/NodeStatus';\nimport { AllocateNodeAction } from '../../game/actions/AllocateNode';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport {\n  GameAreaGrid,\n  extractGameGridSubState,\n  depsGameGridSubState,\n} from './GameAreaGrid';\nimport { GameAreaSubState, hexGridPx } from './GameAreaInterface';\nimport { InfiniteScrollManager } from './InfiniteScrollManager';\nimport {\n  convertLocationToVirtualCoords,\n  convertVirtualCoordsToLocation,\n} from './locationUtils';\n\n/**\n * Wrapper for GameAreaGrid that manages game state location <> virtual coord conversions, as well as populating the onClick/onSelect callbacks when interacting with nodes.\n * @param virtualGridDims integer vector for # of grid cells in each dimension\n * @param appSize the playable area\n */\nexport const GameAreaStateManager = React.memo(Component);\nfunction Component(props: {\n  gameState: GameAreaSubState;\n  virtualGridDims: Vector2;\n  appSize: Vector2;\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n  actions: { allocateNode: AllocateNodeAction };\n}) {\n  const { gameState, appSize, virtualGridDims } = props;\n  // console.log('GameArea state manager rerender');\n\n  // Compute some helpful coordinate to location conversions. These MUST be recomputed every time virtualGridLocation changes\n  const virtualCoordsToLocation = useCallback(\n    (virtualCoords: Vector2): Vector3 => {\n      return convertVirtualCoordsToLocation({\n        virtualCoords,\n        virtualGridDims,\n        virtualGridLocation: gameState.playerUI.virtualGridLocation,\n      });\n    },\n    [gameState.playerUI.virtualGridLocation, virtualGridDims]\n  );\n  const locationToVirtualCoords = useCallback(\n    (location: Vector3): Vector2 | null => {\n      return convertLocationToVirtualCoords({\n        location,\n        virtualGridDims,\n        virtualGridLocation: gameState.playerUI.virtualGridLocation,\n      });\n    },\n    [gameState.playerUI.virtualGridLocation, virtualGridDims]\n  );\n\n  // If a node is attempted to be clicked, take its virtual dims and see if that's a valid allocation action\n  const handleUpdateNodeStatusByLocation = useCallback(\n    (args: { nodeLocation: Vector3; newStatus: NodeAllocatedStatus }) => {\n      const { nodeLocation, newStatus } = args;\n\n      const reachableStatus =\n        gameState.computed.reachableStatusMap?.get(nodeLocation) ||\n        NodeReachableStatus.false;\n      if (newStatus === NodeAllocatedStatus.TAKEN) {\n        if (reachableStatus !== NodeReachableStatus.true) {\n          console.log('cant do that, not reachable:', reachableStatus);\n          return;\n        }\n        const maybeLock = gameState.worldGen.lockMap.get(nodeLocation);\n        if (!!maybeLock) {\n          console.log('is locked', maybeLock);\n          return;\n        }\n      }\n\n      if (!gameState.playerSave.allocationStatusMap.get(nodeLocation)?.taken) {\n        props.actions.allocateNode.enqueueAction({\n          nodeLocation,\n          newStatus: NodeTakenStatus.true,\n        });\n      }\n    },\n    [\n      // props.updaters,\n      props.actions,\n      gameState.playerSave.allocationStatusMap,\n      gameState.computed.reachableStatusMap,\n      gameState.worldGen.lockMap,\n    ]\n  );\n  const handleUpdateNodeStatus = useCallback(\n    (args: { virtualCoords: Vector2; newStatus: NodeAllocatedStatus }) => {\n      const { virtualCoords, newStatus } = args;\n\n      // console.log({ got: 'here handleUpdateNodeStatus', virtualCoords, newStatus });\n      const nodeLocation: Vector3 = virtualCoordsToLocation(virtualCoords);\n      handleUpdateNodeStatusByLocation({ nodeLocation, newStatus });\n    },\n    [virtualCoordsToLocation, handleUpdateNodeStatusByLocation]\n  );\n\n  // Manage cursor \"node selected\" state\n  const setCursoredLocation = useCallback(\n    (v: Vector3 | null) => {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate((prev) => {\n        return v;\n      });\n      if (!!v) {\n        // also open the sidebar\n        props.updaters.playerUI.isSidebarOpen.enqueueUpdate(() => true);\n      }\n    },\n    [props.updaters]\n  );\n\n  const cursoredVirtualNodeCoords: Vector2 | null = useMemo(() => {\n    if (gameState.playerUI.cursoredNodeLocation) {\n      // console.log({\n      //   3: gameState.playerUI.cursoredNodeLocation,\n      //   2: locationToVirtualCoords(gameState.playerUI.cursoredNodeLocation),\n      // });\n      return locationToVirtualCoords(gameState.playerUI.cursoredNodeLocation);\n    } else {\n      return null;\n    }\n  }, [gameState.playerUI.cursoredNodeLocation, locationToVirtualCoords]);\n\n  // manage keyboard wasdezx cusored node navigation\n  useEffect(() => {\n    // const newIntent = props.gameState.intent.newIntent;\n    const newLocation = virtualCoordsToLocation(\n      virtualGridDims.divide(2).floor()\n    );\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_EAST) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.addX(1) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_WEST) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.addX(-1) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_NORTHEAST) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.add({ x: 1, y: 1, z: 0 }) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_NORTHWEST) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.addY(1) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_SOUTHEAST) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.addY(-1) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_SOUTHWEST) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.add({ x: -1, y: -1, z: 0 }) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_SOUTH) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate((prev) => {\n        if (prev && prev.y % 2 === 0) {\n          return prev?.add({ x: 0, y: -1, z: 0 });\n        } else if (prev && prev.y % 2 !== 0) {\n          return prev?.add({ x: -1, y: -1, z: 0 });\n        } else {\n          return newLocation;\n        }\n      });\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_NORTH) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate((prev) => {\n        if (prev && prev.y % 2 === 0) {\n          return prev?.add({ x: 1, y: 1, z: 0 });\n        } else if (prev && prev.y % 2 !== 0) {\n          return prev?.add({ x: 0, y: 1, z: 0 });\n        } else {\n          return newLocation;\n        }\n      });\n    }\n    if (props.gameState.intent.newIntent.INTERACT_WITH_NODE) {\n      if (cursoredVirtualNodeCoords) {\n        handleUpdateNodeStatus({\n          virtualCoords: cursoredVirtualNodeCoords,\n          newStatus: NodeAllocatedStatus.TAKEN,\n        });\n      }\n    }\n  }, [\n    props.gameState.intent.newIntent.INTERACT_WITH_NODE,\n    props.gameState.intent.newIntent.MOVE_CURSOR_EAST,\n    props.gameState.intent.newIntent.MOVE_CURSOR_NORTH,\n    props.gameState.intent.newIntent.MOVE_CURSOR_NORTHEAST,\n    props.gameState.intent.newIntent.MOVE_CURSOR_NORTHWEST,\n    props.gameState.intent.newIntent.MOVE_CURSOR_SOUTH,\n    props.gameState.intent.newIntent.MOVE_CURSOR_SOUTHEAST,\n    props.gameState.intent.newIntent.MOVE_CURSOR_SOUTHWEST,\n    props.gameState.intent.newIntent.MOVE_CURSOR_WEST,\n    props.updaters,\n    virtualCoordsToLocation,\n    virtualGridDims,\n    cursoredVirtualNodeCoords,\n    handleUpdateNodeStatus,\n  ]);\n\n  // Manage keyboard scrolling here\n  // TODO(bowei): move this into infinite scroll manager. the only reason this is here is because we have access to intent object conveniently here\n  const keyboardScrollDirection: Vector2 = useMemo(() => {\n    let direction = Vector2.Zero;\n    if (props.gameState.intent.activeIntent.PAN_EAST) {\n      direction = direction.addX(1);\n    }\n    if (props.gameState.intent.activeIntent.PAN_WEST) {\n      direction = direction.addX(-1);\n    }\n    if (props.gameState.intent.activeIntent.PAN_NORTH) {\n      direction = direction.addY(1);\n    }\n    if (props.gameState.intent.activeIntent.PAN_SOUTH) {\n      direction = direction.addY(-1);\n    }\n    return direction;\n  }, [\n    props.gameState.intent.activeIntent.PAN_EAST,\n    props.gameState.intent.activeIntent.PAN_WEST,\n    props.gameState.intent.activeIntent.PAN_NORTH,\n    props.gameState.intent.activeIntent.PAN_SOUTH,\n  ]);\n\n  const infiniteScrollManagerDebug = useMemo(() => {\n    return {\n      debugShowScrollbars: gameState.debug.debugShowScrollbars,\n      enableScrollJump: gameState.debug.enableScrollJump,\n      getForceJumpOffset: gameState.debug.getForceJumpOffset,\n    };\n  }, [\n    gameState.debug.debugShowScrollbars,\n    gameState.debug.enableScrollJump,\n    gameState.debug.getForceJumpOffset,\n  ]);\n\n  const gameAreaGridDebug = useMemo(() => {\n    return {\n      rerenderGameAreaGrid: gameState.debug.rerenderGameAreaGrid,\n      getOffsetX: gameState.debug.getOffsetX,\n      isFlipCursored: gameState.debug.isFlipCursored,\n    };\n  }, [\n    gameState.debug.rerenderGameAreaGrid,\n    gameState.debug.getOffsetX,\n    gameState.debug.isFlipCursored,\n  ]);\n\n  const subGameState = useMemo(() => {\n    return extractGameGridSubState(gameState);\n    // TODO(bowei): use custom hook here so react doesnt complain so much\n    // eslint-disable-next-line\n  }, depsGameGridSubState(gameState));\n\n  return (\n    <>\n      <InfiniteScrollManager\n        hidden={!gameState.playerUI.isPixiHidden}\n        appSize={appSize}\n        updaters={props.updaters}\n        hexGridPx={hexGridPx}\n        virtualGridDims={virtualGridDims}\n        keyboardScrollDirection={keyboardScrollDirection}\n        debug={infiniteScrollManagerDebug}\n      >\n        <GameAreaGrid\n          gameState={subGameState}\n          virtualGridDims={virtualGridDims}\n          virtualCoordsToLocation={virtualCoordsToLocation}\n          updateNodeStatusByLocationCb={handleUpdateNodeStatusByLocation}\n          cursoredVirtualNode={cursoredVirtualNodeCoords}\n          setCursoredLocation={setCursoredLocation}\n          debug={gameAreaGridDebug}\n        />\n      </InfiniteScrollManager>\n    </>\n  );\n}\n","import { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\n\nexport function convertVirtualCoordsToLocation(args: {\n  virtualCoords: Vector2;\n  virtualGridLocation: Vector3;\n  virtualGridDims: Vector2;\n}): Vector3 {\n  const { virtualCoords, virtualGridLocation, virtualGridDims } = args;\n  const virtualCenter = virtualGridDims.divide(2).floor();\n  const offsetFromVirtualCenter = virtualCoords.subtract(virtualCenter);\n  let relativeLocation = Vector2.Zero;\n\n  if (offsetFromVirtualCenter.y % 2 === 0) {\n    // calculate the effect of y\n    relativeLocation = new Vector2(-1, -2).multiply(\n      offsetFromVirtualCenter.y / 2\n    );\n  } else if (virtualCenter.y % 2 === 0) {\n    // half block is not in the center row\n    /**\n     * 0: O - O - O\n     * 1:   O - O - O\n     * 2: O - O - O <- virtualCenter.y\n     * 3:   O - O - O <- offsetFromVirtualCenter.y == 1\n     */\n    relativeLocation = new Vector2(0, -1).add(\n      new Vector2(-1, -2).multiply((offsetFromVirtualCenter.y - 1) / 2)\n    );\n  } else {\n    // half block is in the center row\n    /**\n     * 0: O - O - O\n     * 1:   O - O - O <- virtualCenter.y\n     * 2: O - O - O <- offsetFromVirtualCenter.y == 1\n     * 3:   O - O - O\n     */\n    relativeLocation = new Vector2(-1, -1).add(\n      new Vector2(-1, -2).multiply((offsetFromVirtualCenter.y - 1) / 2)\n    );\n  }\n  // now add in the x offset\n  relativeLocation = relativeLocation.addX(offsetFromVirtualCenter.x);\n\n  return virtualGridLocation.add(Vector3.FromVector2(relativeLocation, 0));\n}\n\nexport function convertLocationToVirtualCoords(args: {\n  location: Vector3;\n  virtualGridLocation: Vector3;\n  virtualGridDims: Vector2;\n}): Vector2 | null {\n  const { location, virtualGridLocation, virtualGridDims } = args;\n  const virtualCenter = virtualGridDims.divide(2).floor();\n  const offsetFromVirtualGridLocation = location.subtract(virtualGridLocation);\n  let relativeVirtualCoords = Vector2.Zero;\n\n  if (offsetFromVirtualGridLocation.z !== 0) {\n    return null;\n  }\n\n  if (offsetFromVirtualGridLocation.y % 2 === 0) {\n    relativeVirtualCoords = new Vector2(-1, -2).multiply(\n      offsetFromVirtualGridLocation.y / 2\n    );\n  } else if (virtualCenter.y % 2 === 0) {\n    // half block is not in the center row\n    /**\n     * 0: O - O - O\n     * 1:   O - O - O <- offsetFromVirtualGridLocation.y == 1\n     * 2: O - O - O <- virtualCenter.y\n     * 3:   O - O - O\n     */\n    relativeVirtualCoords = new Vector2(-1, -1).add(\n      new Vector2(-1, -2).multiply((offsetFromVirtualGridLocation.y - 1) / 2)\n    );\n  } else {\n    // half block is in the center row\n    /**\n     * 0: O - O - O <- offsetFromVirtualGridLocation.y == 1\n     * 1:   O - O - O <- virtualCenter.y\n     * 2: O - O - O\n     * 3:   O - O - O\n     */\n    relativeVirtualCoords = new Vector2(0, -1).add(\n      new Vector2(-1, -2).multiply((offsetFromVirtualGridLocation.y - 1) / 2)\n    );\n  }\n  relativeVirtualCoords = relativeVirtualCoords.addX(\n    offsetFromVirtualGridLocation.x\n  );\n\n  return virtualCenter.add(relativeVirtualCoords);\n}\n","import React, { useMemo } from 'react';\nimport { GameState } from '../../data/GameState';\nimport { appSizeFromWindowSize } from '../../data/WindowState';\nimport { AllocateNodeAction } from '../../game/actions/AllocateNode';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { extractDeps } from '../../lib/util/misc';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport COLORS from '../../pixi/colors';\nimport { CssVariablesComponent } from './CssVariables';\nimport { GameAreaStateManager } from './GameAreaStateManager';\n\n/**\n * Approximations for sqrt(3)/2 == ratio of an equilateral triangle's height to its width:\n * 6/7, 13/15, 26/30, 45/52, 58/67, 84/97, 181/209\n * for divisibility -- recommend 26/30, 52/60, 104/120, 168/194, 180/208, 232/268, 336/388\n */\nexport const hexGridPx = new Vector2(268, 232);\n\nexport const hexCenterRadius = 48; // Radius of the circles representing allocatable nodes, in px\n\nexport const borderWidth = 2; // border of circles, etc. in px\n\n/**\n * How much bigger the \"virtual\" (i.e. scrollable) game area is than the visible window.\n * Bigger == more elements rendered which are outside the viewport == worse performance,\n * but need to 'jump' the scroll viewport less often.\n * Recommended default is 3.0\n */\nexport const virtualAreaScaleMultiplier = 2.0;\n\n/**\n * The subset of the game state that is relevant to game area components.\n */\nexport function extractGameAreaSubState(gameState: GameState) {\n  return {\n    playerUI: {\n      virtualGridLocation: gameState.playerUI.virtualGridLocation,\n      cursoredNodeLocation: gameState.playerUI.cursoredNodeLocation,\n      isPixiHidden: gameState.playerUI.isPixiHidden,\n    },\n    playerSave: {\n      allocationStatusMap: gameState.playerSave.allocationStatusMap,\n    },\n    worldGen: {\n      nodeContentsMap: gameState.worldGen.nodeContentsMap,\n      lockMap: gameState.worldGen.lockMap,\n    },\n    computed: {\n      fogOfWarStatusMap: gameState.computed.fogOfWarStatusMap,\n      reachableStatusMap: gameState.computed.reachableStatusMap,\n      lockStatusMap: gameState.computed.lockStatusMap,\n    },\n    intent: gameState.intent,\n    debug: {\n      debugShowScrollbars: gameState.debug.debugShowScrollbars,\n      rerenderGameAreaGrid: gameState.debug.rerenderGameAreaGrid,\n      enableScrollJump: gameState.debug.enableScrollJump,\n      getForceJumpOffset: gameState.debug.getForceJumpOffset,\n      getOffsetX: gameState.debug.getOffsetX,\n      isFlipCursored: gameState.debug.isFlipCursored,\n    },\n  };\n}\nexport type GameAreaSubState = ReturnType<typeof extractGameAreaSubState>;\nexport const depsGameAreaSubState = extractDeps(extractGameAreaSubState);\n\n/**\n * Handles managing constants (settings) as well as pruning down game state and updaters to what is actually relevant.\n * Helps with memoization as well.\n */\nexport function GameAreaInterface(props: {\n  gameState: GameState;\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n}) {\n  const { gameState } = props;\n\n  const appSize = useMemo(() => {\n    return appSizeFromWindowSize(\n      new Vector2(\n        gameState.windowState.innerWidth,\n        gameState.windowState.innerHeight\n      )\n    );\n  }, [gameState.windowState.innerWidth, gameState.windowState.innerHeight]);\n\n  const onDebugRetrigger = gameState.debug.retriggerVirtualGridDims; // triggered from debug tab to check performance\n  const virtualGridDims = useMemo(() => {\n    onDebugRetrigger();\n\n    let x = Math.floor(\n      (appSize.x * virtualAreaScaleMultiplier) / hexGridPx.x - 0.5\n    );\n    let y = Math.floor((appSize.y * virtualAreaScaleMultiplier) / hexGridPx.y);\n\n    // y = (Math.floor((y - 1) / 2) * 2) + 1; // force y to be odd\n\n    // needs to be at least 3.8 x 4.8 so we have room for jumps\n    // x = Math.max(4, x);\n    // y = Math.max(5, y);\n\n    return new Vector2(x, y);\n  }, [appSize, onDebugRetrigger]);\n\n  const subGameState: GameAreaSubState = useMemo(() => {\n    return extractGameAreaSubState(gameState);\n    // TODO(bowei): use custom hook here so react doesnt complain so much\n    // eslint-disable-next-line\n  }, depsGameAreaSubState(gameState));\n\n  // TODO(bowei): improve this abstraction??\n  const actions = useMemo(() => {\n    return { allocateNode: new AllocateNodeAction(props.updaters) };\n  }, [props.updaters]);\n\n  return (\n    <>\n      <CssVariablesComponent\n        appSize={appSize}\n        hexCenterRadius={hexCenterRadius}\n        hexGridPx={hexGridPx}\n        borderWidth={borderWidth}\n        COLORS={COLORS}\n      />\n      <GameAreaStateManager\n        appSize={appSize}\n        virtualGridDims={virtualGridDims}\n        gameState={subGameState}\n        updaters={props.updaters}\n        actions={actions}\n      />\n    </>\n  );\n}\n","import React from 'react';\n\nimport './Sidebar.css';\n\nexport default function Sidebar(props: {\n  children: React.ReactNode;\n  hidden: boolean;\n  placement: 'left' | 'right';\n}) {\n  const { children, hidden, placement } = props;\n\n  return (\n    <div\n      className={\n        placement === 'left' ? 'layout left-sidebar' : 'layout right-sidebar'\n      }\n      hidden={hidden}\n    >\n      <>{children}</>\n    </div>\n  );\n}\n","import React, { useCallback } from 'react';\nimport './Tabs.css';\n\nexport const Tabs = React.memo(Component);\n\nfunction Component(props: {\n  value: number;\n  labels: React.ReactNode[];\n  onChange: (t: number) => void;\n}) {\n  const { value, labels, onChange } = props;\n  return (\n    <div className={'tab-label-container'}>\n      {labels.map((label: React.ReactNode, i: number) => (\n        <Tab onClick={onChange} value={i} active={value === i} key={i}>\n          {label}\n        </Tab>\n      ))}\n    </div>\n  );\n}\n\nconst Tab = React.memo(TabComponent);\n\nfunction TabComponent(props: {\n  onClick: (t: number) => void;\n  value: number;\n  active: boolean;\n  children: React.ReactNode;\n}) {\n  const { onClick, value, active, children } = props;\n  const handleClick = useCallback(() => {\n    onClick(value);\n  }, [onClick, value]);\n  return (\n    <div className={active ? 'tab-label active' : 'tab-label inactive'}>\n      <div onClick={handleClick}>{children}</div>\n    </div>\n  );\n}\n","import './SidebarsInterface.css';\nimport React, { useCallback, useMemo } from 'react';\nimport { GameState } from '../../data/GameState';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport Sidebar from './Sidebar';\nimport { Tabs } from './Tabs';\nimport { TabContentInterface, TAB_NAME } from './TabContentInterface';\n\nexport const emptyTabLabels: TAB_NAME[] = [TAB_NAME.EMPTY];\nexport const initialTabLabels: TAB_NAME[] = [\n  TAB_NAME.SELECTED_NODE,\n  TAB_NAME.STATS,\n  TAB_NAME.QUESTS,\n  TAB_NAME.DEBUG,\n  TAB_NAME.HELP,\n  TAB_NAME.STRATEGIC_VIEW,\n];\n\n/**\n * Manages both sidebars (left & right) as well as anything directly adjacent to them.\n */\nexport function SidebarsInterface(props: {\n  gameState: GameState;\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n}) {\n  // NOTE(bowei): commenting out this entire component subtree increases react rerenders per sec from 80-ish to 100-ish while doing nothing other than scrolling (jumps disabled)\n  const { gameState, updaters } = props;\n\n  const setLeftSidebarHidden = useCallback(() => {\n    updaters.playerUI.isSidebarOpen.enqueueUpdate(() => false);\n  }, [updaters]);\n  const setLeftSidebarUnhidden = useCallback(() => {\n    updaters.playerUI.isSidebarOpen.enqueueUpdate(() => true);\n  }, [updaters]);\n  const setRightSidebarHidden = useCallback(() => {\n    updaters.playerUI.isSidebarOpen.enqueueUpdate(() => false);\n  }, [updaters]);\n  const setRightSidebarUnhidden = useCallback(() => {\n    updaters.playerUI.isSidebarOpen.enqueueUpdate(() => true);\n  }, [updaters]);\n\n  const tabsState = gameState.playerUI.tabs;\n  const tabsUpdaters = updaters.playerUI.tabs;\n\n  const leftSidebarTabs = tabsState.left.tabs;\n  const rightSidebarTabs = tabsState.right.tabs;\n  const leftActiveTabIndex = tabsState.left.activeIndex;\n  const rightActiveTabIndex = tabsState.right.activeIndex;\n  const setLeftSidebarTabs = tabsUpdaters.left.tabs.enqueueUpdate;\n  const setRightSidebarTabs = tabsUpdaters.right.tabs.enqueueUpdate;\n  const setLeftActiveTabIndex = tabsUpdaters.left.activeIndex.enqueueUpdate;\n  const setRightActiveTabIndex = tabsUpdaters.right.activeIndex.enqueueUpdate;\n\n  // const [leftSidebarTabs, setLeftSidebarTabs] = useState<TAB_NAME[]>([]);\n  // const [rightSidebarTabs, setRightSidebarTabs] = useState<TAB_NAME[]>(initialTabLabels);\n  // const [leftActiveTabIndex, setLeftActiveTabIndex] = useState(0);\n  // const [rightActiveTabIndex, setRightActiveTabIndex] = useState(0);\n\n  const onSendTabLeft = useCallback(() => {\n    if (rightSidebarTabs.length === 0) {\n      return;\n    }\n    const currentRightTab = rightSidebarTabs[rightActiveTabIndex];\n    if (currentRightTab === undefined) {\n      return;\n    }\n    const newRightSidebarTabs = rightSidebarTabs\n      .slice(0, rightActiveTabIndex)\n      .concat(rightSidebarTabs.slice(rightActiveTabIndex + 1));\n    setRightSidebarTabs(newRightSidebarTabs);\n    setRightActiveTabIndex(\n      Math.max(0, Math.min(rightActiveTabIndex, newRightSidebarTabs.length - 1))\n    );\n    const newLeftSidebarTabs = [...leftSidebarTabs, currentRightTab];\n    setLeftSidebarTabs(newLeftSidebarTabs);\n    setLeftActiveTabIndex(newLeftSidebarTabs.length - 1);\n    setLeftSidebarUnhidden();\n  }, [\n    leftSidebarTabs,\n    setLeftSidebarTabs,\n    rightSidebarTabs,\n    setRightSidebarTabs,\n    setLeftActiveTabIndex,\n    rightActiveTabIndex,\n    setRightActiveTabIndex,\n    setLeftSidebarUnhidden,\n  ]);\n\n  const onSendTabRight = useCallback(() => {\n    if (leftSidebarTabs.length === 0) {\n      return;\n    }\n    const currentLeftTab = leftSidebarTabs[leftActiveTabIndex];\n    if (currentLeftTab === undefined) {\n      return;\n    }\n    const newLeftSidebarTabs = leftSidebarTabs\n      .slice(0, leftActiveTabIndex)\n      .concat(leftSidebarTabs.slice(leftActiveTabIndex + 1));\n    setLeftSidebarTabs(newLeftSidebarTabs);\n    setLeftActiveTabIndex(\n      Math.max(Math.min(leftActiveTabIndex, newLeftSidebarTabs.length - 1), 0)\n    );\n    const newRightSidebarTabs = [...rightSidebarTabs, currentLeftTab];\n    setRightSidebarTabs(newRightSidebarTabs);\n    setRightActiveTabIndex(newRightSidebarTabs.length - 1);\n    setRightSidebarUnhidden();\n  }, [\n    leftSidebarTabs,\n    setLeftSidebarTabs,\n    rightSidebarTabs,\n    setRightSidebarTabs,\n    leftActiveTabIndex,\n    setLeftActiveTabIndex,\n    setRightActiveTabIndex,\n    setRightSidebarUnhidden,\n  ]);\n\n  // Find out which tab is active on either side\n  const leftTabName: TAB_NAME = useMemo(() => {\n    if (leftSidebarTabs.length === 0) {\n      return TAB_NAME.EMPTY;\n    } else {\n      return leftSidebarTabs[leftActiveTabIndex] as TAB_NAME;\n    }\n  }, [leftSidebarTabs, leftActiveTabIndex]);\n\n  const rightTabName: TAB_NAME = useMemo(() => {\n    if (rightSidebarTabs.length === 0) {\n      return TAB_NAME.EMPTY;\n    } else {\n      return rightSidebarTabs[rightActiveTabIndex] as TAB_NAME;\n    }\n  }, [rightSidebarTabs, rightActiveTabIndex]);\n\n  return (\n    <>\n      <Sidebar\n        hidden={!gameState.playerUI.isSidebarOpen}\n        // hidden={true}\n        placement={'left'}\n      >\n        <div className=\"sidebar-header\">\n          <div className=\"sidebar-header-button\" onClick={onSendTabRight}>\n            ➡️️ Send right\n          </div>\n          <div className=\"sidebar-header-gap\"></div>\n          <div\n            className=\"sidebar-header-button\"\n            onClick={() => {\n              setLeftSidebarHidden();\n            }}\n          >\n            ❎ Close\n          </div>\n        </div>\n        <Tabs\n          value={leftActiveTabIndex || 0}\n          labels={leftSidebarTabs.length ? leftSidebarTabs : emptyTabLabels}\n          onChange={setLeftActiveTabIndex}\n        />\n        <TabContentInterface\n          gameState={gameState}\n          updaters={updaters}\n          tabName={leftTabName}\n        />\n      </Sidebar>\n      <Sidebar hidden={!gameState.playerUI.isSidebarOpen} placement={'right'}>\n        <div className=\"sidebar-header\">\n          <div className=\"sidebar-header-button\" onClick={onSendTabLeft}>\n            ⬅️ Send left\n          </div>\n          <div className=\"sidebar-header-gap\"></div>\n          <div\n            className=\"sidebar-header-button\"\n            onClick={() => {\n              setRightSidebarHidden();\n            }}\n          >\n            ❎ Close\n          </div>\n        </div>\n        <Tabs\n          value={rightActiveTabIndex || 0}\n          labels={rightSidebarTabs.length ? rightSidebarTabs : emptyTabLabels}\n          onChange={setRightActiveTabIndex}\n        />\n        <TabContentInterface\n          gameState={gameState}\n          updaters={updaters}\n          tabName={rightTabName}\n        />\n      </Sidebar>\n    </>\n  );\n}\n","import React, { useCallback, useEffect } from 'react';\nimport { GameState } from '../data/GameState';\nimport { PlayerUIState } from '../data/PlayerUIState';\nimport { WorldGenStateFactory } from '../game/worldGen/WorldGenStateFactory';\n\nexport function PersistenceComponent(props: { gameState: GameState }) {\n  const { gameState } = props;\n\n  // save the game\n  const onUnload = useCallback(() => {\n    if (gameState.justDisabledSave) {\n      console.log('skipping save because it was just disabled!');\n    } else {\n      PlayerUIState.store(gameState.playerUI);\n      new WorldGenStateFactory({}).store(gameState.worldGen);\n    }\n    // return 'onunload'; // adds a console prompt\n  }, [gameState.playerUI, gameState.justDisabledSave, gameState.worldGen]);\n\n  // NOTE(bowei): window.addEventListener does not work here i think: https://stackoverflow.com/questions/24081699/why-onbeforeunload-event-is-not-firing\n  // https://gist.github.com/muzfr7/7e15582add46e74dee111002ec6cf594\n  useEffect(() => {\n    window.onbeforeunload = onUnload;\n    return () => {\n      window.onbeforeunload = null;\n    };\n  });\n\n  return <> </>;\n}\n","import './App.css';\n\nimport classnames from 'classnames';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { DebugOverlayComponent } from './components/DebugOverlayComponent';\nimport { KeyboardListenerComponent } from './components/KeyboardListenerComponent';\nimport { PixiWrapperComponent } from './components/PixiWrapperComponent';\nimport { WindowListenerComponent } from './components/WindowListenerComponent';\nimport { UseGameStateContext } from './contexts';\nimport { GameState } from './data/GameState';\nimport { GameStateFactory } from './game/GameStateFactory';\nimport { batchifySetState } from './lib/util/batchify';\nimport { Lazy } from './lib/util/lazy';\nimport {\n  UpdaterGeneratorType2,\n  updaterGenerator2,\n} from './lib/util/updaterGenerator';\nimport { GameAreaInterface } from './components/GameArea/GameAreaInterface';\nimport { SidebarsInterface } from './components/Sidebars/SidebarsInterface';\nimport { PersistenceComponent } from './components/PersistenceComponent';\n\nconst initialGameState: Lazy<GameState> = new Lazy(() =>\n  new GameStateFactory({}).loadOrCreate(+new Date())\n);\n\n/**\n * Root react component.\n * In charge of creating game state, and hooking up the game display, pixi, keyboard control, and window event listeners.\n */\nfunction App() {\n  const [gameState, setGameState] = useState<GameState>(function factory() {\n    return initialGameState.get();\n  });\n\n  let [batchedSetGameState, fireBatch] = useMemo(\n    () => batchifySetState(setGameState),\n    [setGameState]\n  );\n  let updaters = useMemo(\n    () => updaterGenerator2(initialGameState.get(), batchedSetGameState),\n    [batchedSetGameState]\n  );\n\n  const gameStateContextValue = useMemo(() => {\n    return [gameState, updaters, fireBatch] as [\n      GameState,\n      UpdaterGeneratorType2<GameState, GameState>,\n      () => void\n    ];\n  }, [gameState, updaters, fireBatch]);\n\n  useEffect(() => {\n    console.log('maybe toggling strategic view');\n    if (gameState.intent.newIntent.TOGGLE_STRATEGIC_VIEW) {\n      updaters.playerUI.isPixiHidden.enqueueUpdate((it) => !it);\n    }\n  }, [gameState.intent.newIntent.TOGGLE_STRATEGIC_VIEW, updaters]);\n\n  useEffect(() => {\n    console.log('maybe toggling sidebar');\n    if (gameState.intent.newIntent.TOGGLE_SIDEBAR) {\n      updaters.playerUI.isSidebarOpen.enqueueUpdate((it) => !it);\n    }\n  }, [gameState.intent.newIntent.TOGGLE_SIDEBAR, updaters]);\n\n  return (\n    <div className={classnames({ App: true })}>\n      <div className=\"entire-area\">\n        <UseGameStateContext.Provider\n          // NOTE(bowei): this context provider is absolutely unnecessary, but keeping it here for now in case i forget how to use context managers\n          value={gameStateContextValue}\n        >\n          <PixiWrapperComponent hidden={gameState.playerUI.isPixiHidden} />\n        </UseGameStateContext.Provider>\n        <GameAreaInterface\n          gameState={gameState}\n          updaters={updaters}\n        ></GameAreaInterface>\n      </div>\n\n      <div className=\"debug-overlay\">\n        <DebugOverlayComponent\n          tick={gameState.tick}\n          windowState={gameState.windowState}\n        />\n      </div>\n      <div className=\"button-zone\">\n        <button\n          className=\"button-pixi-toggle\"\n          style={{}}\n          onClick={() => {\n            updaters.playerUI.isPixiHidden.enqueueUpdate((it) => !it);\n          }}\n        >\n          Toggle strategic view (hotkey: m)\n        </button>\n        <span> </span>\n        <button\n          onClick={() => {\n            updaters.playerUI.isSidebarOpen.enqueueUpdate((it) => !it);\n          }}\n        >\n          Toggle sidebar (hotkey: i)\n        </button>\n      </div>\n\n      <SidebarsInterface gameState={gameState} updaters={updaters} />\n      <KeyboardListenerComponent\n        isTextBoxFocused={gameState.playerUI.isTextBoxFocused}\n        updaters={updaters.intent}\n      />\n      <WindowListenerComponent updaters={updaters.windowState} />\n      <PersistenceComponent gameState={gameState} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}