{"version":3,"sources":["lib/util/random.ts","lib/util/fpsTracker.ts","components/DebugOverlayComponent.tsx","lib/util/misc.ts","data/PlayerIntentState.ts","components/KeyboardListenerComponent.tsx","contexts.ts","lib/util/epsilon_math.ts","lib/util/geometry/vector2.ts","pixi/colors.ts","lib/util/data_structures/hash.ts","lib/pixi/pixify.ts","lib/util/color.ts","lib/util/batchify.ts","lib/util/updaterGenerator.ts","pixi/components/LifecycleHandler.ts","data/WorldGenState.ts","pixi/components/PointNodeComponent.ts","data/PointNodeRef.ts","pixi/components/ChunkComponent.ts","lib/util/lazy.ts","data/NodeStatus.ts","pixi/components/FixedCameraStageComponent.ts","lib/util/geometry/vector3.ts","game/worldGen/nodeContents/NodeContentsFactory.ts","lib/util/randomHelpers.ts","game/worldGen/nodeContents/NodeContentsRendering.ts","pixi/textures/SimpleTextures.ts","pixi/components/StrategicHexGridComponent.ts","pixi/components/RootComponent.ts","pixi/textures/PointNodeTexture.ts","data/WindowState.ts","pixi/PixiReactBridge.ts","components/PixiWrapperComponent.tsx","components/WindowListenerComponent.tsx","game/lib/HexGrid.ts","data/PlayerSaveState.ts","game/worldGen/LockFactory.ts","game/worldGen/WorldGenStateFactory.ts","game/actions/AllocateNode.ts","components/GameArea/CssVariables.tsx","components/GameArea/computeVirtualNodeDataMap.tsx","components/GameArea/GameAreaCell.tsx","components/GameArea/GameAreaGrid.tsx","components/GameArea/InfiniteScrollManager.tsx","components/GameArea/locationUtils.tsx","components/GameArea/GameAreaStateManager.tsx","components/GameArea/GameAreaInterface.tsx","components/Sidebars/Tabs/DebugTab.tsx","components/Sidebars/Tabs/StrategicTab.tsx","components/Sidebars/Tabs/SelectedNodeTab.tsx","components/Sidebars/Tabs/StatsTab.tsx","components/Sidebars/TabContentInterface.tsx","components/Sidebars/Tabs/HelpTab.tsx","data/PlayerUIState.ts","components/PersistenceComponent.tsx","data/DebugState.ts","game/GameStateFactory.ts","components/Sidebars/Sidebar.tsx","components/Sidebars/Tabs.tsx","components/Sidebars/SidebarsInterface.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["INTMAX32","squirrel3","i","n","Math","imul","FpsTracker","frameTimestampsInTicks","frameTimestampsInTime","this","push","ticksSinceLastUpdate","lastFrameTime","length","logRowsToKeep","slice","Date","getTime","ticksDiff","framesPerTick","timeDiff","framesPerMilli","getFps","toFixed","getUps","DebugOverlayComponent","props","pixiFpsTracker","useRef","useEffect","current","tick","className","windowState","innerWidth","innerHeight","ReactFps","getFpsString","useState","counter","setCounter","reactFpsTracker","timer","setTimeout","it","clearTimeout","fpsString","useMemo","Util","list","fn","lowestT","lowestValue","item","value","obj","highestT","highestValue","low","high","floor","random","array","key","sort","a","b","str","mapObj","re","RegExp","Object","keys","join","replace","matched","toLowerCase","func","timeoutId","waitMilliseconds","options","isImmediate","result","args","doLater","undefined","apply","shouldCallNow","d","monthName","getMonth","getDate","getHours","substr","getMinutes","getSeconds","arr","concat","string","intersperse","character","repeat","enumKeys","enm","extractAccessPaths","deepFilter","accessPaths","proxyHandler","get","target","p","receiver","newPath","path","toString","Proxy","extractDeps","t","map","accessPath","ref","IntentName","DeserializationError","Error","noIntent","reduce","object","newPlayerIntentState","activeIntent","newIntent","endedIntent","defaultKeyIntentConfig","w","PAN_NORTH","PAN_WEST","s","PAN_SOUTH","PAN_EAST","TOGGLE_STRATEGIC_VIEW","TOGGLE_LEFT_SIDEBAR","y","TOGGLE_RIGHT_SIDEBAR","Escape","EXIT","j","MOVE_CURSOR_WEST","l","MOVE_CURSOR_EAST","u","MOVE_CURSOR_NORTHWEST","MOVE_CURSOR_NORTHEAST","MOVE_CURSOR_SOUTHWEST","m","MOVE_CURSOR_SOUTHEAST","k","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","RightShift","RightControl","INTERACT_WITH_NODE","r","ZOOM_RECENTER_AT_NODE","TRAVEL_UPSTAIRS","TRAVEL_DOWNSTAIRS","HARD_REFRESH_PAGE","KeyboardListenerComponent","handleKeydown","e","keyIntentConfig","state","location","shiftKey","altKey","ctrlKey","configuredIntent","isTextBoxFocused","console","log","preventDefault","NOOP","updaters","enqueueUpdate","handleKeyup","document","addEventListener","removeEventListener","React","Component","UseGameStateContext","createContext","EPSILON","Vector2","propsOrX","x","_x","_y","round","abs","max","dx","dy","sqrt","newX","newY","about","amount","origin","angle","PI","cos","sin","other","__type","trans","scale","error","add","tx","ty","lerp","highX","highY","lowX","lowY","RandRange","hasOwnProperty","JSON","stringify","SerializeToObject","Zero","One","COLORS","backgroundBlue","nodePink","nodeLavender","nodeBlue","nodeAqua","gateTint","selectedTint","allocatedTint","nodeBorder","nullTint","tooltipBorderBlack","tooltipFillWhite","white","grayBlack","borderBlack","borderWhite","black","textWhite","colorToCss","c","HashSet","initialValues","_values","HashMap","put","remove","contains","values","clone","size","hash","KeyedHashMap","_kvalues","hashCode","pv","cv","keySerializer","valueSerializer","entries","entry","v","keyDeserializer","valueDeserializer","Array","isArray","h","charCodeAt","PixiPointFrom","Pixi","RED_MASK","GREEN_MASK","BLUE_MASK","RED_UNIT","GREEN_UNIT","multiplyColor","color1","color2","reds","greens","blues","out","interpolateColor","arg2","arg3","_interpolateColor","_args","color","proportion","opacity","base","background","batchifySetState","batch","arg","thisBatch","prev","next","valueOrCallback","updaterGenerator2Helper","dataObject","dataUpdater","forEach","newValueOrCallback","oldData","wholeData","newKey","updaterGenerator2","setState","stateCallbackFunction","ChildrenArray","removed","splice","findIndex","instance","find","cloned","callbackfn","LifecycleHandlerBase","container","stateUpdaters","_staleProps","_children","_childrenToConstruct","_childrenToDestruct","_forceUpdates","markForceUpdate","childInstance","childInfo","child","childClass","propsFactory","addChild","renderSelf","didMount","self","initialState","batchedSetState","fireBatch","fireStateUpdaters","nextProps","_update","staleState","updateSelf","shouldUpdate","forceUpdates","didForceUpdateChild","updateChildren","_updateChildren","Promise","resolve","didUpdate","willUnmount","removeChild","engageLifecycle","derived","construct","_didConstruct","newTarget","Reflect","NodeType","ResourceNontrivialType","ResourceModifier","ChunkGenConstants","CHUNK_HALF_DIM","CHUNK_DIM","DROP_NODES_CHANCE","wrapped","sprite","halfwayCenterSprite","centerSprite","topHalfSprite","hitArea","tooltippableArea","numClicks","descriptionText","defaultTexture","pointNodeTexture","cropFraction","texture","sortableChildren","anchor","zIndex","pointNodeGen","nodeType","EfficiencyGate","mask","beginFill","drawRect","width","height","pivot","alpha","interactive","buttonMode","RenderedChunkConstants","NODE_HITAREA_PX","nodeDescription","Nothing","resourceAmount","resourceModifier","resourceType","tint","centerTint","position","isSelected","isAllocated","baseColor","topHalfColor","Mana0","Flat","Increased0","textureToFind","selfPointNodeRef","pointNodeCoord","equals","staleProps","addListener","event","localPosition","data","getLocalPosition","worldTransform","tooltipUpdaters","visible","text","PointNodeRef","z","chunkCoord","pointNodeId","SPACING_PX","CHUNK_SPACING_PX","NODE_SIZE_PX","NODE_ROUNDED_PX","children","resyncChildren","prevProps","prevState","childrenToDelete","chunkGen","pointNodes","pointNodeRef","selfChunkRef","id","childPropsFactory","delta","multiply","selectedPointNode","allocatedPointNodeSubset","childKey","childComponent","PointNodeComponent","Lazy","factory","_wasConstructed","_value","_factory","NodeAllocatedStatus","BoolEnum","LazyHashMap","newFactory","LockStatus","NodeTakenStatus","true","taken","false","NodeVisibleStatus","NodeReachableStatus","reachable","Vector3","_z","pOrX","newZ","Attribute","Modifier","randomSwitch","randInt","weights","behaviors","newRandInt","unusedWeight","weight","randomValue","randomUniform","min","increment","inclusive","numBuckets","ceil","WEIGHTS","DECISION_0","EMPTY","NO_SPEND","SPEND","DECISION_1","SINGLE","DOUBLE","SINGLE_COLORS","RED0","RED1","RED2","DEL0","DEL1","DEL2","SINGLE_MODIFIERS","FLAT","INCREASED","NodeContentsFactory","config","clusterCenterData","attribute","modifier","formula","plus","numDice","parseInt","split","numPips","val","randomDice","lines","createSingle","clusterCenter","seed","modulo3","moduloPositive","pairXY","divide","createNoSpend","condition","type","AttributeSymbolMap","AttributeColorMap","AttributeDescriptionMap","AttributeDescriptionReverseMap","Red","Green","Blue","Offense","Defense","Magic","ModifierSymbolMap","ModifierDescriptionMap","ModifierDescriptionReverseMap","flat","increased","nodeContentsLineToString","line","desc","symbol","pixiUiScale","extractStrategicHexGridSubState","gameState","playerUI","virtualGridLocation","cursoredNodeLocation","strategicSearch","playerSave","allocationStatusMap","computed","fogOfWarStatusMap","reachableStatusMap","lockStatusMap","worldGen","nodeContentsMap","lockMap","depsStrategicHexGridSubState","strategicHexGridPx","strategicHexGridDims","graphics","hexGrid","phases","textures","circle","appSize","node","animation","cursor","cursorAnimation","keyString","newPhase","periodSecs","phase","PIXI_TICKS_PER_SECOND","bezierX","tintProp","basePosition","baseTint","nodeLocation","FromVector2","nodeVisibleStatus","nodeTakenStatus","nodeReachableStatus","lockData","lockStatus","OPEN","removeAllListeners","on","rect","dot","nodeContents","colors","enabled","nodeContentsLch","chroma","color0","nodeContentsToColor","lch","originalLch","num","query","terms","highlight1","filter","wrappedTerm","unmatchedTerm","term","maybeAttribute","maybeModifier","matchStrategicSearch","mode","verticalLine","staleGameState","staleDeps","deps","fixedCameraStage","actionStage","backdropStage","strategicHexGrid","backdrop","renderer","textureSet","g","drawRoundedRect","generateTexture","LINEAR","generatePointNodeTexture","simpleTexture","uiScale","diameter","drawCircle","thickness","square","generateSimpleTextures","playerCurrentZ","tooltip","fixedCameraStagePropsFactory","FixedCameraStageComponent","strategicHexGridPropsFactory","StrategicHexGridComponent","newWindowState","orientation","window","appSizeFromWindowSize","Infinity","DEFAULT_APP_SIZE","PixiReactBridge","app","rootComponent","onTick","isSecondConstructorCall","originalAppSize","antialias","transparent","resolution","devicePixelRatio","autoDensity","powerPreference","backgroundColor","ticker","destroy","baseTexture","baseGameLoop","bind","curr","appendChild","view","futureProps","RootComponent","stage","resize","isPixiHidden","update","initialApplication","PixiWrapperComponent","application","useContext","gameStateUpdaters","fireBatchedSetGameState","childNodes","rerender","hidden","style","Direction","WindowListenerComponent","handleWindowResize","old","newPlayerSaveState","serialize","serializeToObject","deserialize","Deserialize","deserializeFromObject","parse","storageKey","load","localStorage","getItem","PlayerSaveState","loaded","setItem","getCoordNeighbors","neighbors","EAST","addX","WEST","NORTHWEST","addY","SOUTHEAST","NORTHEAST","SOUTHWEST","getWithinDistance","maxDistance","minDistance","disallowedSet","touched","disallowedButTouched","byDist","vec","considering","dd","LockFactory","shortTextTarget","shortTextTimer","TICKING","WorldGenStateFactory","mySeed","lockFactory","lockDataMap","create","nodeContentsFactory","AllocateNodeAction","input","newStatus","prevMap","prevGameState","maybeLock","precompute","CssVariablesComponent","memo","hexGridPx","borderWidth","hexCenterRadius","documentElement","setProperty","STARTING_NODE_DESCRIPTION","computeNodeReactData","fogOfWarStatus","reachableStatus","takenStatus","nodeStatus","TAKEN","AVAILABLE","UNREACHABLE","HIDDEN","shortText1","shortText2","tooltipHeader","shortText","toolTipText","nodeContentsToDom","fullText","status","GameAreaCell","GameAreaCellComponent","onUpdateStatus","nodeData","isCursored","onUpdateCursored","debugIsCursored","handleClick","useCallback","stopPropagation","handleClickQuestionMark","Cell","onClickCenter","onClickQuestionMark","CellComponent","isLocked","hovered","setHovered","onHover","onUnhover","classnames","onClick","onDoubleClick","onPointerEnter","onPointerLeave","extractGameGridSubState","depsGameGridSubState","GameAreaGrid","virtualGridDims","virtualCoordsToLocation","updateNodeStatusByLocationCb","cursoredVirtualNode","setCursoredLocation","debug","startTime","rerenderGameAreaGrid","flipCursored","isFlipCursored","nodeReactDataMap","fill","_","Row","rowIdx","virtualCoords","now","elapsed","RowComponent","odd","InfiniteScrollManager","triggerScrollRecenterCb","keyboardScrollDirection","jumpOffset","setJumpOffset","center","virtualCenter","centerPxY","centerPxX","getVirtualGridCenterPx","scrollTop","scrollLeft","scrollTo","handleJump","locationOffset","direction","newJumpOffset","getForceJumpOffset","enableScrollJump","handleScroll","newScrollTop","newScrollLeft","lastTime","action","interval","setInterval","clearInterval","debugShowScrollbars","onScroll","GameAreaStateManager","offsetFromVirtualCenter","subtract","relativeLocation","convertVirtualCoordsToLocation","locationToVirtualCoords","offsetFromVirtualGridLocation","relativeVirtualCoords","convertLocationToVirtualCoords","handleUpdateNodeStatusByLocation","actions","allocateNode","enqueueAction","handleUpdateNodeStatus","isSidebarOpen","isLeftSidebarOpen","isRightSidebarOpen","cursoredVirtualNodeCoords","newLocation","intent","MOVE_CURSOR_SOUTH","MOVE_CURSOR_NORTH","MOVE_CURSOR_NORTHNORTH","MOVE_CURSOR_SOUTHSOUTH","infiniteScrollManagerDebug","gameAreaGridDebug","getOffsetX","subGameState","extractGameAreaSubState","depsGameAreaSubState","GameAreaInterface","onDebugRetrigger","retriggerVirtualGridDims","DebugTabContent","lastUpdated","setLastUpdated","slowRenderMsgs","setSlowRenderMsgs","msSinceLastTick","msg","toTimeString","virtualGridDimsTrigger","toggleScrollbars","gameAreaGridRerender","onDisableScrollJump","onEnableScrollJump","forceVirtualGridJump","addDebugOffsetX","offsetX","toggleTextBoxFocused","saveLocalStorage","PlayerUIState","store","loadLocalStorage","clearLocalStorage","clear","justDisabledSave","clearSave","idx","StrategicTab","StrategicTabComponent","showAdvancedSearch","setShowAdvancedSearch","highlightInputValue","setHighlightInputValue","onFocus","onBlur","onFireSearch","onCancelSearch","onToggleColors","HorizontalButtonRadio","labels","defaultValue","onChange","SymbolButton","updateTextInputValue","TextInputButton","icon","insertedText","onMouseDown","onPointerDown","defaultIdx","indexOf","currentIdx","setCurrentIdx","len","body","disabled","SelectedNodeTabContent","SelectedNodeTabContentComponent","onAllocate","onZoom","xyCoords","visibleStatus","canBeAllocated","description","nodeContentsDom","TAB_NAME","StatsTab","StatsTabComponent","isOpen","setOpen","attributeInfos","fromEntries","modifiers","pair","attributeInfo","open","HelpTab","CheckboxDiv","TabContentInterface","tabName","tabComponents","EmptyTabContent","SELECTED_NODE","STATS","QUESTS","STRATEGIC_VIEW","DEBUG","HELP","TabContentSelector","selectedTabName","tabNames","EmptyTabContentComponent","initialTabLabels","left","right","newPlayerUIState","tabs","activeIndex","new","tryLoad","PersistenceComponent","onUnload","reload","onbeforeunload","loadOrCreate","DEFAULT_SEED","worldGenStateFactory","loadComputed","GameStateFactory","prevReachableStatusMap","Sidebar","placement","Tabs","label","Tab","active","TabComponent","emptyTabLabels","SidebarsInterface","setLeftSidebarHidden","setLeftSidebarUnhidden","setRightSidebarHidden","setRightSidebarUnhidden","tabsState","tabsUpdaters","leftSidebarTabs","rightSidebarTabs","leftActiveTabIndex","rightActiveTabIndex","setLeftSidebarTabs","setRightSidebarTabs","setLeftActiveTabIndex","setRightActiveTabIndex","onSendTabLeft","currentRightTab","newRightSidebarTabs","newLeftSidebarTabs","onSendTabRight","currentLeftTab","leftTabName","rightTabName","initialGameState","App","setGameState","batchedSetGameState","gameStateContextValue","TOGGLE_SIDEBAR","TURN_OFF_SIDEBAR","Provider","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.d5bfd243.chunk.js","sourcesContent":["import crypto from 'crypto';\n\n/**\n * NOTE(bowei): we use a hash function that is NOT md5 -\n * Either https://github.com/sublee/squirrel3-python/blob/master/squirrel3.py or https://github.com/svaarala/duktape/blob/master/misc/splitmix64.c works fine and is much faster\n * Reference: https://www.youtube.com/watch?v=e4b--cyXEsM or https://www.youtube.com/watch?v=LWFzPP8ZbdU\n * TODO(bowei): port bigint to wasm for faster 64bit operations\n */\n\n// NOTE(bowei): untested\nexport function splitmix64(seed: bigint, i: bigint) {\n  let z: bigint = seed + i * BigInt('0x9e3779b97f4a7c15');\n  z = (z ^ (z >> BigInt(30))) * BigInt('0xBF58476D1CE4E5B9');\n  z = (z ^ (z >> BigInt(27))) * BigInt(0x94d049bb133111eb);\n  return z ^ (z >> BigInt(31));\n}\n\nexport const INTMAX32 = 2 ** 32;\nexport function squirrel3(i: number) {\n  let n = (i + INTMAX32) % INTMAX32;\n  n = Math.imul(n, 0xb5297a4d);\n  n ^= n >>> 8;\n  n += 0x68e31da4;\n  n ^= n << 8;\n  n = Math.imul(n, 0x1b56c4e9);\n  n ^= n >>> 8;\n  return (n + INTMAX32) % INTMAX32;\n}\nexport const PRIME32 = 0x3233f2cd; // not used ; useful for hashing integers; a 32 bit prime\n\n/**\n * Md5 is 16 bytes, or max int of 256 ** 16 = 2 ** 128\n */\nexport class HashState {\n  private seed!: Buffer;\n\n  /**\n   * HashState().step(\"foo\") is equivalent to HashState(\"foo\")\n   */\n  constructor(seed?: string) {\n    const buffer = crypto\n      .createHash('md5')\n      .update((seed || '').toString())\n      .digest();\n    this.seed = buffer;\n  }\n\n  public peekRandom(): number {\n    const buffer = crypto.createHash('md5').update(this.seed).digest();\n    return Number(this.bufferToBigInt(buffer) % BigInt(2 ** 32)) % 2 ** 32;\n  }\n\n  // increment the seed linearly by 1\n  public step(numSteps: number = 1) {\n    this.seed = this.bigIntToBuffer(this.bufferToBigInt(this.seed) + BigInt(1));\n  }\n\n  public stepSeed(seed: string) {\n    const buffer = crypto.createHash('md5').update(seed.toString()).digest();\n    this.seed = this.bigIntToBuffer(\n      this.bufferToBigInt(this.seed) + this.bufferToBigInt(buffer)\n    );\n  }\n\n  private bigIntToBuffer(b: bigint): Buffer {\n    let buf = Buffer.alloc(16);\n    let val = b;\n    for (let i = 0; i < 16; i++) {\n      buf[i] = Number(val % BigInt(256));\n      val = val / BigInt(256);\n    }\n    return buf;\n  }\n\n  private bufferToBigInt(b: Buffer): bigint {\n    let val = BigInt(0);\n    for (let i = 0; i < 16; i++) {\n      val = val * BigInt(256) + BigInt(b[i]);\n    }\n    return val;\n  }\n\n  public random(): number {\n    this.step();\n    return this.peekRandom();\n  }\n}\n","const logRowsToKeep: number = 60; // last 1 seconds, at 60 fps\n\n/**\n * See https://www.npmjs.com/package/pixi-fps https://github.com/jkanchelov/pixi-fps\n */\nexport class FpsTracker {\n  private frameTimestampsInTicks: any[] = [];\n  private frameTimestampsInTime: any[] = [];\n\n  constructor() {\n    this.frameTimestampsInTicks.push(0);\n    // this.frameTimestampsInTime.push((new Date()).getTime());\n  }\n\n  /**\n   * @param ticksSinceLastUpdate should be the delta in ticks since the last update - will probably be a decimal close to 1\n   */\n  public tick(ticksSinceLastUpdate: number) {\n    let lastFrameTime =\n      this.frameTimestampsInTicks[this.frameTimestampsInTicks.length - 1];\n    this.frameTimestampsInTicks.push(lastFrameTime + ticksSinceLastUpdate);\n\n    // rotate logs\n    if (this.frameTimestampsInTicks.length > logRowsToKeep + 60) {\n      this.frameTimestampsInTicks = this.frameTimestampsInTicks.slice(60);\n    }\n\n    // do the same but track real time\n    this.frameTimestampsInTime.push(new Date().getTime());\n    if (this.frameTimestampsInTime.length > logRowsToKeep + 60) {\n      this.frameTimestampsInTime = this.frameTimestampsInTime.slice(60);\n    }\n  }\n\n  // [0, 3, 4] -> 30 fps\n  public getUps(): number {\n    let ticksDiff =\n      this.frameTimestampsInTicks[this.frameTimestampsInTicks.length - 1] -\n      this.frameTimestampsInTicks[0];\n    let framesDiff = this.frameTimestampsInTicks.length - 1;\n\n    let framesPerTick = framesDiff / ticksDiff;\n    if (!framesPerTick) {\n      return 60;\n    }\n\n    return framesPerTick * 60;\n  }\n\n  public getFps(): number {\n    let timeDiff =\n      this.frameTimestampsInTime[this.frameTimestampsInTime.length - 1] -\n      this.frameTimestampsInTime[0];\n    let framesDiff = this.frameTimestampsInTime.length - 1;\n\n    let framesPerMilli = framesDiff / timeDiff;\n    if (!framesPerMilli) {\n      return 60;\n    }\n\n    return framesPerMilli * 1000;\n  }\n\n  public getFpsString(): string {\n    let fpsNumber = this.getFps();\n\n    return fpsNumber.toFixed(1);\n  }\n\n  public getUpsString(): string {\n    let upsNumber = this.getUps();\n\n    return upsNumber.toFixed(1);\n  }\n}\n","import './DebugOverlayComponent.css';\n\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport { FpsTracker } from '../lib/util/fpsTracker';\nimport { WindowState } from '../data/WindowState';\n\n/**\n * Small overlay in the top left which displays window dimensions and fps.\n */\nexport function DebugOverlayComponent(props: {\n  tick: number;\n  windowState: WindowState;\n}) {\n  const pixiFpsTracker = useRef(new FpsTracker());\n  useEffect(() => {\n    pixiFpsTracker.current.tick(0);\n  }, [props.tick]);\n\n  return (\n    <div className=\"text\">\n      <div>\n        {props.windowState.innerWidth}x{props.windowState.innerHeight}\n      </div>\n      <ReactFps />\n      <div>UPS: {pixiFpsTracker.current.getFpsString()}</div>\n    </div>\n  );\n}\n\nfunction ReactFps() {\n  const [counter, setCounter] = useState(0);\n  const reactFpsTracker = useRef(new FpsTracker());\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setCounter((it) => it + 1);\n      reactFpsTracker.current.tick(0);\n    }, 5); // try to refresh every 5 millis\n    return () => clearTimeout(timer);\n  }, [counter]);\n\n  const fpsString = useMemo(() => {\n    if (counter >= 0) {\n      return reactFpsTracker.current.getFpsString();\n    }\n    return '';\n  }, [counter]);\n\n  return <div>RPS: {fpsString}</div>;\n}\n","let lastUsedId = 0;\n\nexport const getUniqueID = () => {\n  return lastUsedId++;\n};\n\nexport class Util {\n  static MinBy<T>(list: T[], fn: (T: T) => number): T | null {\n    let lowestT: T | null = null;\n    let lowestValue: number | null = null;\n\n    for (const item of list) {\n      const value = fn(item);\n\n      if (lowestValue === null || value < lowestValue) {\n        lowestT = item;\n        lowestValue = value;\n      }\n    }\n\n    return lowestT;\n  }\n\n  static MinByAndValue<T>(\n    list: T[],\n    fn: (T: T) => number\n  ): { obj: T; value: number } | null {\n    let lowestT: T | null = null;\n    let lowestValue: number | null = null;\n\n    for (const item of list) {\n      const value = fn(item);\n\n      if (lowestValue === null || value < lowestValue) {\n        lowestT = item;\n        lowestValue = value;\n      }\n    }\n\n    return lowestT === null || lowestValue === null\n      ? null\n      : { obj: lowestT, value: lowestValue };\n  }\n\n  static MaxBy<T>(list: T[], fn: (T: T) => number): T | null {\n    let highestT: T | null = null;\n    let highestValue: number | null = null;\n\n    for (const item of list) {\n      const value = fn(item);\n\n      if (highestValue === null || value > highestValue) {\n        highestT = item;\n        highestValue = value;\n      }\n    }\n\n    return highestT;\n  }\n\n  static RandRange(low: number, high: number): number {\n    return Math.floor(Math.random() * (high - low) + low);\n  }\n\n  public static SortByKey<T>(array: T[], key: (x: T) => number): T[] {\n    return array.sort((a, b) => {\n      return key(a) - key(b);\n    });\n  }\n\n  public static ReplaceAll(\n    str: string,\n    mapObj: { [key: string]: string }\n  ): string {\n    const re = new RegExp(Object.keys(mapObj).join('|'), 'gi');\n\n    return str.replace(re, (matched) => {\n      return mapObj[matched.toLowerCase()];\n    });\n  }\n\n  public static Debounce<F extends (...args: any[]) => void>(\n    func: F,\n    waitMilliseconds = 50,\n    options = {\n      isImmediate: false,\n    }\n  ): F {\n    let timeoutId: any; // types are different on node vs client, so we have to use any.\n\n    const result = (...args: any[]) => {\n      const doLater = () => {\n        timeoutId = undefined;\n        if (!options.isImmediate) {\n          func.apply(this, args);\n        }\n      };\n\n      const shouldCallNow = options.isImmediate && timeoutId === undefined;\n\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(doLater, waitMilliseconds);\n\n      if (shouldCallNow) {\n        func.apply(this, args);\n      }\n    };\n\n    return result as any;\n  }\n\n  public static FormatDate(d: Date): string {\n    const monthName = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ][d.getMonth()];\n\n    return `${monthName} ${d.getDate()}, ${('00' + d.getHours()).substr(-2)}:${(\n      '00' + d.getMinutes()\n    ).substr(-2)}:${('00' + d.getSeconds()).substr(-2)}`;\n  }\n\n  public static FlattenByOne<T>(arr: T[][]): T[] {\n    let result: T[] = [];\n\n    for (const obj of arr) {\n      result = result.concat(obj);\n    }\n\n    return result;\n  }\n\n  public static PadString(\n    string: string,\n    length: number,\n    intersperse = '',\n    character = ' '\n  ) {\n    return string + intersperse + character.repeat(length - string.length);\n  }\n}\n\n/**\n * A deep readonly type - given an object type, all subobjects and their subobjects are also marked as readonly.\n * see also: https://twitter.com/mgechev/status/1240178886979223552?lang=en\n */\nexport type Const<T> = T extends Function\n  ? T\n  : {\n      readonly [P in keyof T]: T[P] extends { [k: string]: any }\n        ? Const<T[P]>\n        : T[P];\n    };\n\nconst assertOnlyCalledOnceData: { [k: string]: [string, number] } = {};\n\n/**\n * Asserts that a function is not called more than twice. Useful for debugging react lifecycle which may be creating more objects than you realize, impacting performance.\n * @param id identifier\n */\nexport function assertOnlyCalledOnce(id: string | number) {\n  let k = id.toString();\n  if (assertOnlyCalledOnceData[k] !== undefined) {\n    if (assertOnlyCalledOnceData[k][1] === 1) {\n      assertOnlyCalledOnceData[k][1] = 2;\n    } else {\n      throw new Error(\n        'Error, called more than twice with same id: ' +\n          k +\n          ' , callback the first time was : ' +\n          assertOnlyCalledOnceData[k]\n      );\n    }\n  } else {\n    const stacktrace = new Error().stack!;\n    assertOnlyCalledOnceData[k] = [stacktrace, 1];\n  }\n}\n\nexport function enumKeys<T extends string>(enm: { [key in T]: T }): T[] {\n  return Object.keys(enm) as T[];\n}\n\n// export function enumKeys<T extends string>(enm: { [key: string]: string }) : T[] {\n//   return Object.keys(enm) as T[];\n// }\n\n/**\n * Used on pojo filtering functions.\n * Here deepFilter: T => U is expected to be a pure function of the form object => object with a subset of the same properties (deeply).\n * for instance\n * deepFilter: { a: number, b: { c: number , d: string } } => { a: number, b: { c: number } }\n * @returns a list. each element of the list represents an access path that is in the subset of paths kept by the pure filter function.\n * in the example above, the output would be [ ['a'],  ['b', 'c'] ]\n */\nexport function extractAccessPaths<T, U>(deepFilter: (t: T) => U): string[][] {\n  let accessPaths: string[][] = [[]];\n\n  const proxyHandler: ProxyHandler<{ path: string[] }> = {\n    get: (\n      target: { path: string[] },\n      p: string | number | symbol,\n      receiver: any\n    ): any => {\n      const newPath = target.path.concat([p.toString()]);\n      // detect if we are merely adding on to an existing path and if so update it in place\n      if (accessPaths[accessPaths.length - 1] === target.path) {\n        accessPaths[accessPaths.length - 1] = newPath;\n      } else {\n        accessPaths.push(newPath);\n      }\n      const newObj = new Proxy({ path: newPath }, proxyHandler);\n      return newObj;\n    },\n  };\n\n  // run the function and record the paths\n  deepFilter(new Proxy({ path: accessPaths[0] }, proxyHandler) as any);\n\n  return accessPaths;\n}\n\n/**\n *\n * @param deepFilter pojo filtering function, as above\n * @returns a function that takes a T instance and returns the list of properties accessed by deepFilter. useful in react useMemo calls\n */\nexport function extractDeps<T, U>(\n  deepFilter: (t: T) => U\n): (t: T | Const<U>) => any[] {\n  const accessPaths = extractAccessPaths(deepFilter);\n\n  return (t: T | Const<U>) => {\n    const deps = accessPaths.map((accessPath) => {\n      let ref: any = t;\n      for (let p of accessPath) {\n        ref = ref?.[p];\n      }\n      return ref;\n    });\n    // console.log({ deps });\n    return deps;\n  };\n}\n\nexport class DeserializationError extends Error {}\n","import { enumKeys } from '../lib/util/misc';\n\n/**\n * Player intents == what they want to do when they press certain mouse/keyboard keys. This is decoupled\n * from their actual keyboard keys to make remapping easier.\n */\n\nexport type PlayerIntentState = {\n  activeIntent: Intent;\n  newIntent: Intent;\n  endedIntent: Intent;\n};\n\nexport type Intent = {\n  [name in IntentName]: boolean;\n};\n\nexport enum IntentName {\n  // Default intent - does nothing\n  NOOP = 'NOOP',\n\n  PAN_NORTH = 'PAN_NORTH',\n  PAN_SOUTH = 'PAN_SOUTH',\n  PAN_WEST = 'PAN_WEST',\n  PAN_EAST = 'PAN_EAST',\n  TRAVEL_UPSTAIRS = 'TRAVEL_UPSTAIRS',\n  TRAVEL_DOWNSTAIRS = 'TRAVEL_DOWNSTAIRS',\n\n  TOGGLE_STRATEGIC_VIEW = 'TOGGLE_STRATEGIC_VIEW',\n  TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR',\n  TOGGLE_LEFT_SIDEBAR = 'TOGGLE_LEFT_SIDEBAR',\n  TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR',\n  TURN_OFF_SIDEBAR = 'TURN_OFF_SIDEBAR',\n  EXIT = 'EXIT',\n  HARD_REFRESH_PAGE = 'HARD_REFRESH_PAGE',\n\n  MOVE_CURSOR_WEST = 'MOVE_CURSOR_WEST',\n  MOVE_CURSOR_EAST = 'MOVE_CURSOR_EAST',\n  MOVE_CURSOR_NORTH = 'MOVE_CURSOR_NORTH',\n  MOVE_CURSOR_SOUTH = 'MOVE_CURSOR_SOUTH',\n  MOVE_CURSOR_NORTHWEST = 'MOVE_CURSOR_NORTHWEST',\n  MOVE_CURSOR_NORTHEAST = 'MOVE_CURSOR_NORTHEAST',\n  MOVE_CURSOR_SOUTHWEST = 'MOVE_CURSOR_SOUTHWEST',\n  MOVE_CURSOR_SOUTHEAST = 'MOVE_CURSOR_SOUTHEAST',\n  MOVE_CURSOR_NORTHNORTH = 'MOVE_CURSOR_NORTHNORTH',\n  MOVE_CURSOR_SOUTHSOUTH = 'MOVE_CURSOR_SOUTHSOUTH',\n\n  INTERACT_WITH_NODE = 'INTERACT_WITH_NODE',\n  ZOOM_RECENTER_AT_NODE = 'ZOOM_RECENTER_AT_NODE',\n}\n\nexport const noIntent = enumKeys(IntentName).reduce((object: Intent, key) => {\n  object[key] = false;\n  return object;\n}, {} as Intent);\n\nexport const newPlayerIntentState = (): PlayerIntentState => {\n  return {\n    activeIntent: noIntent,\n    newIntent: noIntent,\n    endedIntent: noIntent,\n  };\n};\n","import React from 'react';\nimport { GameState } from '../data/GameState';\nimport { IntentName, PlayerIntentState } from '../data/PlayerIntentState';\nimport { UpdaterGeneratorType2 } from '../lib/util/updaterGenerator';\n\ntype Props = {\n  updaters: UpdaterGeneratorType2<PlayerIntentState, GameState>;\n  isTextBoxFocused: boolean;\n};\n\ntype State = {\n  keyIntentConfig: keyToIntentMap;\n};\n\n// TODO: enumerate all the keyboard keys we care about\ntype BrowserKeys = string;\n\n/**\n * Holds the mapping of which keyboard keys (as interpreted by the browser)\n * map to which intents, e.g. \"up arrow\" means \"pan left\"\n */\ntype keyToIntentMap = {\n  [key in BrowserKeys]?: IntentName;\n};\n\nconst defaultKeyIntentConfig = {\n  // ArrowUp: IntentName.PAN_NORTH,\n  // ArrowLeft: IntentName.PAN_WEST,\n  // ArrowDown: IntentName.PAN_SOUTH,\n  // ArrowRight: IntentName.PAN_EAST,\n  w: IntentName.PAN_NORTH,\n  a: IntentName.PAN_WEST,\n  s: IntentName.PAN_SOUTH,\n  d: IntentName.PAN_EAST,\n\n  // k: IntentName.PAN_NORTH,\n  // h: IntentName.PAN_WEST,\n  // j: IntentName.PAN_SOUTH,\n  // l: IntentName.PAN_EAST,\n\n  // m: IntentName.TOGGLE_STRATEGIC_VIEW,\n  b: IntentName.TOGGLE_STRATEGIC_VIEW,\n\n  // i: IntentName.TOGGLE_SIDEBAR,\n  t: IntentName.TOGGLE_LEFT_SIDEBAR,\n  y: IntentName.TOGGLE_RIGHT_SIDEBAR,\n\n  Escape: IntentName.EXIT,\n\n  // w: IntentName.MOVE_CURSOR_NORTH,\n  // a: IntentName.MOVE_CURSOR_WEST,\n  // s: IntentName.MOVE_CURSOR_SOUTH,\n  // d: IntentName.MOVE_CURSOR_EAST,\n  // q: IntentName.MOVE_CURSOR_NORTHWEST,\n  // e: IntentName.MOVE_CURSOR_NORTHEAST,\n  // z: IntentName.MOVE_CURSOR_SOUTHWEST,\n  // x: IntentName.MOVE_CURSOR_SOUTHEAST,\n  // c: IntentName.MOVE_CURSOR_SOUTHEAST,\n\n  j: IntentName.MOVE_CURSOR_WEST,\n  l: IntentName.MOVE_CURSOR_EAST,\n  u: IntentName.MOVE_CURSOR_NORTHWEST,\n  i: IntentName.MOVE_CURSOR_NORTHEAST,\n  n: IntentName.MOVE_CURSOR_SOUTHWEST,\n  m: IntentName.MOVE_CURSOR_SOUTHEAST,\n  k: IntentName.MOVE_CURSOR_SOUTHWEST,\n\n  // ArrowUp: IntentName.MOVE_CURSOR_NORTHNORTH,\n  ArrowUp: IntentName.MOVE_CURSOR_NORTHEAST,\n  ArrowLeft: IntentName.MOVE_CURSOR_WEST,\n  ArrowDown: IntentName.MOVE_CURSOR_SOUTHWEST,\n  ArrowRight: IntentName.MOVE_CURSOR_EAST,\n  RightShift: IntentName.MOVE_CURSOR_NORTHWEST,\n  RightControl: IntentName.MOVE_CURSOR_SOUTHEAST,\n\n  ' ': IntentName.INTERACT_WITH_NODE,\n  // z: IntentName.ZOOM_RECENTER_AT_NODE,\n  r: IntentName.ZOOM_RECENTER_AT_NODE,\n  '\\\\': IntentName.ZOOM_RECENTER_AT_NODE,\n  '<': IntentName.TRAVEL_UPSTAIRS,\n  '>': IntentName.TRAVEL_DOWNSTAIRS,\n  'Ctrl-Shift-R': IntentName.HARD_REFRESH_PAGE,\n};\n\n/**\n * Empty react element with listeners for keyboard actions.\n */\nexport class KeyboardListenerComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      keyIntentConfig: defaultKeyIntentConfig,\n    };\n  }\n\n  componentDidMount() {\n    // console.log('adding event listeners for keyboard component');\n    document.addEventListener('keydown', this.handleKeydown);\n    document.addEventListener('keyup', this.handleKeyup);\n  }\n\n  // NOTE(bowei): does using e.repeat here break when window loses focus??\n  handleKeydown = (e: KeyboardEvent) => {\n    const { keyIntentConfig } = this.state;\n    let key: BrowserKeys = e.key;\n    // special case to handle left/right control and alt keys\n    if (\n      // e.ctrlKey || e.altKey || e.metaKey || e.shiftKey\n      key === 'Control' ||\n      key === 'Shift' ||\n      key === 'Meta' ||\n      key === 'Alt'\n    ) {\n      if (e.location === 1) {\n        key = 'Left' + key;\n      } else if (e.location === 2) {\n        key = 'Right' + key;\n      } else if (e.location === 3) {\n        key = 'Extra' + key;\n      }\n    } else {\n      // reversed order of prefixes! 'Ctrl-Alt-Shift' is canonical order\n      if (e.shiftKey) {\n        key = 'Shift-' + key;\n      }\n      if (e.altKey) {\n        key = 'Alt-' + key;\n      }\n      if (e.ctrlKey) {\n        key = 'Ctrl-' + key;\n      }\n    }\n    const configuredIntent = keyIntentConfig[key];\n    if (configuredIntent) {\n      if (this.props.isTextBoxFocused) {\n        console.log(\n          'bypassing keyboard event processing because text box is focused'\n        );\n        return;\n      } else {\n        // console.log(\"skipping default on keyboard event because text box is not focused\");\n        e.preventDefault();\n      }\n    } else {\n      console.log('Unregistered key ', key, e);\n    }\n\n    if (\n      e.repeat === false &&\n      configuredIntent !== undefined &&\n      configuredIntent !== IntentName.NOOP\n    ) {\n      this.props.updaters.newIntent[configuredIntent].enqueueUpdate(() => {\n        this.props.updaters.newIntent[configuredIntent].enqueueUpdate(\n          () => false\n        );\n        return true;\n      });\n      this.props.updaters.activeIntent[configuredIntent].enqueueUpdate(\n        () => true\n      );\n    }\n  };\n\n  handleKeyup = (e: KeyboardEvent) => {\n    const { keyIntentConfig } = this.state;\n    const key: BrowserKeys = e.key;\n    const configuredIntent = keyIntentConfig[key];\n    if (\n      configuredIntent !== undefined &&\n      configuredIntent !== IntentName.NOOP\n    ) {\n      this.props.updaters.activeIntent[configuredIntent].enqueueUpdate(\n        () => false\n      );\n      this.props.updaters.endedIntent[configuredIntent].enqueueUpdate(() => {\n        this.props.updaters.endedIntent[configuredIntent].enqueueUpdate(\n          () => false\n        );\n        return true;\n      });\n    }\n  };\n\n  componentWillUnmount() {\n    // console.log('removing event listeners for keyboard component');\n    document.removeEventListener('keydown', this.handleKeydown);\n    document.removeEventListener('keyup', this.handleKeyup);\n  }\n\n  render() {\n    return <> </>;\n  }\n}\n","import React from 'react';\nimport { GameState } from './data/GameState';\nimport { Const } from './lib/util/misc';\nimport { UpdaterGeneratorType2 } from './lib/util/updaterGenerator';\n\n// nullable, but should be OK, just remember to populate the context\n// export const GameContext = React.createContext<GameState>(null as any);\n// export const GameUpdatersContext = React.createContext<UpdaterGeneratorType<GameState>>(null as any);\nexport const UseGameStateContext = React.createContext<\n  [Const<GameState>, UpdaterGeneratorType2<GameState>, () => void]\n>([] as any);\n","export const EPSILON = 0.0000001;\n\nexport const epsEqual = (x: number, y: number) => {\n  return Math.abs(x - y) < EPSILON;\n};\n\nexport const epsGreaterThan = (x: number, y: number) => {\n  return x + EPSILON - y > 0;\n};\n\nexport const epsLessThan = (x: number, y: number) => {\n  return x - EPSILON - y < 0;\n};\n","import { EPSILON } from '../epsilon_math';\nimport { Util } from '../misc';\n\nexport interface IVector2 {\n  x: number;\n  y: number;\n}\n\nexport class Vector2 {\n  private _x: number;\n  private _y: number;\n\n  public get x(): number {\n    return this._x;\n  }\n  public get y(): number {\n    return this._y;\n  }\n\n  constructor();\n  constructor(x: number, y: number);\n  constructor(props: { x: number; y: number });\n  constructor(\n    propsOrX: { x: number; y: number } | number = { x: 0, y: 0 },\n    y?: number\n  ) {\n    if (typeof propsOrX === 'number') {\n      this._x = propsOrX;\n      this._y = y!;\n    } else {\n      this._x = propsOrX.x;\n      this._y = propsOrX.y;\n    }\n  }\n\n  public get half(): Vector2 {\n    return new Vector2({ x: this.x / 2, y: this.y / 2 });\n  }\n\n  public static Zero: Vector2 = new Vector2(0, 0);\n  public static One: Vector2 = new Vector2(1, 1);\n\n  static IsVector2(x: any): x is Vector2 {\n    return x instanceof Vector2;\n  }\n\n  static Random(highX: number, highY: number, lowX = 0, lowY = 0) {\n    return new Vector2({\n      x: Util.RandRange(lowX, highX),\n      y: Util.RandRange(lowY, highY),\n    });\n  }\n\n  hash(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return `[${this.x}, ${this.y}]`;\n  }\n\n  invert(): Vector2 {\n    return new Vector2({\n      x: -this.x,\n      y: -this.y,\n    });\n  }\n\n  round(): Vector2 {\n    return new Vector2({\n      x: Math.round(this.x),\n      y: Math.round(this.y),\n    });\n  }\n\n  floor(): Vector2 {\n    return new Vector2({\n      x: Math.floor(this.x),\n      y: Math.floor(this.y),\n    });\n  }\n\n  taxicabDistance(p: Vector2): number {\n    return Math.abs(p.x - this.x) + Math.abs(p.y - this.y);\n  }\n\n  diagonalDistance(p: IVector2): number {\n    return Math.max(Math.abs(p.x - this.x), Math.abs(p.y - this.y));\n  }\n\n  distance(p: IVector2): number {\n    let dx = Math.abs(p.x - this.x);\n    let dy = Math.abs(p.y - this.y);\n\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  translate(p: { x: number; y: number }): Vector2 {\n    return new Vector2({\n      x: this.x + p.x,\n      y: this.y + p.y,\n    });\n  }\n\n  subtract(p: { x: number; y: number }): Vector2 {\n    return new Vector2({\n      x: this.x - p.x,\n      y: this.y - p.y,\n    });\n  }\n\n  add(p: { x: number; y: number }): Vector2 {\n    return new Vector2({\n      x: this.x + p.x,\n      y: this.y + p.y,\n    });\n  }\n\n  addX(x: number): Vector2 {\n    return new Vector2({\n      x: this.x + x,\n      y: this.y,\n    });\n  }\n\n  addY(y: number): Vector2 {\n    return new Vector2({\n      x: this.x,\n      y: this.y + y,\n    });\n  }\n\n  subtractX(x: number): Vector2 {\n    return new Vector2({\n      x: this.x - x,\n      y: this.y,\n    });\n  }\n\n  subtractY(y: number): Vector2 {\n    return new Vector2({\n      x: this.x,\n      y: this.y - y,\n    });\n  }\n\n  clampX(low: number, high: number): Vector2 {\n    let newX = this.x;\n\n    if (newX < low) {\n      newX = low;\n    }\n    if (newX > high) {\n      newX = high;\n    }\n\n    return new Vector2({\n      x: newX,\n      y: this.y,\n    });\n  }\n\n  clampY(low: number, high: number): Vector2 {\n    let newY = this.y;\n\n    if (newY < low) {\n      newY = low;\n    }\n    if (newY > high) {\n      newY = high;\n    }\n\n    return new Vector2({\n      x: this.x,\n      y: newY,\n    });\n  }\n\n  scale(\n    about: { x: number; y: number },\n    amount: { x: number; y: number }\n  ): Vector2 {\n    return new Vector2({\n      x: (this.x - about.x) * amount.x + about.x,\n      y: (this.y - about.y) * amount.y + about.y,\n    });\n  }\n\n  rotate(origin: Vector2, angle: number): Vector2 {\n    angle = angle / (180 / Math.PI);\n\n    return new Vector2({\n      x:\n        Math.cos(angle) * (this.x - origin.x) -\n        Math.sin(angle) * (this.y - origin.y) +\n        origin.x,\n      y:\n        Math.sin(angle) * (this.x - origin.x) +\n        Math.cos(angle) * (this.y - origin.y) +\n        origin.y,\n    });\n  }\n\n  equals(other: Vector2 | undefined | null): boolean {\n    if (other === undefined || other === null) {\n      return false;\n    }\n\n    return (\n      Math.abs(this.x - other.x) < EPSILON &&\n      Math.abs(this.y - other.y) < EPSILON\n    );\n  }\n\n  multiply(other: Vector2 | number): Vector2 {\n    if (typeof other === 'number') {\n      return new Vector2({\n        x: this.x * other,\n        y: this.y * other,\n      });\n    } else {\n      return new Vector2({\n        x: this.x * other.x,\n        y: this.y * other.y,\n      });\n    }\n  }\n\n  divide(other: Vector2 | number): Vector2 {\n    if (typeof other === 'number') {\n      return new Vector2({\n        x: this.x / other,\n        y: this.y / other,\n      });\n    } else {\n      return new Vector2({\n        x: this.x / other.x,\n        y: this.y / other.y,\n      });\n    }\n  }\n\n  toJSON(): any {\n    return {\n      __type: 'Vector2',\n      x: this.x,\n      y: this.y,\n    };\n  }\n\n  transform(trans: Vector2, scale: number): Vector2 {\n    return new Vector2({\n      x: Math.floor((this.x - trans.x) * scale),\n      y: Math.floor((this.y - trans.y) * scale),\n    });\n  }\n\n  normalize(): Vector2 {\n    if (this.x === 0 && this.y === 0) {\n      return this;\n    }\n\n    const length = Math.sqrt(this.x * this.x + this.y * this.y);\n\n    return new Vector2({\n      x: this.x / length,\n      y: this.y / length,\n    });\n  }\n\n  withX(newX: number): Vector2 {\n    return new Vector2({\n      x: newX,\n      y: this.y,\n    });\n  }\n\n  withY(newY: number): Vector2 {\n    return new Vector2({\n      x: this.x,\n      y: newY,\n    });\n  }\n\n  invertX(): Vector2 {\n    return new Vector2({\n      x: -this.x,\n      y: this.y,\n    });\n  }\n\n  lerp(other: Vector2, t: number): Vector2 {\n    if (t > 1 || t < 0) {\n      console.error('Lerp t must be between 0 and 1.');\n    }\n    if (t === 0) return this;\n    if (t === 1) return other;\n\n    return this.scale({ x: 0, y: 0 }, { x: 1 - t, y: 1 - t }).add(\n      other.scale({ x: 0, y: 0 }, { x: t, y: t })\n    );\n  }\n\n  lerp2D(other: Vector2, tx: number, ty: number): Vector2 {\n    if (tx > 1 || tx < 0 || ty > 1 || ty < 0) {\n      console.error('Lerp t must be between 0 and 1.');\n    }\n    return this.scale({ x: 0, y: 0 }, { x: 1 - tx, y: 1 - ty }).add(\n      other.scale({ x: 0, y: 0 }, { x: tx, y: ty })\n    );\n  }\n\n  coserp(other: Vector2, t: number): Vector2 {\n    t = 0.5 * (1 + Math.cos(2 * t * Math.PI));\n\n    return this.lerp(other, t);\n  }\n\n  static Deserialize(obj: any): Vector2 | null {\n    if (!obj || !obj.hasOwnProperty('x') || !obj.hasOwnProperty('y')) {\n      console.error('Failed deserializing point');\n      return null;\n    }\n\n    return new Vector2({\n      x: obj.x,\n      y: obj.y,\n    });\n  }\n\n  static Serialize(obj: Vector2): string {\n    return JSON.stringify(this.SerializeToObject(obj));\n  }\n\n  static SerializeToObject(obj: Vector2): object {\n    return { x: obj.x, y: obj.y };\n  }\n}\n","let COLORS = {\n  // good colors\n  backgroundBlue: 0x222222,\n  // nodePink: 0xeeaaaa,\n  // nodeLavender: 0xcc88ee,\n  // nodeBlue: 0x99bbff,\n  // nodeAqua: 0xbbccdd,\n  // nodeGrey: 0xddffdd,\n\n  // shitty colors\n  // backgroundBlue: 0xffffff,\n  // nodePink: 0x332244,\n  nodePink: 0x333333, // try this?\n  nodeLavender: 0x4b4b4b,\n  nodeBlue: 0x444444,\n\n  // used for lock nodes\n  nodeAqua: 0xffaaaa,\n  // gateTint: 0xaaaaaa,\n  gateTint: 0xffffff,\n\n  selectedTint: 0xbbbbff,\n  allocatedTint: 0x444444,\n  nodeBorder: 0x666666,\n  nullTint: 0xffffff,\n\n  // colors that dont matter too much\n  tooltipBorderBlack: 0x222222,\n  tooltipFillWhite: 0xeeeeee,\n  white: 0xffffff,\n  grayBlack: 0x1d1d1d,\n  borderBlack: 0x111111,\n  borderWhite: 0x666666,\n  black: 0x000000,\n  textWhite: 0x888888,\n};\n\n// baseColor = 0xccee88; // bright yellow green\n// baseColor = 0xcccccc; // gray almost invisible\n// baseColor = 0xccccee; // lavender almost invisible\n// baseColor = 0xaacccc; // lavender almost invisible\n// baseColor = 0xdddddd; // grayish white?\n// baseColor = 0xaaaaaa; // dark grayish brown\n// baseColor = 0x777777; // very dark brown\n\nexport default COLORS;\n\nexport function colorToCss(c: number): string {\n  return '#' + c.toString(16);\n}\n","import { DeserializationError } from '../misc';\n\n/**\n * Intended as a typescript-friendly replacement for {[k: string]: boolean} that allows us to specify what the key type should be (\n * rather than allowing any keyType.toString() to be a valid key, and without going through the trouble of declaring distinguishable\n * types for each key type we want to use). Also serves as a slightly different version of ES6 native Set(), which is hardcoded\n * to use === for object referential equality.\n *\n * NOTE: this assume hash() is a strong test for equality, i.e. 2 objects are considered equal if and only if their hashes are the same!!!\n * TODO: write StrictHashSet<K extends {hash(): string, equals(k: K): boolean}> to handle custom equality checks\n */\nexport class HashSet<K extends { hash(): string }> {\n  private _values: HashMap<K, K>;\n\n  constructor(initialValues: K[] = []) {\n    this._values = new HashMap<K, K>();\n\n    for (const value of initialValues) {\n      this.put(value);\n    }\n  }\n\n  remove(key: K): void {\n    this._values.remove(key);\n  }\n\n  put(key: K): void {\n    this._values.put(key, key);\n  }\n\n  get(key: K): boolean {\n    return this._values.get(key) !== undefined;\n  }\n\n  contains(key: K): boolean {\n    return this._values.contains(key);\n  }\n\n  values(): K[] {\n    return this._values.values();\n  }\n\n  // hash(): string {\n  //   return this._values.hashKeyset();\n  // }\n\n  clone(): HashSet<K> {\n    let n = new HashSet<K>();\n    n._values = this._values.clone();\n    return n;\n  }\n\n  size(): number {\n    return this._values.size();\n  }\n\n  equals(other: HashSet<K> | undefined | null) {\n    if (other === undefined || other === null) {\n      return false;\n    }\n\n    if (this.size() !== other.size()) {\n      return false;\n    }\n\n    for (let k of this.values()) {\n      if (!other.contains(k)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // *[Symbol.iterator]() {\n  //   // construct a new iterator. note that as usual\n  //   for (let key of Object.keys(this._values)) {\n  //     yield key;\n  //   }\n  // }\n}\n\n/**\n * Intended as a typescript-friendly replacement for {[k: string]: V} that allows us to specify what the key type should be (\n * rather than allowing any keyType.toString() to be a valid key, and without going through the trouble of declaring distinguishable\n * types for each key type we want to use). Also serves as a slightly different version of ES6 native Map(), which is hardcoded\n * to use === for object referential equality.\n *\n * NOTE: this assume hash() is a strong test for equality, i.e. 2 objects are considered equal if and only if their hashes are the same!!!\n * TODO: write StrictHashMap<K extends {hash(): string, equals(K): boolean}> to handle custom equality checks\n */\nexport class HashMap<K extends { hash(): string }, V> {\n  protected _values: { [key: string]: V } = {};\n\n  constructor(initialValues: [K, V][] = []) {\n    for (const [key, value] of initialValues) {\n      this.put(key, value);\n    }\n  }\n\n  put(key: K, value: V) {\n    this._values[key.hash()] = value;\n  }\n\n  remove(key: K): void {\n    delete this._values[key.hash()];\n  }\n\n  get(key: K): V | undefined {\n    return this._values[key.hash()];\n  }\n\n  contains(key: K): boolean {\n    // V may be an undefined type\n    return this.get(key) !== undefined && key.hash() in this._values;\n  }\n\n  values(): V[] {\n    return Object.values(this._values);\n    // return Object.keys(this._values).map(key => this._values[key]); // why grant???\n  }\n\n  // *[Symbol.iterator]() {\n  //   // construct a new iterator. note that as usual editing the object during iteration is not supported\n  //   for (let key of Object.keys(this._values)) {\n  //     yield key;\n  //   }\n  // }\n\n  // hashes only the keys - use HashableHashMap if you know that the value type here is also hashable\n  // hashKeyset(): string {\n  //   const hashes: number[] = Object.keys(this._values).map(s => hashCode(s));\n  //   let code: number = hashes.reduce((pv, cv) => pv + cv);\n  //   return code.toString();\n  // }\n\n  size(): number {\n    return Object.keys(this._values).length;\n  }\n\n  clone(): HashMap<K, V> {\n    let n = new HashMap<K, V>();\n    n._values = { ...this._values };\n    return n;\n  }\n}\n\nexport class HashableHashMap<\n  K extends { hash(): string },\n  V extends { hash(): string }\n> extends HashMap<K, V> {\n  hash(): string {\n    const hashes: number[] = Object.entries(this._values).map(\n      ([s, v]) => hashCode(s) + hashCode(v.hash())\n    );\n    let code: number = hashes.reduce((pv, cv) => pv + cv);\n    return code.toString();\n  }\n}\n\n/**\n * Same as HashMap, but actually stores the keys used to key the hashmap, instead of just their hashes.\n * Allows iteration over the full key-value pair set.\n */\nexport class KeyedHashMap<K extends { hash(): string }, V> {\n  private _kvalues: { [key: string]: [K, V] } = {};\n\n  constructor(initialValues: [K, V][] = []) {\n    for (const [key, value] of initialValues) {\n      this.put(key, value);\n    }\n  }\n\n  put(key: K, value: V) {\n    this._kvalues[key.hash()] = [key, value];\n  }\n\n  remove(key: K): void {\n    delete this._kvalues[key.hash()];\n  }\n\n  get(key: K): V | undefined {\n    return this._kvalues[key.hash()]?.[1];\n  }\n\n  contains(key: K): boolean {\n    // V may be an undefined type\n    return this.get(key) !== undefined && key.hash() in this._kvalues;\n  }\n\n  keys(): K[] {\n    return Object.keys(this._kvalues).map((key) => this._kvalues[key][0]);\n  }\n\n  entries(): [K, V][] {\n    return Object.keys(this._kvalues).map((key) => this._kvalues[key]);\n  }\n\n  values(): V[] {\n    return Object.keys(this._kvalues).map((key) => this._kvalues[key][1]);\n  }\n\n  hashKeyset(): string {\n    const hashes: number[] = Object.keys(this._kvalues).map((s) => hashCode(s));\n    let code: number = hashes.reduce((pv, cv) => pv + cv);\n    return code.toString();\n  }\n\n  clone(): KeyedHashMap<K, V> {\n    let n = new KeyedHashMap<K, V>();\n    n._kvalues = { ...this._kvalues };\n    return n;\n  }\n\n  size(): number {\n    return Object.keys(this._kvalues).length;\n  }\n\n  static SerializeToObject<K extends { hash(): string }, V>(\n    obj: KeyedHashMap<K, V>,\n    keySerializer?: (k: K) => object,\n    valueSerializer?: (v: V) => object\n  ): object {\n    return obj.entries().map((entry) => {\n      const [k, v] = entry;\n\n      return [\n        keySerializer ? keySerializer(k) : k,\n        valueSerializer ? valueSerializer(v) : v,\n      ];\n    });\n  }\n\n  static Deserialize<K extends { hash(): string }, V>(\n    obj: any,\n    keyDeserializer?: (o: any) => K,\n    valueDeserializer?: (o: any) => V\n  ): KeyedHashMap<K, V> | null {\n    if (!obj || !Array.isArray(obj)) {\n      console.error('Failed deserializing keyed hash map');\n      return null;\n    }\n\n    try {\n      const entries = obj.map((entry): [K, V] => {\n        if (!entry || !Array.isArray(entry) || entry.length !== 2) {\n          throw new DeserializationError(\n            `Failed deserializing entry ${JSON.stringify(entry)}`\n          );\n        }\n        const [k, v] = entry as [any, any];\n\n        const key: K = keyDeserializer ? keyDeserializer(k) : k;\n        const value: V = valueDeserializer ? valueDeserializer(v) : v;\n\n        return [key, value];\n      });\n      return new KeyedHashMap(entries);\n    } catch (e) {\n      if (e instanceof DeserializationError) {\n        console.error('Failed deserializing keyed hash map', e);\n        return null;\n      } else {\n        throw e;\n      }\n    }\n  }\n}\n\nexport class DefaultHashMap<K extends { hash(): string }, V> {\n  private _values: { [key: string]: V } = {};\n  private _makeDefault: () => V;\n\n  constructor(makeDefaultValue: () => V) {\n    this._makeDefault = makeDefaultValue;\n  }\n\n  put(key: K, value: V) {\n    this._values[key.hash()] = value;\n  }\n\n  get(key: K): V {\n    if (this._values[key.hash()] === undefined) {\n      this._values[key.hash()] = this._makeDefault();\n    }\n\n    return this._values[key.hash()];\n  }\n}\n\n// Hash a string to a number. source: https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0\nexport function hashCode(s: string): number {\n  let h = 0;\n  for (let i = 0; i < s.length; i++) {\n    h = (Math.imul(31, h) + s.charCodeAt(i)) | 0;\n  }\n  return h;\n}\n\n// declare global {\n//   interface Array<T extends { hash(): string }> {\n//     hash(): string\n//   }\n//\n//   interface Number {\n//     hash(): string\n//   }\n//\n//   interface String {\n//     hash(): String\n//   }\n// }\n//\n// Array.prototype.hash = function () {\n//   return hashArray(this);\n// }\n//\n// Number.prototype.hash = function () {\n//   return this.toString();\n// }\n//\n// String.prototype.hash = function () {\n//   return this;\n// }\n//\n// function hashArray<T extends { hash(): string }>(arr: T[]): string {\n//   return arr.map(elt => hashCode(elt.hash())).reduce((pv, cv) => 31 * pv + cv).hash();\n// }\n//\n","import * as Pixi from 'pixi.js';\nimport { IVector2 } from '../util/geometry/vector2';\n\nexport function PixiPointFrom(p: IVector2): Pixi.Point {\n  return new Pixi.Point(p.x, p.y);\n}\n","const RED_MASK = 0xff0000;\nconst GREEN_MASK = 0x00ff00;\nconst BLUE_MASK = 0x0000ff;\nconst RED_UNIT = 0x010000;\nconst GREEN_UNIT = 0x000100;\nconst BLUE_UNIT = 0x000001;\nconst COLOR_MAX = 255;\n\n/**\n * Multiplies colors (0xFFFFFF === 1). use for applying tints manually.\n * @param color1 A base color\n * @param color2 A tint\n */\nexport function multiplyColor(color1: number, color2: number): number {\n  let reds = [color1 & RED_MASK, color2 & RED_MASK];\n  let greens = [color1 & GREEN_MASK, color2 & GREEN_MASK];\n  let blues = [color1 & BLUE_MASK, color2 & BLUE_MASK];\n  let out = Math.round(((reds[0] / RED_UNIT) * reds[1]) / RED_MASK) * RED_UNIT;\n  out +=\n    Math.round(((greens[0] / GREEN_UNIT) * greens[1]) / GREEN_MASK) *\n    GREEN_UNIT;\n  out +=\n    Math.round(((blues[0] / BLUE_UNIT) * blues[1]) / BLUE_MASK) * BLUE_UNIT;\n  return out;\n}\n\nexport function addColor(color1: number, color2: number): number {\n  let reds = [color1 & RED_MASK, color2 & RED_MASK];\n  let greens = [color1 & GREEN_MASK, color2 & GREEN_MASK];\n  let blues = [color1 & BLUE_MASK, color2 & BLUE_MASK];\n  let out =\n    Math.round(Math.min(reds[0] / RED_UNIT + reds[1] / RED_UNIT, COLOR_MAX)) *\n    RED_UNIT;\n  out +=\n    Math.round(\n      Math.min(greens[0] / GREEN_UNIT + greens[1] / GREEN_UNIT, COLOR_MAX)\n    ) * GREEN_UNIT;\n  out +=\n    Math.round(\n      Math.min(blues[0] / BLUE_UNIT + blues[1] / BLUE_UNIT, COLOR_MAX)\n    ) * BLUE_UNIT;\n  return out;\n}\n/**\n *\n * @param args either { target, proportion, base } or { color, opacity, background } or target\n * @param arg2 if args was a single number, this should be opacity\n * @param arg3 if args was a single number, this should be background, or default to 0 (black) background\n */\n\nexport function interpolateColor(\n  args:\n    | { target: number; proportion: number; base?: number }\n    | { color: number; opacity: number; background?: number }\n    | number,\n  arg2?: number,\n  arg3?: number\n): number {\n  if (typeof args === 'object') {\n    if (args.hasOwnProperty('target')) {\n      let _args: any = args;\n      return _interpolateColor(_args);\n    } else if (args.hasOwnProperty('color')) {\n      let _args: any = args;\n      return _interpolateColor({\n        target: _args.color,\n        proportion: _args.opacity,\n        base: _args.background,\n      });\n    } else {\n      throw new Error(`missing parameter in interpolateColor: ${args}`);\n    }\n  } else {\n    if (arg2) {\n      return _interpolateColor({ target: args, proportion: arg2, base: arg3 });\n    } else {\n      throw new Error(\n        `missing parameter in interpolateColor: ${args} ${arg2} ${arg3}`\n      );\n    }\n  }\n}\nfunction _interpolateColor(args: {\n  target: number;\n  proportion: number;\n  base?: number;\n}): number {\n  const { target, base = 0, proportion = 1 } = args;\n  let reds = [target & RED_MASK, base & RED_MASK];\n  let greens = [target & GREEN_MASK, base & GREEN_MASK];\n  let blues = [target & BLUE_MASK, base & BLUE_MASK];\n  let out =\n    Math.round(\n      (reds[0] / RED_UNIT) * proportion +\n        (reds[1] / RED_UNIT) * (1 - proportion)\n    ) * RED_UNIT;\n  out +=\n    Math.round(\n      (greens[0] / GREEN_UNIT) * proportion +\n        (greens[1] / GREEN_UNIT) * (1 - proportion)\n    ) * GREEN_UNIT;\n  out +=\n    Math.round(\n      (blues[0] / BLUE_UNIT) * proportion +\n        (blues[1] / BLUE_UNIT) * (1 - proportion)\n    ) * BLUE_UNIT;\n\n  return out;\n}\n\n// h in degrees; s, v in [0, 1]\ntype Hsv = {\n  h: number;\n  s: number;\n  v: number;\n};\n\nconst SECTOR_DEGREES = 60; // 6 color sectors that total 360 degrees\n\n// source: https://stackoverflow.com/questions/17242144/javascript-convert-hsb-hsv-color-to-rgb-accurately/54024653#54024653\n// and https://stackoverflow.com/questions/8022885/rgb-to-hsv-color-in-javascript\n// tested using: https://stackoverflow.com/questions/52193529/is-it-possible-to-import-a-typescript-into-a-running-instance-of-ts-node-repl\nexport function hexToHsv(color: number): Hsv {\n  const [r, g, b] = [\n    (color & RED_MASK) / RED_UNIT / COLOR_MAX,\n    (color & GREEN_MASK) / GREEN_UNIT / COLOR_MAX,\n    (color & BLUE_MASK) / BLUE_UNIT / COLOR_MAX,\n  ];\n  const v = Math.max(r, g, b);\n  const cMin = Math.min(r, g, b);\n  const range = v - cMin;\n  const hueSector =\n    range &&\n    (v === r\n      ? (g - b) / range\n      : v === g\n      ? 2 + (b - r) / range\n      : 4 + (r - g) / range);\n  const h = SECTOR_DEGREES * (hueSector < 0 ? hueSector + 6 : hueSector);\n  return {\n    h,\n    s: v && range / v,\n    v,\n  };\n}\n\nexport function hsvToHex(hsv: Hsv): number {\n  const [r, g, b] = [\n    hsvToHexHelper(5, hsv),\n    hsvToHexHelper(3, hsv),\n    hsvToHexHelper(1, hsv),\n  ];\n  return r * RED_UNIT + g * GREEN_UNIT + b * BLUE_UNIT;\n}\n\nfunction hsvToHexHelper(colorDirection: number, hsv: Hsv) {\n  const { h, s, v } = hsv;\n  const k = (colorDirection + h / SECTOR_DEGREES) % 6;\n  const colorPercentUnclamped = Math.min(k, 4 - k);\n  const colorPercent = Math.max(0, Math.min(colorPercentUnclamped, 1));\n  // console.log({ h, s, v , colorDirection, k, colorPercentUnclamped, colorPercent, })\n  return Math.round(v * (1 - s * colorPercent) * COLOR_MAX);\n}\n","import { Const } from './misc';\nimport { UpdaterFn, UpdaterFn2, UpdaterFnParam2 } from './updaterGenerator';\n\n/**\n *\n * @param fn an arbitrary callback which performs some operation with side effects.\n * @returns a tuple: [batchedFn, fireBatch].\n * batchedFn takes the same arguments as fn, but the side effects are delayed until fireBatch is called.\n * if batchedFn is called multiple times, those invocations are stored in order, and then popped off in order when fireBatch is called.\n */\nexport function batchify<A extends any[]>(\n  fn: (...args: A) => void\n): [(...args: A) => void, () => void] {\n  let batch: A[] = [];\n\n  return [\n    (...args: A) => {\n      batch.push(args);\n      // console.log({ stack: new Error().stack, batchSize: batch.length });\n      // console.log({ batchSize: batch.length });\n    },\n    () => {\n      if (batch.length !== 0) {\n        console.log({ fired: batch.length });\n      }\n      for (let a of batch) {\n        fn(...a);\n      }\n      batch = [];\n    },\n  ];\n}\n\n/**\n * Same use case and types as [batchify], however, specifically we expect [fn] to be a setState function which takes value-or-callback\n * as its single argument, and instead of calling [fn] repeatedly for each callback in the batch, we apply the callbacks in the batch\n * sequentially to get a single state update which we then provide to [fn].\n */\nexport function batchifySetState<T>(\n  fn: UpdaterFn<T> | UpdaterFn2<T, T>\n): [UpdaterFn2<T, T>, () => void] {\n  let batch: UpdaterFnParam2<T, T>[] = [];\n\n  return [\n    (arg: UpdaterFnParam2<T, T>) => {\n      batch.push(arg);\n      // console.log({ batchSize: batch.length });\n    },\n    () => {\n      if (batch.length === 0) {\n        return;\n      }\n      // console.log({ fired: batch.length });\n      let thisBatch = [...batch];\n      batch = [];\n      (fn as any)((prev: any) => {\n        let next = prev;\n        for (let valueOrCallback of thisBatch) {\n          if (typeof valueOrCallback === 'function') {\n            next = (valueOrCallback as (t: Const<T>) => Const<T>)(next);\n          } else {\n            next = valueOrCallback;\n          }\n        }\n        return next;\n      });\n    },\n  ];\n}\n","import { Const } from './misc';\n\nexport type UpdaterFnParam2<T, W> =\n  | ((prev: Const<T>, prevWhole: W) => Const<T>)\n  | (T extends Function ? never : T); // (T | ((prev: T, prevWhole: W) => T));\n\nexport type UpdaterFn2<T, W> = (arg: UpdaterFnParam2<T, W>) => void;\n\n/**\n * Represent the type which has the same deep object struture as T but instead of values, it has\n * functions on [getUpdater], [enqueueUpdate], and [update] attached to every level of the object structure.\n */\nexport type UpdaterGeneratorType2<T, W = T> = {\n  [k in keyof T]: (T[k] extends { [kkt: string]: any }\n    ? UpdaterGeneratorType2<T[k], W>\n    : {}) & {\n    getUpdater: () => UpdaterFn2<T[k], W>;\n    enqueueUpdate: UpdaterFn2<T[k], W>;\n  };\n} & {\n  getUpdater: () => UpdaterFn2<T, W>;\n  enqueueUpdate: UpdaterFn2<T, W>;\n};\n\n// helper method for the recursion\nfunction updaterGenerator2Helper<T, W>(\n  dataObject: T,\n  dataUpdater: UpdaterFn2<T, W>\n): UpdaterGeneratorType2<T, W> {\n  const updaters: UpdaterGeneratorType2<T, W> = {} as any;\n  updaters.getUpdater = () => dataUpdater;\n  updaters.enqueueUpdate = dataUpdater;\n  if (\n    dataObject === null ||\n    dataObject === undefined ||\n    typeof dataObject !== 'object'\n  ) {\n    return updaters;\n  } else {\n    const keys: (keyof T)[] = Object.keys(dataObject) as any;\n    keys.forEach((key: keyof T) => {\n      if (key === 'enqueueUpdate' || key === 'getUpdater' || key === 'update') {\n        throw Error(\n          `Invalid key in updaterGenerator: ${key} conflicts with reserved keywords enqueueUpdate, update, getUpdater.`\n        );\n      }\n      function keyUpdater(\n        newValueOrCallback: UpdaterFnParam2<T[typeof key], W>\n      ) {\n        if (typeof newValueOrCallback === 'function') {\n          dataUpdater((oldData: Const<T>, wholeData: W) => {\n            const newKey = (\n              newValueOrCallback as (\n                prev: Const<T[typeof key]>,\n                whole: W\n              ) => T[typeof key]\n            )(\n              oldData[key] as any as Const<T[typeof key]>, // NOTE(bowei): typescript does not recognize Const<T>[typeof key] == Const<T[typeof key]>\n              wholeData\n            );\n            if (oldData[key] === newKey) {\n              return oldData; // no update detected, no need to update anything\n            } else {\n              const newData = {\n                ...oldData,\n                [key]: newKey,\n              };\n              return newData;\n            }\n          });\n        } else {\n          dataUpdater((oldData, wholeData) => ({\n            ...oldData,\n            [key]: newValueOrCallback,\n          }));\n        }\n      }\n      updaters[key] = updaterGenerator2Helper<T[typeof key], W>(\n        dataObject[key],\n        keyUpdater\n      ) as unknown as typeof updaters[typeof key];\n    });\n    return updaters;\n  }\n}\n\n/**\n * Convenience method for generating setState<FancyObject.sub.component>() from setState<FancyObject> callbacks.\n * If used in react, recommended that this be memoized.\n *\n * @generic T should be a data-only object - nested objects are allowed but arrays, sets not supported\n * @param dataObject ANY instance of T, used only for its keys. MUST have all keys present\n * @param setState an updater function, which can be called as: dataUpdater(newT) or\n *   dataUpdater((oldT) => { return newTFromOldT(oldT) }) ; e.g. react setState() function.\n * @return a deep object that has the same keys as T, except each key also has a getUpdater()/set/update member;\n *   the getUpdater() on a subobject of T acts similarly to the [setState] param but to the subobject rather than the whole object;\n *   the whole object is also available as the second argument of the callback\n * e.g. :\n *   let gameStateUpdater = updaterGenerator(skeletonObject, setGameState);\n *   let setName = gameStateUpdater.player.name.getUpdater();\n *   gameStateUpdater.player.name.set(newName);\n *   gameStateUpdater.player.name.update((oldName, wholeObject) => oldName + \" \");\n *\n */\nexport function updaterGenerator2<T>(\n  dataObject: T,\n  // setState: UpdaterFn2<T, T> | UpdaterFn<T>,\n  setState: UpdaterFn2<T, T>\n  // setState: UpdaterFn<T>,\n): UpdaterGeneratorType2<T> {\n  const dataUpdater2 = (stateCallbackFunction: UpdaterFnParam2<T, T>) => {\n    if (typeof stateCallbackFunction === 'function') {\n      setState((prev: Const<T>) => {\n        // if T is a function type already, typescript correctly notifies us that this will fail\n        const next = (\n          stateCallbackFunction as (\n            prev: Const<T>,\n            prevWhole: Const<T>\n          ) => Const<T>\n        )(\n          // const next = (stateCallbackFunction as (prev: T, prevWhole: T) => T)(\n          prev,\n          prev\n        );\n        // console.log(\" in updater generator 2\", { next });\n        return next;\n      });\n    } else {\n      setState(stateCallbackFunction);\n    }\n  };\n  return updaterGenerator2Helper<T, T>(dataObject, dataUpdater2);\n}\n\nexport type UpdaterFnParam<T> =\n  | (T extends Function ? never : T)\n  | ((prev: T) => T);\nexport type UpdaterFn<T> = (arg: UpdaterFnParam<T>) => void;\n","import * as Pixi from 'pixi.js';\nimport { batchifySetState } from '../../lib/util/batchify';\nimport { Const } from '../../lib/util/misc';\nimport {\n  UpdaterFn2,\n  updaterGenerator2,\n  UpdaterGeneratorType2,\n} from '../../lib/util/updaterGenerator';\n\ntype Props = {\n  args?: {\n    markForceUpdate?: (self: LifecycleHandlerBase<any, any>) => void;\n    [k: string]: any;\n  };\n  [k: string]: any;\n};\n\ntype State = {};\n\n/**\n * Bundle used for associating child components with this component.\n * Contains the childClass class reference,\n * the constructed instance itself (if already constructed),\n * and a pure function for computing child props from parent props & parent state.\n */\ntype ChildInstructions<\n  ChildInstanceType,\n  ChildPropsType extends Props,\n  ParentPropsType extends Props,\n  ParentStateType extends State\n> = {\n  childClass: new (props: ChildPropsType) => ChildInstanceType;\n  instance?: ChildInstanceType;\n  propsFactory: (\n    parentProps: ParentPropsType,\n    parentState: Const<ParentStateType>\n  ) => ChildPropsType;\n};\n\nclass ChildrenArray<P extends Props, S extends State> {\n  private _values: ChildInstructions<\n    LifecycleHandlerBase<any, any, any>,\n    any,\n    P,\n    S\n  >[] = [];\n\n  public add<CIT extends LifecycleHandlerBase<any, any, any>, CPT>(\n    c: ChildInstructions<CIT, CPT, P, S>\n  ) {\n    // if (\n    //   this._values.indexOf(c) === -1 ||\n    //   (c.instance && this.contains(c.instance))\n    // ) {\n    //   // do nohting - its already in here\n    // }\n    this._values.push(c);\n  }\n\n  public remove<CIT extends LifecycleHandlerBase<any, any, any>>(\n    c: CIT\n  ): ChildInstructions<CIT, any, P, S> | undefined {\n    const removed = this._values.splice(\n      this._values.findIndex((it) => it.instance === c),\n      1\n    );\n    if (removed.length === 0) {\n      return undefined;\n    } else {\n      return removed[0] as ChildInstructions<CIT, any, P, S>;\n    }\n  }\n\n  public contains<CIT extends LifecycleHandlerBase<any, any, any>>(\n    c: CIT\n  ): boolean {\n    return this._values.findIndex((it) => it.instance === c) > -1;\n  }\n\n  public get<CIT extends LifecycleHandlerBase<CPT, any>, CPT>(\n    c: CIT\n  ): ChildInstructions<CIT, CPT, P, S> | undefined {\n    return this._values.find((it) => it.instance === c) as\n      | ChildInstructions<CIT, CPT, P, S>\n      | undefined;\n  }\n\n  public clone(): ChildrenArray<P, S> {\n    let cloned = new ChildrenArray<P, S>();\n    cloned._values = [...this._values];\n    return cloned;\n  }\n\n  public forEach(\n    callbackfn: (\n      value: ChildInstructions<LifecycleHandlerBase<any, any>, any, P, S>,\n      index: number,\n      array: ChildInstructions<LifecycleHandlerBase<any, any>, any, P, S>[]\n    ) => void\n  ) {\n    this._values.forEach(callbackfn);\n  }\n}\n\n// export interface LifecycleHandlerBase<P extends Props, S extends State> {\n// // useful for interface merging?? https://stackoverflow.com/questions/44153378/typescript-abstract-optional-method\n// }\n\n/**\n * LifecycleHandlerConstructor <- this should take the usual props, and will return new proxy, new base component(props), the handler object which has the construct() property and that function in it\n */\n// export function LifecycleHandlerConstructor<T>(props:\n// class and interface merging??? https://stackoverflow.com/questions/44153378/typescript-abstract-optional-method\nexport abstract class LifecycleHandlerBase<\n  P extends Props,\n  S extends State,\n  U extends UpdaterGeneratorType2<S, S> = UpdaterGeneratorType2<S, S>\n> {\n  // public, only to interface with non lifecycleHandler classes that we have yet to refactor\n  public abstract container: Pixi.Container;\n  // public, only to allow useState function below to set this.state\n  // abstract, to remind implementers to set it in the constructor\n  // Immutable state! use updaters to update it, and then lifecycle will handle firing the batched updates.\n  public abstract state: Const<S>;\n\n  // updater functions generate from state. The only way to update state. Also useful to pass down selectively to children.\n  protected stateUpdaters?: U;\n\n  protected _staleProps: P; // NOTE(bowei): need it for args for now; maybe we can extract out args?\n  private _children: ChildrenArray<P, S> = new ChildrenArray();\n\n  /**\n   * Holds references to children which we will soon be constructing and adding to pixi hierarchy\n   */\n  private _childrenToConstruct: ChildrenArray<P, S> = new ChildrenArray();\n  /**\n   * Holds references to the children which are marked for deletion but have not been deleted and deconstructed yet\n   */\n  private _childrenToDestruct: ChildrenArray<P, S> = new ChildrenArray();\n  /**\n   * Holds children which have requested that they be forcefully updated even if props have not changed\n   */\n  private _forceUpdates: ChildrenArray<P, S> = new ChildrenArray();\n\n  constructor(props: P) {\n    this._staleProps = props;\n  }\n\n  protected addChild<CIT extends LifecycleHandlerBase<CPT, any, any>, CPT>(\n    c: ChildInstructions<CIT, CPT, P, S>\n  ) {\n    this._children.add(c); // make sure children are updated\n    this._childrenToConstruct.add(c); // if not already constructed/added to pixi hierarchy, queue it up\n  }\n\n  protected registerChild<CIT extends LifecycleHandlerBase<CPT, any, any>, CPT>(\n    c: ChildInstructions<CIT, CPT, P, S>\n  ) {\n    // only add children to updateable, not constructed\n    // Note that this also skips adding them to pixi hierarchy\n    this._children.add(c);\n  }\n\n  protected removeChild<CIT extends LifecycleHandlerBase<any, any, any>>(\n    c: CIT\n  ) {\n    let childInfo = this._children.remove(c); // make sure children are no longer updated\n    // NOTE(bowei): do we need to call willUnount on the children here??\n    childInfo && this._childrenToDestruct.add(childInfo); // queue it for destruction next update tick\n  }\n\n  /**\n   * Intended to be called as part of the constructor.\n   * So that subclasses of lifecycleHandler don't have to manually add this line to the constructor each time,\n   * we provide a handy [engageLifecycle] method on the class reference which automatically adds it using a [Proxy<>].\n   */\n  private _didConstruct(props: P) {\n    // this._self = this;\n    this._childrenToConstruct.forEach((child) => {\n      if (!child.instance) {\n        child.instance = new child.childClass(\n          child.propsFactory(props, this.state)\n        );\n      }\n      // NOTE(bowei): we are assuming the derived class did NOT manually add child to pixi hierarchy, even if\n      // they constructed the instance themselves (in order to e.g. hold a reference); we do that here\n      this.container.addChild(child.instance.container);\n    });\n    this._childrenToConstruct = new ChildrenArray(); // clear the list so that we don't re-add them in the update loop\n    this.renderSelf(props);\n    this.didMount?.();\n  }\n\n  /**\n   * callback that can be passed to child -\n   * if child is not a pure component, it might need to inform us of \"forced\" updates for otherwise we wouldnt call any child code at all\n   * (e.g. if child needs to update its own animation or hover states)\n   */\n  protected markForceUpdate = (childInstance: any) => {\n    this._staleProps.args?.markForceUpdate?.(this); // mark us for update in OUR parent\n\n    const childInfo = this._children.get(childInstance);\n    if (childInfo) {\n      this._forceUpdates.add(childInfo);\n    } else {\n      throw new Error(`Error, child ${childInstance} not found in ${this}`);\n    }\n  };\n\n  // cannot be attached to an instance due to typescript/eslint\n  // if satic, cannot be called \"useState\" or else react linter complains\n  // Sets this.fireStateUpdaters, this.stateUpdaters if not already set.\n  protected useState<S, T extends { state: Const<S> }>(\n    self: T,\n    initialState: S\n  ) {\n    const setState: UpdaterFn2<S, S> = (valueOrCallback) => {\n      if (typeof valueOrCallback === 'function') {\n        // self.state = (valueOrCallback as (s: S) => S as any as (s: Const<S>) => Const<S>)(self.state);\n        self.state = (valueOrCallback as (s: Const<S>) => Const<S>)(self.state);\n      } else {\n        self.state = valueOrCallback as S as Const<S>;\n      }\n    };\n    const [batchedSetState, fireBatch] = batchifySetState(setState);\n    const stateUpdaters = updaterGenerator2<S>(initialState, batchedSetState);\n\n    if (!this.fireStateUpdaters) {\n      this.fireStateUpdaters = fireBatch;\n    }\n    if (!this.stateUpdaters) {\n      this.stateUpdaters = stateUpdaters as any as U;\n    }\n\n    return {\n      state: initialState as Const<S>,\n      setState,\n      fireStateUpdaters: fireBatch,\n      stateUpdaters,\n    };\n  }\n\n  // shim while we migrate\n  public update(nextProps: P) {\n    this._update(nextProps);\n  }\n\n  // NOTE(bowei): this is public because the root of component hierarchy needs to be bootstrapped from pixi react bridge\n  public _update(nextProps: P) {\n    // nextProps is guaranteed to be referentially a distinct object (might be shallow copy though)\n    const staleState = { ...this.state };\n    this.fireStateUpdaters?.(); // the ONLY place in this function where this.state is changed\n    this.updateSelf?.(nextProps);\n    if (\n      this.shouldUpdate &&\n      !this.shouldUpdate(this._staleProps, staleState, nextProps, this.state)\n    ) {\n      // we think we don't need to update; however, we still need to\n      // update the chidlren that asked us to forcefully update them\n      let forceUpdates = this._forceUpdates.clone();\n      this._forceUpdates = new ChildrenArray<P, S>(); // clear the force updates of next tick\n      forceUpdates.forEach((childInfo) => {\n        let { instance, propsFactory } = childInfo;\n        instance?._update(propsFactory(nextProps, this.state)); // why are we even calling props factory here?? theres no point... we should just tell the child to use their own stale props, like this:\n        // instance._forceUpdate();\n        // note that children can add themselves into forceupdate next tick as well, if they need to ensure they're continuously in there\n\n        instance && this.didForceUpdateChild?.(instance);\n      });\n      // no need to do anything else -- stale props has not changed\n\n      // this.didForceUpdate?.();\n      return;\n    } else {\n      this.updateChildren?.(nextProps);\n      this._updateChildren(nextProps); // implementation should call children._update in here\n      this.renderSelf(nextProps);\n      this._staleProps = nextProps;\n      new Promise((resolve) => resolve(this.didUpdate?.()));\n    }\n  }\n\n  /**\n   * Not recommended to implement this.\n   * Do any work to prepare for updating children components. Guaranteed to run before children are destroyed/updated/created.\n   *\n   * Will not run if shouldUpdate() === false.\n   */\n  protected updateChildren?(nextProps: P): void;\n\n  // destroy, update, create in that order, so that there's no extra update right before destroy or after create\n  private _updateChildren(nextProps: P) {\n    this._childrenToDestruct.forEach((child) => {\n      if (child.instance) {\n        // should always be true\n        child.instance.willUnmount?.();\n        this.container.removeChild(child.instance.container);\n      }\n    });\n    this._childrenToDestruct = new ChildrenArray();\n\n    this._children.forEach(({ instance, propsFactory }) => {\n      instance?._update(propsFactory(nextProps, this.state));\n    });\n\n    this._childrenToConstruct.forEach((child) => {\n      // here we expect the child instances to be empty, but they could be already constructed, if the derived class needs to keep a reference to it\n      if (!child.instance) {\n        child.instance = new child.childClass(\n          child.propsFactory(nextProps, this.state)\n        );\n      }\n      this.container.addChild(child.instance.container);\n    });\n    this._childrenToConstruct = new ChildrenArray();\n  }\n\n  /**\n   * If this component has state managed by updaters, and the updaters object has batched enqueueUpdate calls,\n   * put the fireBatch method here so the lifecycle handler fires the state updaters at the correct time.\n   */\n  protected fireStateUpdaters?(): void;\n\n  /**\n   * Called after this class's constructor is finished calling and this component and all its children are finished rendering\n   */\n  protected didMount?(): void;\n\n  /**\n   * Called every tick, regardless of whether shouldUpdate is true or false.\n   * Called before children are updated.\n   * Called right after state updater batch is fired.\n   * TODO(bowei): consider renaming this to \"onTick\" or something, and also making sure that it gets called in children even if they are memoized\n   * @param nextProps\n   */\n  protected updateSelf?(nextProps: P): void;\n\n  /**\n   *\n   * @param staleProps\n   * @param staleState\n   * @param nextProps\n   * @param state\n   * @returns false if staleProps == nextProps and staleState == state (which will cause the component to be memoized)\n   *          true if the props or state differ significantly\n   */\n  protected shouldUpdate?(\n    staleProps: P,\n    staleState: Const<S>,\n    nextProps: P,\n    state: Const<S>\n  ): boolean;\n\n  /**\n   * Called after children are updated,\n   * Called only if shouldUpdate === true.\n   */\n  protected abstract renderSelf(nextProps: P): void;\n  protected didUpdate?(): void;\n  protected didForceUpdate?(): void;\n\n  /**\n   * Called before a component is removed\n   */\n  public willUnmount(): void {} // TODO(bowei): revert this to protected nullable; however it's needed for shim for now\n\n  protected didForceUpdateChild?(child: LifecycleHandlerBase<any, any>): void;\n\n  public toString(): string {\n    return 'lifecyclehandler object';\n  }\n}\n\nexport type LifecycleHandlerType<P, S> = LifecycleHandlerBase<P, S>;\nexport const LifecycleHandler = new Proxy(LifecycleHandlerBase, {\n  construct: (target, args, newTarget) => {\n    const instance = Reflect.construct(target, args, newTarget);\n    instance._didConstruct(...args);\n    return instance;\n  },\n});\n\n/**\n * Wrapper - this MUST be called on new lifecycle handler extensions in order to hook up the _didConstruct lifecycle automatically.\n * @param derived the class that extends LifecycleHandler\n * @returns the wrapped class which should be exported\n */\nexport function engageLifecycle<T extends object>(derived: T): T {\n  return new Proxy<T>(derived, {\n    construct: (target, args) => {\n      const instance = new (target as any)(args[0]);\n      instance._didConstruct(args[0]);\n      return instance;\n    },\n  });\n}\n\n/**\n * First render:\n * constructor\n * renderChildren?\n * renderSelf\n * didMount\n *\n * Subsequent updates:\n *\n * fireStateUpdaters\n * updateSelf\n * shouldUpdate(props,state)?\n * updateChildren\n * children._update\n * renderSelf\n * didUpdate\n * staleProps = props\n *\n */\n\ntype ReferenceProps = {\n  updaters: 'stuff';\n  args: { s: 'other stuff' };\n};\ntype ReferenceState = {\n  lalalala: 'hahahah';\n};\n\nexport class Reference extends LifecycleHandler<\n  ReferenceProps,\n  ReferenceState\n> {\n  public container: Pixi.Container;\n  public state: ReferenceState;\n  constructor(props: ReferenceProps) {\n    super(props);\n    this.container = new Pixi.Container();\n    this.state = {\n      lalalala: 'hahahah',\n    };\n  }\n\n  updateSelf(nextProps: ReferenceProps) {}\n  renderSelf(nextProps: ReferenceProps) {}\n  didMount() {}\n  didUpdate() {}\n  shouldUpdate(): boolean {\n    return true;\n  }\n  fireStateUpdaters() {}\n  willUnmount() {}\n}\n","import { NodeContents } from '../game/worldGen/nodeContents/NodeContentsFactory';\nimport { KeyedHashMap } from '../lib/util/data_structures/hash';\nimport { Vector2 } from '../lib/util/geometry/vector2';\nimport { Vector3 } from '../lib/util/geometry/vector3';\nimport { LazyHashMap } from '../lib/util/lazy';\nimport { LockData } from './PlayerSaveState';\n\nexport type WorldGenState = {\n  seed: number;\n  /**\n   * What sort of locks are generated. Does not store the live status of the locks.\n   */\n  lockMap: LazyHashMap<Vector3, LockData | undefined>;\n\n  /**\n   * Data about each node.\n   */\n  nodeContentsMap: LazyHashMap<Vector3, NodeContents>;\n};\n\nexport type ZLevelGen = {\n  id: number;\n  chunks: KeyedHashMap<Vector2, ChunkGen>;\n};\n\nexport type ChunkGen = {\n  id: number;\n  pointNodes: KeyedHashMap<Vector2, PointNodeGen>;\n};\n\nexport class ChunkGenConstants {\n  public static CHUNK_DIM = 9; // each chunk is a DIM x DIM grid of nodes, centered on a single node\n  public static CHUNK_HALF_DIM = (ChunkGenConstants.CHUNK_DIM - 1) / 2;\n  public static DROP_NODES_CHANCE = 0.0; // before generating edges, how many of the nodes to throw out\n}\n\nexport type PointNodeGen = {\n  id: number;\n} & (\n  | {\n      nodeType: NodeType.Basic;\n      // more data to be generated here - size, color, etc.\n      resourceType: ResourceNontrivialType;\n      resourceModifier: ResourceModifier;\n      resourceAmount: number;\n    }\n  | {\n      nodeType: NodeType.Nothing;\n    }\n  | {\n      nodeType: NodeType.EfficiencyGate;\n      resourceType: ResourceNontrivialType;\n      resourceModifier: ResourceModifier;\n      resourceAmount: number;\n\n      efficiencyGateInfo: {\n        thresholdResourceType: ResourceType;\n        thresholdResourceAmount: number;\n        timeUntilLocked: number;\n      };\n    }\n);\n\nexport enum NodeType {\n  Basic = 'Basic',\n  Nothing = 'Nothing',\n  EfficiencyGate = 'EfficiencyGate',\n}\n\nexport enum ResourceNontrivialType {\n  Mana0 = 'Mana0',\n  Mana1 = 'Mana1',\n  Mana2 = 'Mana2',\n}\n\nexport type ResourceType = ResourceNontrivialType;\n// // eslint-disable-next-line\n// export const ResourceType = {\n//   Nothing: \"Nothing\",\n//   EfficiencyGate: \"EfficiencyGate\",\n//   ...ResourceNontrivialType,\n// };\n\nexport enum ResourceModifier {\n  Flat = 'Flat',\n  Increased0 = '% increased',\n  AfterIncreased0 = 'added after % increased',\n  Increased1 = '% increased multiplier',\n  AfterIncreased1 = 'added after % increased multiplier',\n}\n","import * as Pixi from 'pixi.js';\nimport { RenderedChunkConstants } from './ChunkComponent';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { GameState } from '../../data/GameState';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { PixiPointFrom } from '../../lib/pixi/pixify';\nimport { multiplyColor } from '../../lib/util/color';\nimport { TooltippableAreaComponent } from './TooltippableAreaComponent';\nimport { engageLifecycle, LifecycleHandlerBase } from './LifecycleHandler';\nimport { RootComponentState } from './RootComponent';\nimport { PointNodeTextureSet } from '../textures/PointNodeTexture';\nimport COLORS from '../colors';\nimport {\n  NodeType,\n  PointNodeGen,\n  ResourceModifier,\n  ResourceNontrivialType,\n} from '../../data/WorldGenState';\nimport { PointNodeRef } from '../../data/PointNodeRef';\n\ntype Props = {\n  delta: number;\n  args: {\n    pointNodeTexture: PointNodeTextureSet;\n    position: Vector2;\n    markForceUpdate: (childInstance: any) => void;\n  };\n  selfPointNodeRef: PointNodeRef;\n  updaters: UpdaterGeneratorType2<GameState>;\n  tooltipUpdaters: UpdaterGeneratorType2<RootComponentState>['tooltip'];\n  pointNodeGen: PointNodeGen;\n  isSelected: boolean;\n  isAllocated: boolean;\n};\n\ntype State = {\n  numClicks: number; // debug\n  descriptionText: string;\n};\n\nclass PointNodeComponent extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n\n  public sprite: Pixi.Sprite;\n  public halfwayCenterSprite: Pixi.Sprite;\n  public centerSprite: Pixi.Sprite;\n  public topHalfSprite: Pixi.Sprite;\n  public hitArea: Pixi.IHitArea;\n\n  public tooltippableArea?: TooltippableAreaComponent;\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      numClicks: 0,\n      descriptionText: '',\n    };\n    this.updateSelf(props); // initialize the description text properly\n    this.container = new Pixi.Container();\n\n    let defaultTexture = props.args.pointNodeTexture.find((it) => {\n      return it.cropFraction >= 0.99;\n    })?.texture;\n    this.container.sortableChildren = true;\n    this.sprite = new Pixi.Sprite(defaultTexture);\n    this.sprite.anchor.x = 0.5;\n    this.sprite.anchor.y = 0.5;\n    this.sprite.zIndex = -2;\n    this.container.addChild(this.sprite);\n\n    this.topHalfSprite = new Pixi.Sprite(\n      props.args.pointNodeTexture.find((it) => {\n        return it.cropFraction >= 0.499;\n      })?.texture\n    );\n    this.topHalfSprite.anchor.x = 0.5;\n    this.topHalfSprite.anchor.y = 0.5;\n    this.topHalfSprite.zIndex = -1;\n    // this.topHalfSprite.alpha = 0;\n    if (props.pointNodeGen.nodeType === NodeType.EfficiencyGate) {\n      // adding this drops FPS from 90 static/50 moving to 70 static/40 moving, even when alpha off, so we only add it for the nodes that need it\n      this.container.addChild(this.topHalfSprite);\n    }\n\n    const mask = new Pixi.Graphics();\n    mask.beginFill(COLORS.black);\n    mask.drawRect(\n      0,\n      0,\n      this.topHalfSprite.width,\n      this.topHalfSprite.height / 2\n    );\n    mask.pivot.x = this.topHalfSprite.width / 2;\n    mask.pivot.y = this.topHalfSprite.height / 2;\n    mask.zIndex = 30;\n    // this.container.addChild(mask);\n    // this.topHalfSprite.mask = mask; // DO NOT DO THIS, masking many masks is extremely slow: https://forums.rpgmakerweb.com/index.php?threads/games-optimisations-tips.92717/\n\n    this.centerSprite = new Pixi.Sprite(defaultTexture);\n    this.centerSprite.anchor.x = 0.5;\n    this.centerSprite.anchor.y = 0.5;\n    this.centerSprite.scale = PixiPointFrom(new Vector2(0.5, 0.5));\n    this.centerSprite.zIndex = 1;\n    this.centerSprite.alpha = 0; // TESTING\n    // this.container.addChild(this.centerSprite);\n\n    this.halfwayCenterSprite = new Pixi.Sprite(defaultTexture);\n    this.halfwayCenterSprite.anchor.x = 0.5;\n    this.halfwayCenterSprite.anchor.y = 0.5;\n    this.halfwayCenterSprite.scale = PixiPointFrom(new Vector2(0.75, 0.75));\n    this.halfwayCenterSprite.zIndex = 0;\n    // disable this sprite for now - causes a fairly significant fps hit, until we get around to holding less nodes on the page at once\n    this.halfwayCenterSprite.alpha = 0;\n    // this.container.addChild(this.halfwayCenterSprite);\n\n    this.container.interactive = true;\n    // NOTE(bowei): ive tested, the following 2 settings don't significantly affect FPS\n    this.container.buttonMode = true;\n    this.hitArea = new Pixi.Rectangle(\n      -RenderedChunkConstants.NODE_HITAREA_PX / 2,\n      -RenderedChunkConstants.NODE_HITAREA_PX / 2,\n      RenderedChunkConstants.NODE_HITAREA_PX,\n      RenderedChunkConstants.NODE_HITAREA_PX\n    );\n    // note: hitarea breaks child onhover: https://github.com/pixijs/pixi.js/issues/5837\n    this.container.hitArea = this.hitArea;\n\n    // const tooltippableAreaPropsFactory = (p: Props, s: State) => {\n    //   let nodeDescription: string = \"Nothing (empty node)\";\n    //   if (p.pointNodeGen.resourceType !== ResourceType.Nothing) {\n    //     nodeDescription = `${p.pointNodeGen.resourceAmount} ${p.pointNodeGen.resourceModifier} ${p.pointNodeGen.resourceType}`;\n    //   }\n    //   return {\n    //     args: {\n    //       markForceUpdate: this.markForceUpdate,\n    //     },\n    //     text: nodeDescription,\n    //     hitArea: this.hitArea, // TODO(bowei): move into state???\n    //   }\n    // }\n    // this.tooltippableArea = new TooltippableAreaComponent(tooltippableAreaPropsFactory(props, this.state));\n    // this.container.addChild(this.tooltippableArea.container);\n    // this.addChild({\n    //   childClass: TooltippableAreaComponent,\n    //   instance: this.tooltippableArea,\n    //   propsFactory: tooltippableAreaPropsFactory,\n    // });\n  }\n\n  protected updateSelf(props: Props) {\n    let nodeDescription: string = 'Nothing (empty node)';\n    if (props.pointNodeGen.nodeType === NodeType.EfficiencyGate) {\n      nodeDescription = `Unlocks at 300 Mana0 in 14 or fewer allocations`; // TODO\n    } else if (props.pointNodeGen.nodeType !== NodeType.Nothing) {\n      nodeDescription = `${props.pointNodeGen.resourceAmount} ${props.pointNodeGen.resourceModifier} ${props.pointNodeGen.resourceType}`;\n    }\n    this.state.descriptionText = nodeDescription;\n  }\n\n  protected renderSelf(props: Props) {\n    this.container.position = PixiPointFrom(props.args.position);\n    let tint: number;\n    let centerTint: number;\n    if (props.isSelected) {\n      tint = COLORS.selectedTint;\n      centerTint = COLORS.selectedTint;\n    } else {\n      tint = COLORS.nullTint;\n      centerTint = COLORS.nullTint;\n    }\n    if (props.isAllocated) {\n      tint = COLORS.allocatedTint;\n    } else {\n    }\n\n    let baseColor: number = 0;\n    let topHalfColor: number = 0;\n    if (props.pointNodeGen.nodeType === NodeType.Nothing) {\n      baseColor = COLORS.nodeBlue; // blue that mixes in with bg\n    } else if (props.pointNodeGen.nodeType === NodeType.EfficiencyGate) {\n      baseColor = COLORS.nodeAqua; // bg color = abcdef\n      topHalfColor = multiplyColor(COLORS.nodeAqua, COLORS.gateTint); // grayish white\n    } else if (\n      props.pointNodeGen.resourceType === ResourceNontrivialType.Mana0\n    ) {\n      if (props.pointNodeGen.resourceModifier === ResourceModifier.Flat) {\n        baseColor = COLORS.nodePink;\n      } else if (\n        props.pointNodeGen.resourceModifier === ResourceModifier.Increased0\n      ) {\n        baseColor = COLORS.nodeLavender;\n      }\n    }\n    // switch (props.pointNodeGen.resourceType) {\n    //   case ResourceType.Nothing:\n    //     baseColor = 0x99bbff; // blue that mixes in with bg\n    //     break;\n    //   case ResourceType.Mana0:\n    //     baseColor = 0xeeaaaa; // red\n    //     break;\n    //   case ResourceType.Mana1:\n    //     baseColor = 0xbb7733; // brown?\n    //     break;\n    //   case ResourceType.Mana2:\n    //     baseColor = 0x44aa44; // green\n    //     break;\n    // }\n\n    this.sprite.tint = multiplyColor(baseColor, tint);\n    this.centerSprite.tint = multiplyColor(baseColor, centerTint);\n    this.topHalfSprite.tint = multiplyColor(topHalfColor, tint);\n\n    // TESTING\n    let textureToFind = Math.floor(Math.random() * 9) / 8 - 0.001;\n    this.topHalfSprite.texture = props.args.pointNodeTexture.find(\n      (it) => it.cropFraction >= textureToFind\n    )?.texture!;\n\n    // NOTE(bowei): careful, we dont want to set the scale of our tooltip to be bigger\n    if (props.selfPointNodeRef.pointNodeCoord.equals(Vector2.Zero)) {\n      this.container.scale = PixiPointFrom(new Vector2(1.25, 1.25));\n    }\n  }\n\n  protected shouldUpdate(\n    staleProps: Props,\n    staleState: State,\n    props: Props,\n    state: State\n  ): boolean {\n    for (let key of Object.keys(staleProps) as (keyof Props)[]) {\n      if (key === 'delta' || key === 'args' || key === 'updaters') {\n        continue;\n      }\n      if (staleProps[key] !== props[key]) {\n        console.log(`node shouldUpdate differed in ${key}, returning true`);\n        return true;\n      }\n      if (key === 'selfPointNodeRef') {\n        if (staleProps[key]?.hash() !== props[key]?.hash()) {\n          console.log(`node shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n    }\n    return false;\n  }\n\n  protected didMount() {\n    // const { updaters } = this._staleProps; // we assume this will never change\n\n    //     this.container.addListener('pointerover', (event: Pixi.InteractionEvent) => {\n    //       this.state.pointerover = event;\n    //     })\n    //     this.container.addListener('pointerout', () => {\n    //       this.state.pointerover = undefined;\n    //     })\n    //\n\n    this.container.addListener(\n      'pointerdown',\n      (event: Pixi.InteractionEvent) => {\n        this._staleProps.args.markForceUpdate(this);\n        this.state.numClicks++;\n        // selectOrReselectNode(updaters, this._staleProps.selfPointNodeRef);\n        // event.stopPropagation();\n      }\n    );\n\n    this.container.addListener(\n      'pointerover',\n      (event: Pixi.InteractionEvent) => {\n        // this._staleProps.args.markForceUpdate(this);\n\n        // source: https://www.iwm-tuebingen.de/iwmbrowser/lib/pixi/tooltip.js\n        const localPosition = event.data.getLocalPosition(this.container);\n        const position = new Vector2(\n          this.container.worldTransform.tx,\n          this.container.worldTransform.ty\n        );\n        // const position = new Vector2(this.container.worldTransform.tx, this.container.worldTransform.ty);\n\n        this._staleProps.tooltipUpdaters.enqueueUpdate((prev) => {\n          const next = {\n            ...prev,\n            visible: true,\n            text: this.state.descriptionText,\n            position: position.add(localPosition),\n          };\n          // console.log({ next });\n          return next;\n        });\n      }\n    );\n\n    this.container.addListener('pointerout', (event: Pixi.InteractionEvent) => {\n      // this._staleProps.args.markForceUpdate(this);\n\n      this._staleProps.tooltipUpdaters.enqueueUpdate((prev) => {\n        const next = { ...prev, visible: false, text: '' };\n        return next;\n      });\n    });\n\n    this.container.addListener(\n      'pointermove',\n      (event: Pixi.InteractionEvent) => {\n        // this._staleProps.args.markForceUpdate(this);\n\n        // source: https://www.iwm-tuebingen.de/iwmbrowser/lib/pixi/tooltip.js\n        const localPosition = event.data.getLocalPosition(this.container);\n        const position = new Vector2(\n          this.container.worldTransform.tx,\n          this.container.worldTransform.ty\n        );\n\n        this._staleProps.tooltipUpdaters.position.enqueueUpdate(\n          position.add(localPosition)\n        );\n      }\n    );\n  }\n\n  public toString(): string {\n    return 'PointNodeCompoent ' + this._staleProps.selfPointNodeRef.toString();\n  }\n}\n\nconst wrapped = engageLifecycle(PointNodeComponent);\n// eslint-disable-next-line\ntype wrapped = PointNodeComponent;\nexport { wrapped as PointNodeComponent };\nexport type { Props as PointNodeComponentProps };\n","import { Vector2 } from '../lib/util/geometry/vector2';\n\nexport class PointNodeRef {\n  public z: number;\n  public chunkCoord: Vector2;\n  public pointNodeCoord: Vector2;\n  public pointNodeId: number;\n\n  constructor(args: {\n    z: number;\n    chunkCoord: Vector2;\n    pointNodeCoord: Vector2;\n    pointNodeId: number;\n  }) {\n    this.z = args.z;\n    this.chunkCoord = args.chunkCoord;\n    this.pointNodeCoord = args.pointNodeCoord;\n    this.pointNodeId = args.pointNodeId;\n  }\n\n  public hash(): string {\n    return (\n      this.pointNodeId.toString() +\n      this.z.toString() +\n      this.chunkCoord.toString() +\n      this.pointNodeCoord.toString()\n    );\n  }\n\n  public toString(): string {\n    return (\n      this.z +\n      ',' +\n      this.chunkCoord.toString() +\n      ',' +\n      this.pointNodeCoord.toString()\n    );\n  }\n}\n\nexport class ChunkRef {\n  public z: number;\n  public chunkCoord: Vector2;\n  public chunkId: number;\n\n  constructor(args: { z: number; chunkCoord: Vector2; chunkId: number }) {\n    this.z = args.z;\n    this.chunkCoord = args.chunkCoord;\n    this.chunkId = args.chunkId;\n  }\n\n  public hash(): string {\n    return (\n      this.chunkId.toString() + this.z.toString() + this.chunkCoord.toString()\n    );\n  }\n}\n","import * as Pixi from 'pixi.js';\nimport { HashSet, KeyedHashMap } from '../../lib/util/data_structures/hash';\nimport { GameState } from '../../data/GameState';\nimport {\n  PointNodeComponent,\n  PointNodeComponentProps,\n} from './PointNodeComponent';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { PixiPointFrom } from '../../lib/pixi/pixify';\nimport { engageLifecycle, LifecycleHandlerBase } from './LifecycleHandler';\nimport { RootComponentState } from './RootComponent';\nimport { PointNodeTextureSet } from '../textures/PointNodeTexture';\nimport { ChunkRef, PointNodeRef } from '../../data/PointNodeRef';\nimport { ChunkGenConstants, ChunkGen } from '../../data/WorldGenState';\n\nexport class RenderedChunkConstants {\n  //   public static SPACING_PX: number = 24;\n  //   public static CHUNK_SPACING_PX: number = (ChunkGenConstants.CHUNK_DIM + 0.5) * RenderedChunkConstants.SPACING_PX;\n  //   public static NODE_SIZE_PX: number = 14;\n  //   public static NODE_HITAREA_PX: number = 18;\n  public static SPACING_PX: number = 36;\n  public static CHUNK_SPACING_PX: number =\n    (ChunkGenConstants.CHUNK_DIM + 0.0) * RenderedChunkConstants.SPACING_PX;\n  public static NODE_SIZE_PX: number = 22;\n  public static NODE_HITAREA_PX: number =\n    RenderedChunkConstants.NODE_SIZE_PX + 4;\n  public static NODE_ROUNDED_PX: number = 4;\n}\n\ntype Props = {\n  delta: number;\n  args: {\n    pointNodeTexture: PointNodeTextureSet;\n    markForceUpdate: (childInstance: any) => void;\n  };\n  selfChunkRef: ChunkRef;\n  updaters: UpdaterGeneratorType2<GameState>;\n  tooltipUpdaters: UpdaterGeneratorType2<RootComponentState>['tooltip'];\n  position: Vector2;\n  chunkGen: ChunkGen;\n  selectedPointNode: PointNodeRef | undefined;\n  allocatedPointNodeSubset: HashSet<PointNodeRef>;\n};\n\ntype State = {};\n\nclass ChunkComponent2 extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n\n  public children: KeyedHashMap<PointNodeRef, PointNodeComponent>;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {};\n    this.container = new Pixi.Container();\n    this.children = new KeyedHashMap();\n\n    this.resyncChildren(props);\n  }\n\n  protected renderSelf(props: Props) {\n    this.container.position = PixiPointFrom(props.position);\n  }\n\n  protected shouldUpdate(\n    prevProps: Props,\n    prevState: State,\n    props: Props,\n    state: State\n  ): boolean {\n    // return true;\n    for (let key of Object.keys(prevProps) as (keyof Props)[]) {\n      if (key === 'delta' || key === 'args' || key === 'updaters') {\n        continue;\n      }\n      if (key === 'position') {\n        if (!prevProps[key].equals(props[key])) {\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (key === 'selectedPointNode') {\n        if (prevProps[key]?.hash() !== props[key]?.hash()) {\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (key === 'selfChunkRef') {\n        if (prevProps[key]?.hash() !== props[key]?.hash()) {\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (key === 'allocatedPointNodeSubset') {\n        // subsets could be different objects but have the same contents\n        if (!prevProps[key].equals(props[key])) {\n          // console.log(`prevProps: ${JSON.stringify(prevProps[key])}`);\n          // console.log(`props: ${JSON.stringify(props[key])}`);\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (prevProps[key] !== props[key]) {\n        console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private resyncChildren(props: Props) {\n    let childrenToDelete = this.children.clone(); // track which children need to be destroyed according to new props\n    console.log(`chunk component upsert children got here`);\n    // console.log(`chunk component upsert children has ${this.children.size()} children`);\n\n    for (let [\n      pointNodeCoord,\n      pointNodeGen,\n    ] of props.chunkGen.pointNodes.entries()) {\n      const pointNodeRef = new PointNodeRef({\n        z: props.selfChunkRef.z,\n        chunkCoord: props.selfChunkRef.chunkCoord,\n        pointNodeCoord: pointNodeCoord,\n        pointNodeId: pointNodeGen.id,\n      });\n      let childPropsFactory = (\n        props: Props,\n        state: State\n      ): PointNodeComponentProps => {\n        return {\n          delta: props.delta,\n          args: {\n            pointNodeTexture: props.args.pointNodeTexture,\n            markForceUpdate: this.markForceUpdate,\n            position: pointNodeRef.pointNodeCoord.multiply(\n              RenderedChunkConstants.SPACING_PX\n            ),\n          },\n          selfPointNodeRef: pointNodeRef,\n          updaters: props.updaters,\n          tooltipUpdaters: props.tooltipUpdaters,\n          pointNodeGen,\n          isSelected:\n            props.selectedPointNode?.pointNodeId === pointNodeRef.pointNodeId,\n          isAllocated: props.allocatedPointNodeSubset.contains(pointNodeRef),\n        };\n      };\n      const childKey = pointNodeRef;\n\n      let childComponent = this.children.get(childKey);\n      if (childComponent) {\n        // childComponent.update(childPropsFactory(props, this.state));\n        childrenToDelete.remove(childKey);\n      } else {\n        childComponent = new PointNodeComponent(\n          childPropsFactory(props, this.state)\n        );\n        this.children.put(pointNodeRef, childComponent);\n        // this.container.addChild(childComponent.container);\n        this.addChild({\n          childClass: PointNodeComponent,\n          instance: childComponent,\n          propsFactory: childPropsFactory,\n        });\n      }\n    }\n    console.log(\n      `chunk component to delete has ${childrenToDelete.size()} children`\n    );\n    for (let [childKey, childComponent] of childrenToDelete.entries()) {\n      // childComponent.willUnmount();\n      this.children.remove(childKey);\n      // this.container.removeChild(childComponent.container);\n      this.removeChild(childComponent);\n    }\n  }\n\n  protected updateChildren(props: Props) {\n    this.resyncChildren(props);\n  }\n\n  protected didForceUpdateChild(instance: LifecycleHandlerBase<any, any>) {\n    // IMPORTANT! this is intended to raise the child that asked for a force update to the top so it isn't covered\n    // by other sibling pixi containers. however this code doesnt work well during the update call, for some reason (not sure why)\n    this.container.removeChild(instance.container);\n    this.container.addChild(instance.container);\n  }\n}\n\nconst wrapped = engageLifecycle(ChunkComponent2);\n// eslint-disable-next-line\ntype wrapped = ChunkComponent2;\nexport { wrapped as ChunkComponent };\nexport type { Props as ChunkComponentProps };\n","import { KeyedHashMap } from './data_structures/hash';\nimport { Const } from './misc';\n\n/**\n * Class representing a value which is only computed when used.\n *\n * Usage: const lazy = new Lazy(() => thingThatReturnsSomething()).\n * Then thingThatReturnsSomething() will only get called on the first time lazy.get() is called.\n * On the second and subsequent times, lazy.get() will return the same object - the factory method is not called again.\n */\nexport class Lazy<T> {\n  private _wasConstructed: boolean = false;\n  private _value: T | undefined = undefined;\n  private _factory: () => T;\n\n  constructor(\n    factory: () => T\n    // structure?: T extends { [key: string]: any } ? T : void\n  ) {\n    this._factory = factory;\n  }\n  public get(): T {\n    // T might have undefined as a valid value\n    if (this._value !== undefined || this._wasConstructed === true) {\n      return this._value!;\n    } else {\n      this._value = this._factory();\n      this._wasConstructed = true;\n      return this._value;\n    }\n  }\n  public wasConstructed(): boolean {\n    return this._wasConstructed;\n  }\n  // public async getAsync(): Promise<T> {\n  //   if (this._value !== undefined || this._wasConstructed === true) {\n  //     return Promise.resolve(this._value!);\n  //   } else {\n  //     return new Promise<T>((resolve, reject) => {\n  //       this._value = this._factory();\n  //       this._wasConstructed = true;\n  //       resolve(this._value);\n  //     });\n  //   }\n  // }\n}\n\nexport function LazyProxy<\n  T extends { [key: string]: any } | { [i: number]: any }\n>(factory: () => T): Const<T> {\n  return new Proxy(new Lazy(factory), {\n    get: (target, property, receiver) => {\n      if (property === 'toJSON') {\n        return () => {\n          if (target.wasConstructed()) {\n            return target.get();\n          } else {\n            return '[Object Lazy]';\n          }\n        };\n      }\n      const targetValue = target.get();\n      return Reflect.get(targetValue, property);\n    },\n    ownKeys: (target) => {\n      const targetValue = target.get();\n      return Reflect.ownKeys(targetValue);\n    },\n    getOwnPropertyDescriptor: (target, property) => {\n      /**\n       * https://stackoverflow.com/questions/40352613/why-does-object-keys-and-object-getownpropertynames-produce-different-output\n       */\n\n      return Object.getOwnPropertyDescriptor(target.get(), property);\n    },\n    has: (target, property) => {\n      // This is called when iterating over array i.e. array.forEach()\n      return property in target.get();\n    },\n  }) as unknown as Const<T>;\n}\n\n/**\n * Similar to HashMap, except it allows setting a factory function to be used for missing keys.\n * Also memoizes the result.\n *\n * NOTE: this assume hash() is a strong test for equality, i.e. 2 objects are considered equal if and only if their hashes are the same!!!\n */\nexport class LazyHashMap<K extends { hash(): string }, V> {\n  protected _values: KeyedHashMap<K, V>;\n  protected _factory: (k: K) => V;\n\n  constructor(factory: (k: K) => V) {\n    this._values = new KeyedHashMap();\n    this._factory = factory;\n  }\n\n  setFactory(factory: (k: K) => V): LazyHashMap<K, V> {\n    this._factory = factory;\n    return this;\n  }\n\n  // overrides any factory provided values\n  put(key: K, value: V) {\n    this._values.put(key, value);\n  }\n\n  // removes the key from the list of memoized (cached) values and forces a re-call of the factory() provider.\n  // also removes the key from any manually put(ted) factory overrides.\n  remove(key: K): void {\n    this._values.remove(key);\n  }\n\n  invalidate(key: K): void {\n    this.remove(key);\n  }\n\n  clear(): void {\n    this._values = new KeyedHashMap();\n  }\n\n  // checks to see if the key is present. returns undefined if populating the key would require a factory() call.\n  peek(key: K): V | undefined {\n    return this._values.get(key);\n  }\n\n  get(key: K): V {\n    if (this._values.contains(key)) {\n      return this._values.get(key)!;\n    } else {\n      const value = this._factory(key);\n      this._values.put(key, value);\n      return value;\n    }\n  }\n\n  // same as get(), but does not return the result. useful for forcing factory() call so the value is available quickly later.\n  precompute(key: K) {\n    if (this._values.contains(key)) {\n      return;\n    } else {\n      const value = this._factory(key);\n      this._values.put(key, value);\n    }\n  }\n\n  // returns true if the key was already instantiated, false otherwise.\n  contains(key: K): boolean {\n    return this._values.contains(key);\n  }\n\n  // only contains populated (i.e. non-factory) entries.\n  values(): V[] {\n    return this._values.values();\n  }\n\n  // only contains populated (i.e. non-factory) entries.\n  keys(): K[] {\n    return this._values.keys();\n  }\n\n  // only contains populated (i.e. non-factory) entries.\n  entries(): [K, V][] {\n    return this._values.entries();\n  }\n\n  // *[Symbol.iterator]() {\n  //   // construct a new iterator. note that as usual editing the object during iteration is not supported\n  //   for (let key of Object.keys(this._values)) {\n  //     yield key;\n  //   }\n  // }\n\n  // hashes only the keys - use HashableHashMap if you know that the value type here is also hashable\n  // hashKeyset(): string {\n  //   const hashes: number[] = Object.keys(this._values).map(s => hashCode(s));\n  //   let code: number = hashes.reduce((pv, cv) => pv + cv);\n  //   return code.toString();\n  // }\n\n  // only contains populated (i.e. non-factory) entries.\n  size(): number {\n    return this._values.size();\n  }\n\n  clone(newFactory?: (k: K) => V): LazyHashMap<K, V> {\n    let n = new LazyHashMap<K, V>(newFactory || this._factory);\n    n._values = this._values.clone();\n    return n;\n  }\n}\n/*\nexport class LazyHashSet<K extends { hash(): string }> {\n  private _values: LazyHashMap<K, boolean>;\n\n  constructor(factory: (k: K) => boolean, initialValues: K[] = []) {\n    this._values = new LazyHashMap<K, boolean>(factory);\n\n    for (const value of initialValues) {\n      this.put(value);\n    }\n  }\n\n  // remove(key: K): void {\n  //   this._values.remove(key);\n  // }\n\n  put(key: K): void {\n    this._values.put(key, true);\n  }\n\n  get(key: K): boolean {\n    return this._values.get(key) !== undefined;\n  }\n\n  contains(key: K): boolean {\n    return this._values.contains(key);\n  }\n\n  values(): K[] {\n    return this._values.values();\n  }\n\n  // hash(): string {\n  //   return this._values.hashKeyset();\n  // }\n\n  clone(): HashSet<K> {\n    let n = new HashSet<K>();\n    n._values = this._values.clone();\n    return n;\n  }\n\n  size(): number {\n    return this._values.size();\n  }\n\n  equals(other: HashSet<K> | undefined | null) {\n    if (other === undefined || other === null) {\n      return false;\n    }\n\n    if (this.size() !== other.size()) {\n      return false;\n    }\n\n    for (let k of this.values()) {\n      if (!other.contains(k)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // *[Symbol.iterator]() {\n  //   // construct a new iterator. note that as usual\n  //   for (let key of Object.keys(this._values)) {\n  //     yield key;\n  //   }\n  // }\n}\n*/\n","export enum NodeAllocatedStatus {\n  TAKEN = 'TAKEN',\n  AVAILABLE = 'AVAILABLE',\n  UNREACHABLE = 'UNREACHABLE',\n  HIDDEN = 'HIDDEN',\n}\n/**\n * taken implies reachable. reachable implies visible.\n */\n\nexport type NodeTakenStatus = {\n  taken: boolean;\n};\nexport type NodeVisibleStatus = {\n  visible: boolean;\n};\nexport type NodeReachableStatus = {\n  reachable: boolean;\n};\n/**\n * Immutable, readable booleans\n */\nexport enum BoolEnum {\n  true = 'true',\n  false = 'false',\n}\n// eslint-disable-next-line\nexport const NodeTakenStatus: {\n  [k in BoolEnum]: NodeTakenStatus;\n} = {\n  true: { taken: true },\n  false: { taken: false },\n};\n// eslint-disable-next-line\nexport const NodeVisibleStatus: {\n  [k in BoolEnum]: NodeVisibleStatus;\n} = {\n  true: { visible: true },\n  false: { visible: false },\n};\n// eslint-disable-next-line\nexport const NodeReachableStatus: {\n  [k in BoolEnum]: NodeReachableStatus;\n} = {\n  true: { reachable: true },\n  false: { reachable: false },\n};\n\nexport enum LockStatus {\n  CLOSED = 'CLOSED',\n  TICKING = 'TICKING',\n  OPEN = 'OPEN',\n}\n","import * as Pixi from 'pixi.js';\nimport { GameState } from '../../data/GameState';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Const } from '../../lib/util/misc';\nimport { engageLifecycle, LifecycleHandlerBase } from './LifecycleHandler';\nimport { TooltipInfo } from './TooltipComponent';\n\ntype Props = {\n  args: {\n    renderer: Pixi.Renderer;\n    markForceUpdate: (childInstance: any) => void;\n  };\n  delta: number;\n  gameState: Const<GameState>;\n  appSize: Vector2;\n  tick: number;\n  tooltip: TooltipInfo;\n};\n\ntype State = {};\n\nclass FixedCameraStageComponent extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this.container = new Pixi.Container();\n    this.container.sortableChildren = true;\n    this.state = {};\n  }\n\n  protected renderSelf(props: Props) {}\n}\n\nconst wrapped = engageLifecycle(FixedCameraStageComponent);\n// eslint-disable-next-line\ntype wrapped = FixedCameraStageComponent;\nexport { wrapped as FixedCameraStageComponent };\nexport type { Props as FixedCameraStageComponentProps };\n","import { EPSILON } from '../epsilon_math';\nimport { IVector2, Vector2 } from './vector2';\n\nexport interface IVector3 {\n  x: number;\n  y: number;\n  z: number;\n}\n\nexport class Vector3 {\n  private _x: number;\n  private _y: number;\n  private _z: number;\n\n  public get x(): number {\n    return this._x;\n  }\n  public get y(): number {\n    return this._y;\n  }\n  public get z(): number {\n    return this._z;\n  }\n\n  constructor();\n  constructor(x: number, y: number, z: number);\n  constructor(props: IVector3);\n  constructor(\n    propsOrX: IVector3 | number = { x: 0, y: 0, z: 0 },\n    y?: number,\n    z?: number\n  ) {\n    if (typeof propsOrX === 'number') {\n      this._x = propsOrX;\n      this._y = y!;\n      this._z = z!;\n    } else {\n      this._x = propsOrX.x;\n      this._y = propsOrX.y;\n      this._z = propsOrX.z;\n    }\n  }\n\n  // public get half(): Vector3 {\n  //   return new Vector3({ x: this.x / 2, y: this.y / 2 });\n  // }\n\n  public static Zero: Vector3 = new Vector3(0, 0, 0);\n  public static One: Vector3 = new Vector3(1, 1, 1);\n\n  static IsVector3(x: any): x is Vector3 {\n    return x instanceof Vector3;\n  }\n\n  static FromVector2(p: IVector2, z: number = 0) {\n    return new Vector3(p.x, p.y, z);\n  }\n\n  // static Random(highX: number, highY: number, lowX = 0, lowY = 0) {\n  //   return new Vector3({\n  //     x: Util.RandRange(lowX, highX),\n  //     y: Util.RandRange(lowY, highY),\n  //   });\n  // }\n\n  hash(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return `[${this.x}, ${this.y}, ${this.z}]`;\n  }\n\n  // invert(): Vector3 {\n  //   return new Vector3({\n  //     x: -this.x,\n  //     y: -this.y,\n  //   });\n  // }\n\n  round(): Vector3 {\n    return new Vector3({\n      x: Math.round(this.x),\n      y: Math.round(this.y),\n      z: Math.round(this.z),\n    });\n  }\n\n  moduloPositive(b: number): Vector3 {\n    return new Vector3({\n      x: ((this.x % b) + b) % b,\n      y: ((this.y % b) + b) % b,\n      z: ((this.z % b) + b) % b,\n    });\n  }\n\n  // floor(): Vector3 {\n  //   return new Vector3({\n  //     x: Math.floor(this.x),\n  //     y: Math.floor(this.y),\n  //   });\n  // }\n\n  // taxicabDistance(p: Vector3): number {\n  //   return Math.abs(p.x - this.x) + Math.abs(p.y - this.y);\n  // }\n\n  // diagonalDistance(p: IVector3): number {\n  //   return Math.max(Math.abs(p.x - this.x), Math.abs(p.y - this.y));\n  // }\n\n  // distance(p: IVector3): number {\n  //   let dx = Math.abs(p.x - this.x);\n  //   let dy = Math.abs(p.y - this.y);\n\n  //   return Math.sqrt(dx * dx + dy * dy);\n  // }\n\n  // translate(p: { x: number; y: number }): Vector3 {\n  //   return new Vector3({\n  //     x: this.x + p.x,\n  //     y: this.y + p.y,\n  //   });\n  // }\n\n  subtract(p: IVector3): Vector3 {\n    return new Vector3({\n      x: this.x - p.x,\n      y: this.y - p.y,\n      z: this.z - p.z,\n    });\n  }\n\n  add(pOrX: IVector3 | number, y?: number, z?: number): Vector3 {\n    if (typeof pOrX === 'number') {\n      return new Vector3({\n        x: this.x + pOrX,\n        y: this.y + y!,\n        z: this.z + z!,\n      });\n    } else {\n      return new Vector3({\n        x: this.x + pOrX.x,\n        y: this.y + pOrX.y,\n        z: this.z + pOrX.z,\n      });\n    }\n  }\n\n  addX(x: number): Vector3 {\n    return new Vector3({\n      x: this.x + x,\n      y: this.y,\n      z: this.z,\n    });\n  }\n\n  addY(y: number): Vector3 {\n    return new Vector3({\n      x: this.x,\n      y: this.y + y,\n      z: this.z,\n    });\n  }\n\n  addZ(z: number): Vector3 {\n    return new Vector3({\n      x: this.x,\n      y: this.y,\n      z: this.z + z,\n    });\n  }\n\n  subtractX(x: number): Vector3 {\n    return new Vector3({\n      x: this.x - x,\n      y: this.y,\n      z: this.z,\n    });\n  }\n\n  subtractY(y: number): Vector3 {\n    return new Vector3({\n      x: this.x,\n      y: this.y - y,\n      z: this.z,\n    });\n  }\n\n  subtractZ(z: number): Vector3 {\n    return new Vector3({\n      x: this.x,\n      y: this.y,\n      z: this.z - z,\n    });\n  }\n\n  // clampY(low: number, high: number): Vector3 {\n  //   let newY = this.y;\n\n  //   if (newY < low) {\n  //     newY = low;\n  //   }\n  //   if (newY > high) {\n  //     newY = high;\n  //   }\n\n  //   return new Vector3({\n  //     x: this.x,\n  //     y: newY,\n  //   });\n  // }\n\n  scale(about: IVector3, amount: IVector3): Vector3 {\n    return new Vector3({\n      x: (this.x - about.x) * amount.x + about.x,\n      y: (this.y - about.y) * amount.y + about.y,\n      z: (this.z - about.z) * amount.z + about.z,\n    });\n  }\n\n  // rotate(origin: Vector3, angle: number): Vector3 {\n  //   angle = angle / (180 / Math.PI);\n\n  //   return new Vector3({\n  //     x:\n  //       Math.cos(angle) * (this.x - origin.x) -\n  //       Math.sin(angle) * (this.y - origin.y) +\n  //       origin.x,\n  //     y:\n  //       Math.sin(angle) * (this.x - origin.x) +\n  //       Math.cos(angle) * (this.y - origin.y) +\n  //       origin.y,\n  //   });\n  // }\n\n  equals(other: IVector3 | undefined | null): boolean {\n    if (other === undefined || other === null) {\n      return false;\n    }\n\n    return (\n      Math.abs(this.x - other.x) < EPSILON &&\n      Math.abs(this.y - other.y) < EPSILON &&\n      Math.abs(this.z - other.z) < EPSILON\n    );\n  }\n\n  multiply(other: IVector3 | number): Vector3 {\n    if (typeof other === 'number') {\n      return new Vector3({\n        x: this.x * other,\n        y: this.y * other,\n        z: this.z * other,\n      });\n    } else {\n      return new Vector3({\n        x: this.x * other.x,\n        y: this.y * other.y,\n        z: this.z * other.z,\n      });\n    }\n  }\n\n  divide(other: IVector3 | number): Vector3 {\n    if (typeof other === 'number') {\n      return new Vector3({\n        x: this.x / other,\n        y: this.y / other,\n        z: this.z / other,\n      });\n    } else {\n      return new Vector3({\n        x: this.x / other.x,\n        y: this.y / other.y,\n        z: this.z / other.z,\n      });\n    }\n  }\n\n  toJSON(): any {\n    return {\n      __type: 'Vector3',\n      x: this.x,\n      y: this.y,\n      z: this.z,\n    };\n  }\n\n  // transform(trans: Vector3, scale: number): Vector3 {\n  //   return new Vector3({\n  //     x: Math.floor((this.x - trans.x) * scale),\n  //     y: Math.floor((this.y - trans.y) * scale),\n  //   });\n  // }\n\n  // normalize(): Vector3 {\n  //   if (this.x === 0 && this.y === 0) {\n  //     return this;\n  //   }\n\n  //   const length = Math.sqrt(this.x * this.x + this.y * this.y);\n\n  //   return new Vector3({\n  //     x: this.x / length,\n  //     y: this.y / length,\n  //   });\n  // }\n\n  pairXY(): Vector2 {\n    return new Vector2({\n      x: this.x,\n      y: this.y,\n    });\n  }\n\n  withX(newX: number): Vector3 {\n    return new Vector3({\n      x: newX,\n      y: this.y,\n      z: this.z,\n    });\n  }\n\n  withY(newY: number): Vector3 {\n    return new Vector3({\n      x: this.x,\n      y: newY,\n      z: this.z,\n    });\n  }\n\n  withZ(newZ: number): Vector3 {\n    return new Vector3({\n      x: this.x,\n      y: this.y,\n      z: newZ,\n    });\n  }\n\n  // invertX(): Vector3 {\n  //   return new Vector3({\n  //     x: -this.x,\n  //     y: this.y,\n  //   });\n  // }\n\n  // lerp(other: Vector3, t: number): Vector3 {\n  //   if (t > 1 || t < 0) {\n  //     console.error('Lerp t must be between 0 and 1.');\n  //   }\n  //   if (t === 0) return this;\n  //   if (t === 1) return other;\n\n  //   return this.scale({ x: 0, y: 0 }, { x: 1 - t, y: 1 - t }).add(\n  //     other.scale({ x: 0, y: 0 }, { x: t, y: t })\n  //   );\n  // }\n\n  // lerp2D(other: Vector3, tx: number, ty: number): Vector3 {\n  //   if (tx > 1 || tx < 0 || ty > 1 || ty < 0) {\n  //     console.error('Lerp t must be between 0 and 1.');\n  //   }\n  //   return this.scale({ x: 0, y: 0 }, { x: 1 - tx, y: 1 - ty }).add(\n  //     other.scale({ x: 0, y: 0 }, { x: tx, y: ty })\n  //   );\n  // }\n\n  // coserp(other: Vector3, t: number): Vector3 {\n  //   t = 0.5 * (1 + Math.cos(2 * t * Math.PI));\n\n  //   return this.lerp(other, t);\n  // }\n\n  static Deserialize(obj: any): Vector3 | null {\n    if (\n      !obj ||\n      !obj.hasOwnProperty('x') ||\n      !obj.hasOwnProperty('y') ||\n      !obj.hasOwnProperty('z')\n    ) {\n      console.error('Failed deserializing vector3');\n      return null;\n    }\n\n    return new Vector3({\n      x: obj.x,\n      y: obj.y,\n      z: obj.z,\n    });\n  }\n\n  static Serialize(obj: IVector3): string {\n    return JSON.stringify(this.SerializeToObject(obj));\n  }\n\n  static SerializeToObject(obj: IVector3): object {\n    return { x: obj.x, y: obj.y, z: obj.z };\n  }\n}\n","import { HashMap } from '../../../lib/util/data_structures/hash';\nimport { Vector2 } from '../../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../../lib/util/geometry/vector3';\nimport { squirrel3 } from '../../../lib/util/random';\nimport {\n  randomDice,\n  randomSwitch,\n  randomUniform,\n  randomValue,\n} from '../../../lib/util/randomHelpers';\n\ntype NodeContentsFactoryConfig = {};\n\nexport interface NodeContents {\n  lines: NodeContentsLine[];\n\n  condition?: NodeContentsCondition;\n}\n\nexport interface NodeContentsCondition {\n  type: 'SPEND';\n  attribute: Attribute;\n  amount: number;\n}\n\nexport interface NodeContentsLine {\n  amount: number;\n  attribute: Attribute;\n  modifier: Modifier;\n}\n\nexport enum Attribute {\n  RED0 = 'RED0',\n  RED1 = 'RED1',\n  RED2 = 'RED2',\n  DEL0 = 'DEL0',\n  DEL1 = 'DEL1',\n  DEL2 = 'DEL2',\n}\n\nexport enum Modifier {\n  FLAT = 'FLAT',\n  INCREASED = 'INCREASED',\n}\n\nconst WEIGHTS = {\n  // for any single node, what is in it\n  DECISION_0: {\n    EMPTY: 150,\n    NO_SPEND: 100,\n    SPEND: 0,\n  },\n  // how many different attributes are in the non-spend section\n  DECISION_1: {\n    SINGLE: 500,\n    DOUBLE: 0,\n  },\n  // if we are doing a single attribute, what attribute is it going to be\n  SINGLE_COLORS: {\n    [Attribute.RED0]: 100,\n    [Attribute.RED1]: 100,\n    [Attribute.RED2]: 100,\n    [Attribute.DEL0]: 10,\n    [Attribute.DEL1]: 10,\n    [Attribute.DEL2]: 10,\n  },\n  // if we are doing a single attribute, what modifier is it going to be\n  SINGLE_MODIFIERS: {\n    [Modifier.FLAT]: 100,\n    [Modifier.INCREASED]: 75,\n  },\n};\n\nexport class NodeContentsFactory {\n  public config: NodeContentsFactoryConfig;\n\n  private clusterCenterData: HashMap<Vector3, any>;\n\n  constructor(config: NodeContentsFactoryConfig) {\n    this.config = config;\n    this.clusterCenterData = new HashMap();\n  }\n\n  private createSingle(args: { randInt: number }): NodeContentsLine {\n    const attribute = randomValue<typeof Attribute>({\n      randInt: args.randInt,\n      weights: WEIGHTS.SINGLE_COLORS,\n    });\n\n    const modifier = randomValue<typeof Modifier>({\n      randInt: squirrel3(args.randInt),\n      weights: WEIGHTS.SINGLE_MODIFIERS,\n    });\n\n    let amount = 0;\n    if (modifier === Modifier.FLAT) {\n      amount = randomDice({\n        randInt: squirrel3(args.randInt + 1),\n        formula: '2d6',\n        plus: 8,\n      });\n    } else {\n      amount = randomUniform({\n        randInt: squirrel3(args.randInt + 2),\n        min: 4,\n        max: 7,\n        increment: 0.5,\n        inclusive: true,\n      });\n    }\n\n    return {\n      attribute: Attribute[attribute],\n      amount,\n      modifier: Modifier[modifier],\n    };\n  }\n\n  private createNoSpend(args: { randInt: number }): NodeContents {\n    return randomSwitch<NodeContents>({\n      randInt: args.randInt,\n      weights: WEIGHTS.DECISION_1,\n      behaviors: {\n        SINGLE: (randInt) => {\n          return {\n            lines: [this.createSingle({ randInt })],\n          };\n        },\n        DOUBLE: (randInt) => {\n          return {\n            lines: [\n              this.createSingle({ randInt }),\n              this.createSingle({ randInt: squirrel3(randInt) }),\n            ],\n          };\n        },\n      },\n    });\n  }\n\n  /**\n   * Entry point.\n   * @param args\n   * @returns\n   */\n  public create(args: { seed: number; location: Vector3 }): NodeContents {\n    const { seed, location } = args;\n\n    // hardcode the starting point to be empty\n    if (location.equals(Vector3.Zero)) {\n      return {\n        lines: [],\n      };\n    }\n\n    // find the closest cluster center - a 3x3 hexagonal region\n    let clusterCenter: Vector3 | null;\n    let modulo3 = location.moduloPositive(3).pairXY();\n    if (\n      modulo3.equals(new Vector2(1, 2)) ||\n      modulo3.equals(new Vector2(2, 1))\n    ) {\n      // not close to any cluster centers\n      clusterCenter = location;\n    } else {\n      clusterCenter = location.divide(3).round().multiply(3);\n    }\n\n    // hardcode the starting cluster to be empty\n    if (clusterCenter.equals(Vector3.Zero)) {\n      return {\n        lines: [],\n      };\n    }\n\n    const result = randomSwitch<NodeContents>({\n      randInt: squirrel3(seed + Vector3ToSeed(clusterCenter)),\n      weights: WEIGHTS.DECISION_0,\n      behaviors: {\n        EMPTY: (randInt: number) => {\n          return {\n            lines: [],\n          };\n        },\n        NO_SPEND: (randInt: number) => {\n          return this.createNoSpend({ randInt });\n        },\n        SPEND: (randInt: number) => {\n          const base = this.createNoSpend({ randInt });\n\n          const attribute = randomValue<typeof Attribute>({\n            randInt,\n            weights: {\n              [Attribute.RED0]: 100,\n              [Attribute.RED1]: 100,\n              [Attribute.RED2]: 100,\n              [Attribute.DEL0]: 0,\n              [Attribute.DEL1]: 0,\n              [Attribute.DEL2]: 0,\n            },\n          });\n\n          return {\n            ...base,\n            condition: {\n              type: 'SPEND',\n              amount: 12,\n              attribute: Attribute[attribute],\n            },\n          };\n        },\n      },\n    });\n\n    return result;\n  }\n}\n\nexport function Vector3ToSeed(v: Vector3) {\n  return v.x + v.y + squirrel3(v.x + v.z);\n}\n","import { INTMAX32, squirrel3 } from './random';\n\nexport function randomSwitch<T>(args: {\n  randInt: number;\n  weights: { [k: string]: number };\n  behaviors: { [k: string]: (randInt: number) => T };\n}): T {\n  const { randInt, weights, behaviors } = args;\n  const p = randInt / INTMAX32;\n  const newRandInt = squirrel3(randInt);\n  const weightTotal = Object.values(weights).reduce((pv, cv) => pv + cv);\n  let unusedWeight = p * weightTotal;\n  for (const [key, weight] of Object.entries(weights)) {\n    if (unusedWeight <= weight) {\n      // use key\n      return behaviors[key](newRandInt);\n    } else {\n      unusedWeight -= weight;\n    }\n  }\n  throw Error();\n}\n\nexport function randomValue<T>(args: {\n  randInt: number;\n  weights: { [k in keyof T]: number };\n}): keyof T {\n  const { randInt, weights } = args;\n  const p = randInt / INTMAX32;\n  const weightTotal = (Object.values(weights) as number[]).reduce(\n    (pv, cv) => pv + cv\n  );\n  let unusedWeight = p * weightTotal;\n  for (const [key, weight] of Object.entries(weights) as [keyof T, number][]) {\n    if (unusedWeight <= weight) {\n      // use key\n      return key;\n    } else {\n      unusedWeight -= weight;\n    }\n  }\n  throw Error();\n}\n\nexport function randomUniform(args: {\n  randInt: number;\n  min: number;\n  max: number;\n  increment?: number;\n  inclusive?: boolean;\n}): number {\n  const { randInt, min, max, increment = 1, inclusive = true } = args;\n  const p = randInt / INTMAX32;\n  let numBuckets = Math.ceil((max - min) / increment);\n  if (min + increment * numBuckets === max && inclusive === true) {\n    numBuckets += 1;\n  }\n  const g = Math.floor(p * numBuckets);\n  return min + g * increment;\n}\n\nexport function randomDice(args: {\n  randInt: number;\n  formula: string;\n  plus?: number;\n}): number {\n  const { randInt, formula, plus = 0 } = args;\n  const numDice = parseInt(formula.split('d')[0]);\n  const numPips = parseInt(formula.split('d')[1]);\n  let val = 0;\n  for (let i = 0; i < numDice; i++) {\n    val += randomUniform({\n      randInt: squirrel3(randInt + i),\n      min: 1,\n      max: numPips,\n      inclusive: true,\n    });\n  }\n  return val + plus;\n}\n","import { interpolateColor } from '../../../lib/util/color';\nimport {\n  Attribute,\n  Modifier,\n  NodeContents,\n  NodeContentsCondition,\n  NodeContentsLine,\n} from './NodeContentsFactory';\n\nexport const AttributeSymbolMap = {\n  [Attribute.RED0]: '🔴',\n  [Attribute.RED1]: '🟢',\n  [Attribute.RED2]: '🔵',\n  [Attribute.DEL0]: '⚔️',\n  [Attribute.DEL1]: '🛡',\n  [Attribute.DEL2]: '✨',\n};\n\n// Use hue and saturation from this map; HSV value is determined by node allocation state\n// Lch is actually better: see https://en.wikipedia.org/wiki/HCL_color_space\nexport const AttributeColorMap: { [k in Attribute | '']: number } = {\n  '': 0x888888,\n  [Attribute.RED0]: 0xff0000,\n  [Attribute.RED1]: 0x00ff00,\n  [Attribute.RED2]: 0x0000ff,\n  [Attribute.DEL0]: 0x5a8f88,\n  [Attribute.DEL1]: 0xffc400,\n  [Attribute.DEL2]: 0xffff43,\n};\n\nexport const AttributeDescriptionMap = {\n  [Attribute.RED0]: 'Red',\n  [Attribute.RED1]: 'Green',\n  [Attribute.RED2]: 'Blue',\n  [Attribute.DEL0]: 'Offense',\n  [Attribute.DEL1]: 'Defense',\n  [Attribute.DEL2]: 'Magic',\n};\n\nexport const AttributeDescriptionReverseMap: { [k: string]: Attribute } = {\n  Red: Attribute.RED0,\n  Green: Attribute.RED1,\n  Blue: Attribute.RED2,\n  Offense: Attribute.DEL0,\n  Defense: Attribute.DEL1,\n  Magic: Attribute.DEL2,\n};\n\nexport const ModifierSymbolMap = {\n  [Modifier.FLAT]: '+',\n  [Modifier.INCREASED]: '%',\n};\nexport const ModifierDescriptionMap = {\n  [Modifier.FLAT]: 'flat',\n  [Modifier.INCREASED]: 'increased',\n};\nexport const ModifierDescriptionReverseMap: { [k: string]: Modifier } = {\n  flat: Modifier.FLAT,\n  increased: Modifier.INCREASED,\n};\n\nexport function nodeContentsLineToString(line: NodeContentsLine): string {\n  const desc = AttributeDescriptionMap[line.attribute];\n  const symbol = AttributeSymbolMap[line.attribute];\n  if (line.modifier === Modifier.FLAT) {\n    return `+${line.amount} ${symbol} (${desc})`;\n  } else {\n    return `${line.amount}% increased ${symbol} (${desc})`;\n  }\n}\n\nexport function nodeContentsConditionToString(\n  condition: NodeContentsCondition\n): string {\n  return `SPEND: ${condition.amount} ${\n    AttributeDescriptionMap[condition.attribute]\n  }`;\n}\n\nexport function nodeContentsToColor(nodeContents: NodeContents): number {\n  if (nodeContents.lines.length === 0) {\n    return AttributeColorMap[''];\n  }\n  const color0 = AttributeColorMap[nodeContents.lines[0].attribute];\n  if (nodeContents.lines.length === 1) {\n    return color0;\n  }\n  const color1 = AttributeColorMap[nodeContents.lines[1].attribute];\n  // return 50% of the way in between the 2 colors\n  return interpolateColor({ color: color0, opacity: 0.5, background: color1 });\n}\n","import * as Pixi from 'pixi.js';\nimport COLORS from '../colors';\n\nexport interface SimpleTextureSet {\n  circle: Pixi.Texture;\n  dot: Pixi.Texture;\n  rect: Pixi.Texture;\n  square: Pixi.Texture;\n  verticalLine: Pixi.Texture;\n}\n\nexport const pixiUiScale: 'small' | 'medium' | 'large' = 'small';\n\nexport function generateSimpleTextures(\n  renderer: Pixi.Renderer,\n  uiScale: 'small' | 'medium' | 'large' = pixiUiScale\n): SimpleTextureSet {\n  let circle = new Pixi.Graphics();\n  let diameter = uiScale === 'small' ? 12 : uiScale === 'medium' ? 16 : 24;\n  circle.beginFill(COLORS.white);\n  circle.drawCircle(0, 0, diameter / 2);\n  // circle.drawCircle(0, 0, 6);\n  // circle.pivot = PixiPointFrom(Vector2.Zero);\n\n  let rect = new Pixi.Graphics();\n  let height = uiScale === 'small' ? 14 : uiScale === 'medium' ? 18 : 30;\n  {\n    let width = uiScale === 'small' ? 4 : uiScale === 'medium' ? 5 : 8;\n    rect.beginFill(COLORS.white);\n    // rect.drawRect(-6, -10, 12, 20);\n    rect.drawRect(0, 0, width, height);\n    // rect.pivot = PixiPointFrom(Vector2.Zero);\n  }\n\n  let verticalLine = new Pixi.Graphics();\n  {\n    let thickness = uiScale === 'small' ? 2 : uiScale === 'medium' ? 3 : 4;\n    let width = uiScale === 'small' || uiScale === 'medium' ? 6 : 8;\n\n    verticalLine.beginFill(COLORS.white);\n    verticalLine.drawRect(0, 0, thickness, height);\n    verticalLine.drawRect(0, 0, width, thickness);\n    verticalLine.drawRect(0, height - thickness, width, thickness);\n  }\n\n  let square = new Pixi.Graphics();\n  square.beginFill(COLORS.white);\n  square.drawRect(0, 0, diameter, diameter);\n  // square.pivot = PixiPointFrom(Vector2.Zero);\n\n  let dot = new Pixi.Graphics();\n  dot.beginFill(COLORS.white);\n  dot.drawCircle(0, 0, diameter / 4);\n\n  return {\n    circle: renderer.generateTexture(circle, Pixi.SCALE_MODES.LINEAR, 1),\n    rect: renderer.generateTexture(rect, Pixi.SCALE_MODES.LINEAR, 1),\n    square: renderer.generateTexture(square, Pixi.SCALE_MODES.LINEAR, 1),\n    verticalLine: renderer.generateTexture(\n      verticalLine,\n      Pixi.SCALE_MODES.LINEAR,\n      1\n    ),\n    dot: renderer.generateTexture(dot, Pixi.SCALE_MODES.LINEAR, 1),\n  };\n}\n","import * as Pixi from 'pixi.js';\nimport chroma from 'chroma-js';\nimport { GameState } from '../../data/GameState';\nimport {\n  LockStatus,\n  NodeReachableStatus,\n  NodeTakenStatus,\n  NodeVisibleStatus,\n} from '../../data/NodeStatus';\nimport { StrategicSearchState } from '../../data/PlayerUIState';\nimport { NodeContents } from '../../game/worldGen/nodeContents/NodeContentsFactory';\nimport {\n  AttributeDescriptionReverseMap,\n  ModifierDescriptionReverseMap,\n  nodeContentsToColor,\n} from '../../game/worldGen/nodeContents/NodeContentsRendering';\nimport { PixiPointFrom } from '../../lib/pixi/pixify';\nimport { KeyedHashMap } from '../../lib/util/data_structures/hash';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { Const, extractDeps, extractAccessPaths } from '../../lib/util/misc';\nimport { interpolateColor } from '../../lib/util/color';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport COLORS from '../colors';\nimport { pixiUiScale, SimpleTextureSet } from '../textures/SimpleTextures';\nimport { engageLifecycle, LifecycleHandlerBase } from './LifecycleHandler';\nimport { PIXI_TICKS_PER_SECOND } from '../PixiReactBridge';\n\ntype Props = {\n  delta: number;\n  args: {\n    position: Vector2;\n    textures: SimpleTextureSet;\n  };\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n  appSize: Vector2;\n  gameState: StrategicHexGridSubState;\n};\n\n/**\n * The subset of the game state that is relevant to game area components.\n */\nexport function extractStrategicHexGridSubState(gameState: Const<GameState>) {\n  return {\n    playerUI: {\n      virtualGridLocation: gameState.playerUI.virtualGridLocation,\n      cursoredNodeLocation: gameState.playerUI.cursoredNodeLocation,\n      strategicSearch: gameState.playerUI.strategicSearch,\n    },\n    playerSave: {\n      allocationStatusMap: gameState.playerSave.allocationStatusMap,\n    },\n    computed: {\n      fogOfWarStatusMap: gameState.computed.fogOfWarStatusMap,\n      reachableStatusMap: gameState.computed.reachableStatusMap,\n      lockStatusMap: gameState.computed.lockStatusMap,\n    },\n    worldGen: {\n      nodeContentsMap: gameState.worldGen.nodeContentsMap,\n      lockMap: gameState.worldGen.lockMap,\n    },\n  };\n}\nexport type StrategicHexGridSubState = ReturnType<\n  typeof extractStrategicHexGridSubState\n>;\nexport const depsStrategicHexGridSubState = extractDeps(\n  extractStrategicHexGridSubState\n);\n\ntype State = {\n  phases: { [x: number]: number };\n};\n\ntype HexGridAnimation = {\n  max: number;\n  min: number;\n  periodSecs: number;\n  mode: 'start-max ease-in-out' | 'start-max ease-in';\n  phase: number;\n};\n\ntype HexGridData = {\n  animation: HexGridAnimation | null;\n  cursorAnimation: HexGridAnimation | null;\n  node: Pixi.Sprite;\n  cursor: Pixi.Sprite | null;\n};\n\n// sqrt(3)/2 approximation - see hexGridPx\n// const strategicHexGridPx = new Vector2(30, 26);\nconst strategicHexGridPx =\n  pixiUiScale === 'small'\n    ? new Vector2(22, 19)\n    : pixiUiScale === 'medium'\n    ? new Vector2(30, 26)\n    : new Vector2(45, 39);\n// // const strategicHexGridPx = new Vector2(15, 13);\n\n// TODO(bowei): compute this to be big enough\n// const strategicHexGridDims = new Vector2(35, 20);\n// const strategicHexGridDims = new Vector2(6, 12);\nconst strategicHexGridDims = new Vector2(48, 24);\n\nclass StrategicHexGridComponent extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: Const<State>;\n  private graphics: Pixi.Sprite;\n  private hexGrid: KeyedHashMap<Vector2, HexGridData> = new KeyedHashMap();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = this.useState(this, {\n      phases: {},\n    }).state;\n    this.updateSelf(props);\n    this.container = new Pixi.Container();\n\n    // test graphics\n    this.graphics = new Pixi.Sprite();\n    this.graphics.texture = props.args.textures.circle;\n    this.graphics.tint = COLORS.borderBlack;\n    this.graphics.visible = false;\n    this.container.addChild(this.graphics);\n\n    // populate a grid\n    // TODO(bowei): unhardcode\n    for (let j = -strategicHexGridDims.y; j <= strategicHexGridDims.y; j++) {\n      for (\n        let i = -strategicHexGridDims.x + Math.floor(j / 2);\n        i <= strategicHexGridDims.x + Math.floor(j / 2);\n        i++\n      ) {\n        const graphics = new Pixi.Sprite();\n        graphics.texture = props.args.textures.circle;\n        graphics.tint = COLORS.nodePink;\n        // graphics.visible = false;\n        // if ((i == 0 && j == 0) || (i == 5 && j == 5)) {\n        //   // graphics.visible = true;\n        //   graphics.tint = COLORS.borderBlack;\n        // }\n        graphics.position = PixiPointFrom(\n          props.appSize\n            .divide(2)\n            .add(\n              new Vector2(\n                strategicHexGridPx.x * i - (strategicHexGridPx.x / 2) * j,\n                -strategicHexGridPx.y * j\n              )\n            )\n        );\n        this.container.addChild(graphics);\n        this.hexGrid.put(new Vector2(i, j), {\n          node: graphics,\n          animation: null,\n          cursor: null,\n          cursorAnimation: null,\n        });\n      }\n    }\n  }\n\n  /**\n   * Progress animation state (which needs to happen even if non-delta props do not change)\n   * @param props\n   */\n  protected updateSelf(props: Props) {\n    // const { delta } = props;\n    const delta = 1; // ignore lags and freezes because color is not required to be continuous\n\n    if (\n      props.gameState.playerUI.strategicSearch !==\n      this._staleProps.gameState.playerUI.strategicSearch\n    ) {\n      // reset phases\n      this.stateUpdaters!.phases.enqueueUpdate((prev) => {\n        const result = { ...prev };\n        for (let keyString of Object.keys(result)) {\n          let keyNumber = parseInt(keyString);\n          result[keyNumber] = 0;\n        }\n        return result;\n      });\n    }\n\n    for (let data of this.hexGrid.values()) {\n      const { node: graphics, animation } = data;\n      if (animation) {\n        // the last frame was rendered at this phase in the animation\n        let phase =\n          this.state.phases[animation.periodSecs] || animation.phase || 0;\n\n        // increment it. phase of 1 == a full period == animation.period secs\n        let newPhase =\n          (phase +\n            (delta * (1 / PIXI_TICKS_PER_SECOND) * 1) / animation.periodSecs) %\n          1;\n\n        // animation starts with bezierX == 0, goes up to 1, then back down\n        let bezierX = 1 - Math.abs(newPhase * 2 - 1);\n        /* NOTE(bowei): specifically ease-in-out. we want to draw attention both to the lit-up state and to the base state. */\n        // ease-in\n        // let bezierY = ( bezierX * bezierX); // we use the shitty approximation cubicBezier(0.42,0,1,1) == x ** 2.\n        // let bezierY = (bezierX * bezierX) * (1.5 - 0.5 * bezierX); // adjustment to decrease the slope at x=1 from 2 to 1.5\n        // ease-in-out\n        let bezierY =\n          bezierX < 0.5\n            ? 2 * (bezierX * bezierX)\n            : 1 - 2 * (1 - bezierX) * (1 - bezierX);\n\n        // calculate the proper tint now\n        let tintProp = 1 - bezierY; // animation should start with tint == 1, go back down to 0, go back up\n\n        // set the tint\n        // tintProp = tintProp * .75 + 0.25; // minimum opacity = 0.25\n        graphics.tint = interpolateColor({\n          target: animation.max,\n          base: animation.min,\n          proportion: tintProp,\n        });\n        // console.log({ delta, phase, newPhase, bezierX, tintProp, tint: graphics.tint });\n\n        // update phase on animation object\n        animation.phase = newPhase;\n\n        // update it in state\n        this.stateUpdaters!.phases.enqueueUpdate((prev) => {\n          const result = { ...prev };\n          result[animation.periodSecs] = newPhase;\n          return result;\n        });\n      }\n\n      if (data.cursor && data.cursorAnimation) {\n        let animation = data.cursorAnimation;\n\n        // the last frame was rendered at this phase in the animation\n        let phase = animation.phase || 0;\n\n        // increment it. phase of 1 == a full period == animation.period secs\n        let newPhase =\n          (phase +\n            (delta * (1 / PIXI_TICKS_PER_SECOND) * 1) / animation.periodSecs) %\n          1;\n\n        // animation starts with bezierX == 0, goes up to 1, then back down\n        let bezierX = 1 - Math.abs(newPhase * 2 - 1);\n        /* NOTE(bowei): specifically ease-in-out. we want to draw attention both to the lit-up state and to the base state. */\n        // ease-in\n        // let bezierY = ( bezierX * bezierX); // we use the shitty approximation cubicBezier(0.42,0,1,1) == x ** 2.\n        // let bezierY = (bezierX * bezierX) * (1.5 - 0.5 * bezierX); // adjustment to decrease the slope at x=1 from 2 to 1.5\n        // ease-in-out\n        let bezierY = bezierX * bezierX;\n\n        // calculate the proper tint now\n        let tintProp = 1 - bezierY; // animation should start with tint == 1, go back down to 0, go back up\n\n        // set the tint\n        data.cursor.tint = interpolateColor({\n          target: animation.max,\n          base: animation.min,\n          proportion: tintProp,\n        });\n\n        // update phase on animation object\n        animation.phase = newPhase;\n      }\n    }\n  }\n\n  protected renderSelf(props: Props) {\n    const { gameState } = props;\n    this.container.position = PixiPointFrom(props.args.position);\n    this.graphics.position = PixiPointFrom(props.appSize.divide(2));\n\n    for (let [v, data] of this.hexGrid.entries()) {\n      const { node: graphics } = data;\n\n      const basePosition = props.appSize\n        .divide(2)\n        .add(\n          new Vector2(\n            strategicHexGridPx.x * v.x - (strategicHexGridPx.x / 2) * v.y,\n            -strategicHexGridPx.y * v.y\n          )\n        );\n      // graphics.position = PixiPointFrom(basePosition);\n      let baseTint: number = 0x000000;\n\n      const nodeLocation = gameState.playerUI.virtualGridLocation.add(\n        Vector3.FromVector2(v)\n      );\n      const nodeVisibleStatus =\n        gameState.computed.fogOfWarStatusMap?.get(nodeLocation) ||\n        NodeVisibleStatus.false;\n      const nodeTakenStatus =\n        gameState.playerSave.allocationStatusMap.get(nodeLocation) ||\n        NodeTakenStatus.false;\n      const nodeReachableStatus =\n        gameState.computed.reachableStatusMap?.get(nodeLocation) ||\n        NodeReachableStatus.false;\n      const lockData = gameState.worldGen.lockMap.get(nodeLocation);\n      const lockStatus = gameState.computed.lockStatusMap?.get(nodeLocation);\n\n      let visible: boolean = true;\n      if (nodeTakenStatus.taken) {\n        graphics.visible = true;\n        baseTint = COLORS.borderBlack;\n        // graphics.tint = COLORS.borderBlack;\n      } else if (nodeReachableStatus.reachable) {\n        // only recolor if it is not locked\n        if (!lockData || lockStatus === LockStatus.OPEN) {\n          graphics.visible = true;\n          baseTint = COLORS.nodeLavender;\n          // graphics.tint = COLORS.nodeLavender;\n        } else {\n          // use the ordinary visible-but-unreachable coloring\n          graphics.visible = true;\n          baseTint = COLORS.nodePink;\n          // graphics.tint = COLORS.nodePink;\n        }\n      } else if (nodeVisibleStatus.visible) {\n        graphics.visible = true;\n        baseTint = COLORS.nodePink;\n        // graphics.tint = COLORS.nodePink;\n      } else {\n        // hidden\n        graphics.visible = true;\n        visible = false;\n        baseTint = COLORS.nodePink;\n      }\n\n      // add onclick so that clicking on the node causes selected node tab to update\n      if (graphics.visible) {\n        graphics.interactive = true;\n        graphics.buttonMode = true;\n        graphics.removeAllListeners(); // NOTE(bowei): there's a double render which would otherwise attach 2 event handlers.\n        graphics.on('pointerdown', () => {\n          console.log('pointerdown in strategic hex grid pixi', {\n            nodeLocation,\n          });\n          props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate((prev) => {\n            console.log('enqueue update in pointerdown in strategic hex grid', {\n              prev,\n              nodeLocation,\n            });\n            if (prev && prev.equals(nodeLocation)) {\n              return null;\n            }\n            return nodeLocation;\n          });\n        });\n      } else {\n        graphics.interactive = false;\n        graphics.buttonMode = false;\n      }\n\n      // graphics.anchor = PixiPointFrom(Vector2.Zero);\n      // graphics.pivot = PixiPointFrom(Vector2.Zero);\n      if (!nodeVisibleStatus.visible) {\n        graphics.texture = props.args.textures.dot;\n        graphics.position = PixiPointFrom(basePosition);\n        graphics.position.x -= props.args.textures.dot.width / 2;\n        graphics.position.y -= props.args.textures.dot.height / 2;\n      } else if (lockData && lockStatus !== LockStatus.OPEN) {\n        graphics.texture = props.args.textures.rect;\n        graphics.position = PixiPointFrom(basePosition);\n        graphics.position.x -= props.args.textures.rect.width / 2;\n        graphics.position.y -= props.args.textures.rect.height / 2;\n        // graphics.tint = COLORS.borderBlack;\n      } else {\n        graphics.texture = props.args.textures.circle;\n        graphics.position = PixiPointFrom(basePosition);\n        graphics.position.x -= props.args.textures.circle.width / 2;\n        graphics.position.y -= props.args.textures.circle.height / 2;\n      }\n\n      const nodeContents = gameState.worldGen.nodeContentsMap.get(nodeLocation);\n\n      // give color (hue, saturation) to the node according to its contents, but keep the value (grayness) from tint\n      if (visible) {\n        if (\n          gameState.playerUI.strategicSearch.colors.enabled === 'Yes' ||\n          (gameState.playerUI.strategicSearch.colors.enabled ===\n            'Only unallocated' &&\n            !nodeTakenStatus.taken)\n        ) {\n          const nodeContentsLch = chroma(\n            nodeContentsToColor(nodeContents)\n          ).lch();\n          const originalLch = chroma(baseTint).lch();\n          baseTint = chroma\n            .lch(\n              originalLch[0],\n              // nodeContentsLch[1],\n              0.5 * (originalLch[1] + nodeContentsLch[1]),\n              nodeContentsLch[2]\n            )\n            .num();\n        }\n      }\n\n      const matched = matchStrategicSearch({\n        nodeContents,\n        query: gameState.playerUI.strategicSearch,\n      });\n\n      // If was selected by the highlight search, make it shiny\n      if (matched && visible) {\n        const animation: HexGridAnimation = {\n          // max: addColor(COLORS.nodeBlue, graphics.tint),\n          max: interpolateColor({\n            color: baseTint,\n            opacity: 0.75,\n            background: COLORS.white,\n          }),\n          // max: graphics.tint === COLORS.borderBlack ? COLORS.nodeLavender : COLORS.nodeBlue,\n          // max: COLORS.nodeBlue,\n          // max: graphics.tint,\n          min: baseTint,\n          periodSecs: 2,\n          mode: 'start-max ease-in-out',\n          phase: data.animation ? data.animation.phase : 0,\n        };\n        // TODO(bowei): properly encapsulate this in like a useEffect/useMemo to detect changes and only trigger in that case\n        // if (gameState.playerUI.strategicSearch === this._staleProps.gameState.playerUI.strategicSearch) {\n        //   animation.phase = 0;\n        // }\n        data.animation = animation;\n      } else {\n        graphics.tint = baseTint;\n        data.animation = null;\n      }\n\n      // put a cursor near the node if it has been selected\n      if (props.gameState.playerUI.cursoredNodeLocation?.equals(nodeLocation)) {\n        if (!data.cursor) {\n          const cursor = new Pixi.Sprite();\n          cursor.texture = props.args.textures.verticalLine;\n          // cursor.tint = graphics.tint;\n          // cursor.tint = addColor(COLORS.nodeBlue, graphics.tint);\n          cursor.tint = COLORS.borderWhite;\n          this.container.addChild(cursor);\n          data.cursor = cursor;\n\n          data.cursorAnimation = {\n            max: COLORS.borderWhite,\n            min: interpolateColor({\n              color: COLORS.borderWhite,\n              opacity: 0.25,\n              background: COLORS.backgroundBlue,\n            }),\n            periodSecs: 1,\n            mode: 'start-max ease-in',\n            phase: 0,\n          };\n        }\n      } else {\n        if (data.cursor) {\n          this.container.removeChild(data.cursor);\n        }\n        data.cursor = null;\n      }\n      if (data.cursor) {\n        data.cursor.position = PixiPointFrom(basePosition);\n        // data.cursor.position.x -= props.args.textures.verticalLine.width / 2;\n        data.cursor.position.x -= strategicHexGridPx.x / 2; // - props.args.textures.verticalLine.width / 3;\n        data.cursor.position.x += props.args.textures.verticalLine.width / 3;\n        // data.cursor.position.x += props.args.textures.verticalLine.width / 2;\n        // data.cursor.position.x += props.args.textures.circle.width / 2;\n        data.cursor.position.y -= props.args.textures.verticalLine.height / 2;\n      }\n    }\n  }\n\n  /**\n   * @param staleProps\n   * @param staleState\n   * @param props\n   * @param state\n   * @returns false if staleProps == nextProps and staleState == state (which will cause the component to be memoized)\n   *          true if the props or state differ anywhere\n   */\n  protected shouldUpdate(\n    staleProps: Props,\n    staleState: Const<State>,\n    props: Props,\n    state: Const<State>\n  ): boolean {\n    for (let key of Object.keys(staleProps) as (keyof Props)[]) {\n      if (key === 'delta' || key === 'args' || key === 'updaters') {\n        // if (key === 'args' || key === 'delta') {\n        continue;\n      }\n      if (key === 'gameState') {\n        const staleGameState = staleProps[key];\n        const gameState = props[key];\n        const staleDeps = depsStrategicHexGridSubState(staleGameState);\n        const deps = depsStrategicHexGridSubState(gameState);\n        for (let i = 0; i < staleDeps.length; i++) {\n          if (deps[i] !== staleDeps[i]) {\n            console.log(\n              `hexgrid substate differed in ${i} : ${extractAccessPaths(\n                extractStrategicHexGridSubState\n              )[i].join('.')}, returning true for shouldupdate`\n            );\n            return true;\n          }\n        }\n        continue;\n      }\n      if (staleProps[key] !== props[key]) {\n        console.log(`hexgrid shouldUpdate differed in ${key}, returning true`);\n        return true;\n      }\n    }\n    // for (let key of Object.keys(staleState) as (keyof State)[]) {\n    //   // check if state changed...?\n    // }\n    return false;\n  }\n}\n\nconst wrapped = engageLifecycle(StrategicHexGridComponent);\n// eslint-disable-next-line\ntype wrapped = StrategicHexGridComponent;\nexport { wrapped as StrategicHexGridComponent };\nexport type { Props as StrategicHexGridComponentProps };\n\nexport function matchStrategicSearch(args: {\n  nodeContents: NodeContents;\n  query: StrategicSearchState;\n}): boolean {\n  const { nodeContents, query } = args;\n\n  // missing query! return no matches\n  if (!query) {\n    return false;\n  }\n\n  // first separate out the terms\n  const highlight1 = query.highlight1.value;\n  const terms = highlight1\n    .split(' ')\n    .filter((it) => !!it)\n    .map((wrappedTerm) => wrappedTerm.slice(1, wrappedTerm.length - 1));\n\n  // missing query! return no matches\n  if (terms.length === 0) {\n    return false;\n  }\n\n  // for ALL of the terms, make sure node contents matches\n  let unmatchedTerm: string | null = null;\n  // console.log({ terms });\n  for (let term of terms) {\n    // is the term a attribute or modifier?\n    const maybeAttribute = AttributeDescriptionReverseMap[term];\n    const maybeModifier = ModifierDescriptionReverseMap[term];\n    if (!!maybeAttribute) {\n      if (\n        nodeContents.lines?.[0]?.attribute === maybeAttribute ||\n        nodeContents.lines?.[1]?.attribute === maybeAttribute\n      ) {\n        // console.log(\"matched by attribute\" , maybeAttribute);\n      } else {\n        unmatchedTerm = maybeAttribute;\n        break;\n      }\n    } else if (!!maybeModifier) {\n      if (\n        nodeContents.lines?.[0]?.modifier === maybeModifier ||\n        nodeContents.lines?.[1]?.modifier === maybeModifier\n      ) {\n        // console.log(\"matched by modifier\" , maybeModifier);\n      } else {\n        unmatchedTerm = maybeModifier;\n        break;\n      }\n    } else if (term === '*') {\n      if (\n        nodeContents.lines?.[0]?.attribute ||\n        nodeContents.lines?.[1]?.attribute\n      ) {\n        // console.log(\"matched by wild card attribute\");\n      } else {\n        unmatchedTerm = term;\n        break;\n      }\n    } else {\n      console.error('unparsed term: ', term);\n      return false;\n    }\n  }\n  if (unmatchedTerm) {\n    return false; // match failed\n  }\n  return true;\n}\n","import * as Pixi from 'pixi.js';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { GameState } from '../../data/GameState';\nimport {\n  generatePointNodeTexture,\n  PointNodeTextureSet,\n} from '../textures/PointNodeTexture';\nimport { Const } from '../../lib/util/misc';\nimport { Lazy } from '../../lib/util/lazy';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { engageLifecycle, LifecycleHandlerBase } from './LifecycleHandler';\nimport { FixedCameraStageComponent } from './FixedCameraStageComponent';\nimport { TooltipInfo } from './TooltipComponent';\nimport COLORS from '../colors';\nimport {\n  extractStrategicHexGridSubState,\n  StrategicHexGridComponent,\n  StrategicHexGridComponentProps,\n} from './StrategicHexGridComponent';\nimport {\n  generateSimpleTextures,\n  SimpleTextureSet,\n} from '../textures/SimpleTextures';\n\ntype State = {\n  pointNodeTexture: Lazy<PointNodeTextureSet>;\n  simpleTexture: Lazy<SimpleTextureSet>;\n  tick: number;\n  playerCurrentZ: number;\n  tooltip: TooltipInfo;\n};\n\ntype Props = {\n  args: {\n    renderer: Pixi.Renderer;\n    markForceUpdate: (childInstance: any) => void;\n  };\n  updaters: UpdaterGeneratorType2<GameState>;\n  delta: number;\n  gameState: Const<GameState>;\n  appSize: Vector2;\n};\n\nclass RootComponent2 extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: Const<State>;\n  protected stateUpdaters!: UpdaterGeneratorType2<State, State>;\n  protected fireStateUpdaters!: () => void;\n\n  /* children */\n  // Contains HUD, and other entities that don't move when game camera moves\n  private fixedCameraStage: FixedCameraStageComponent;\n  // Contains game entities that move when game camera pans/zooms. Highly encouraged to have further subdivions.\n  private actionStage: Pixi.Container;\n  // Contains a few entities that doesn't move when game camera moves, but located behind action stage entities, e.g. static backgrounds\n  private backdropStage: Pixi.Container;\n  // public keyboard: KeyboardState;\n  private strategicHexGrid: StrategicHexGridComponent;\n\n  private backdrop: Pixi.Graphics;\n\n  constructor(props: Props) {\n    super(props);\n    this.container = new Pixi.Container();\n    this.container.sortableChildren = true;\n\n    // Initialize state, and also set up state updaters & batched fire callback\n    this.state = this.useState<State, RootComponent2>(this, {\n      pointNodeTexture: new Lazy(() =>\n        generatePointNodeTexture(props.args.renderer)\n      ),\n      simpleTexture: new Lazy(() =>\n        generateSimpleTextures(props.args.renderer)\n      ),\n      tick: 0,\n      playerCurrentZ: 0,\n      tooltip: {\n        visible: false,\n        position: undefined,\n        text: '',\n      },\n    }).state;\n\n    const fixedCameraStagePropsFactory = (\n      props: Props,\n      state: Const<State>\n    ) => {\n      return {\n        args: {\n          renderer: props.args.renderer,\n          markForceUpdate: this.markForceUpdate,\n        },\n        delta: props.delta,\n        gameState: props.gameState,\n        appSize: props.appSize,\n        tick: state.tick,\n        tooltip: { ...state.tooltip },\n      };\n    };\n    this.fixedCameraStage = new FixedCameraStageComponent(\n      fixedCameraStagePropsFactory(props, this.state)\n    );\n    this.addChild({\n      childClass: FixedCameraStageComponent,\n      instance: this.fixedCameraStage,\n      propsFactory: fixedCameraStagePropsFactory,\n    });\n\n    this.actionStage = new Pixi.Sprite();\n    this.actionStage.zIndex = 0;\n    this.actionStage.sortableChildren = true;\n    this.container.addChild(this.actionStage);\n\n    const strategicHexGridPropsFactory = (\n      props: Props,\n      state: Const<State>\n    ): StrategicHexGridComponentProps => {\n      const { gameState } = props;\n      return {\n        delta: props.delta,\n        args: {\n          position: Vector2.Zero,\n          textures: state.simpleTexture.get(),\n        },\n        updaters: props.updaters,\n        appSize: props.appSize,\n        gameState: extractStrategicHexGridSubState(gameState),\n      };\n    };\n    this.strategicHexGrid = new StrategicHexGridComponent(\n      strategicHexGridPropsFactory(props, this.state)\n    );\n    this.addChild({\n      childClass: StrategicHexGridComponent,\n      instance: this.strategicHexGrid,\n      propsFactory: strategicHexGridPropsFactory,\n    });\n\n    this.backdropStage = new Pixi.Sprite();\n    this.backdropStage.zIndex = -1;\n    this.backdropStage.sortableChildren = true;\n    this.container.addChild(this.backdropStage);\n\n    this.backdrop = new Pixi.Graphics();\n    this.backdropStage.addChild(this.backdrop);\n    this.backdrop.beginFill(COLORS.backgroundBlue, 1);\n    // backdrop.alpha = 0.5; // if alpha == 0, Pixi does not register this as a hittable area\n    this.backdrop.interactive = true;\n    // backdrop.interactiveChildren = true; // not sure what this does\n    this.backdrop.drawRect(0, 0, props.appSize.x, props.appSize.y);\n  }\n\n  protected updateSelf(props: Props) {\n    this.stateUpdaters.tick.enqueueUpdate((prev) => prev + 1);\n  }\n\n  protected renderSelf(props: Props) {\n    this.backdrop.width = props.appSize.x;\n    this.backdrop.height = props.appSize.y;\n  }\n\n  protected didMount() {\n    // const { updaters } = this._staleProps;\n  }\n\n  protected didUpdate() {\n    // const { updaters } = this._staleProps;\n  }\n}\n\nconst wrapped = engageLifecycle(RootComponent2);\n// eslint-disable-next-line\ntype wrapped = RootComponent2;\nexport { wrapped as RootComponent };\nexport type { Props as RootComponentProps, State as RootComponentState };\n","import * as Pixi from 'pixi.js';\nimport COLORS from '../colors';\nimport { RenderedChunkConstants } from '../components/ChunkComponent';\n\nexport type PointNodeTextureSet = {\n  cropFraction: number;\n  texture: Pixi.Texture;\n}[];\n\nexport function generatePointNodeTexture(\n  renderer: Pixi.Renderer\n): PointNodeTextureSet {\n  // generate sprite textures for 0 to 100% vertical cropped in increments of 1/8\n  let textureSet: PointNodeTextureSet = [];\n  for (let i = 0; i <= 8; i++) {\n    const cropFraction = i / 8;\n    let g = new Pixi.Graphics();\n    g.beginFill(COLORS.white);\n    g.drawRoundedRect(\n      -RenderedChunkConstants.NODE_SIZE_PX / 2,\n      -RenderedChunkConstants.NODE_SIZE_PX / 2,\n      RenderedChunkConstants.NODE_SIZE_PX,\n      RenderedChunkConstants.NODE_SIZE_PX,\n      RenderedChunkConstants.NODE_ROUNDED_PX\n    );\n    let mask = new Pixi.Graphics();\n    mask.beginFill(COLORS.black);\n    mask.drawRect(\n      -RenderedChunkConstants.NODE_SIZE_PX / 2,\n      -RenderedChunkConstants.NODE_SIZE_PX / 2,\n      RenderedChunkConstants.NODE_SIZE_PX,\n      RenderedChunkConstants.NODE_SIZE_PX * cropFraction\n    );\n    g.mask = mask;\n    // g.x = 200;\n    // g.y = 200;\n    // this.app.stage.addChild(g);\n    // let texture = renderer.generateTexture(g, Pixi.SCALE_MODES.NEAREST, 1);\n    let texture = renderer.generateTexture(g, Pixi.SCALE_MODES.LINEAR, 1);\n    // const sprite = new Pixi.Sprite(texture);\n    // sprite.x = 300;\n    // sprite.y = 300;\n    // this.app.stage.addChild(sprite);\n    textureSet.push({\n      cropFraction,\n      texture,\n    });\n  }\n  return textureSet;\n}\n","import { Vector2 } from '../lib/util/geometry/vector2';\nimport { Const } from '../lib/util/misc';\n\n/**\n * current window settings -- allows for dynamic resizing and also rotation on mobile web\n */\nexport type WindowState = {\n  orientation: 'original' | 'rotated'; // rotated === we are forcing landscape-in-portrait\n  innerWidth: number;\n  innerHeight: number;\n};\n\nexport const newWindowState = (): WindowState => {\n  return {\n    orientation: 'original',\n    innerWidth: window.innerWidth,\n    innerHeight: window.innerHeight,\n  };\n};\n\n/**\n * given the dimensions of the entire html window, computes the size of the intended play area -- leaves a 24px border\n * TODO(bowei): move this somewhere more appropriate. for now it's just here because it's used in both pixi and react components\n */\nexport function appSizeFromWindowSize(window?: Const<Vector2>): Vector2 {\n  return new Vector2({\n    x: Math.min(2560, (window?.x || Infinity) - 24),\n    y: Math.min(1440, (window?.y || Infinity) - 24),\n  });\n}\n","import * as Pixi from 'pixi.js';\nimport { Vector2 } from '../lib/util/geometry/vector2';\nimport { GameState } from '../data/GameState';\n// eslint-disable-next-line\nimport { assertOnlyCalledOnce, Const } from '../lib/util/misc';\nimport { RootComponent } from './components/RootComponent';\nimport { UpdaterGeneratorType2 } from '../lib/util/updaterGenerator';\nimport COLORS from './colors';\n// eslint-disable-next-line\nimport createBunnyExample from './BunnyExample';\nimport { appSizeFromWindowSize } from '../data/WindowState';\n\ntype Props = {\n  args: {\n    fireBatch: () => void;\n    isSecondConstructorCall: boolean;\n  };\n  updaters: UpdaterGeneratorType2<GameState>; // aka updaters\n  gameState: Const<GameState>;\n};\n\ntype State = {\n  appSize: Vector2;\n  originalAppSize: Vector2;\n};\n\nconst DEFAULT_APP_SIZE = new Vector2(800, 600);\n\nexport const PIXI_TICKS_PER_SECOND = 60; // pixi's onTick [delta] parameter is measured in ticks -- use this to convert to seconds\n\n// pixi code will not run while it is backgrounded, to save compute, but will run every [BACKGROUND_UPDATE_INTERVAL_TICKS] to keep roughly up-to-date\nconst BACKGROUND_UPDATE_INTERVAL_TICKS = 60;\n\n/**\n * Pixi side of a pixi-react bridge. This class owns a pixi application and receives props updates from react by way of rerender().\n * Those props updates do not apply immediately but are queued up and apply all at once on the next tick in the baseGameLoop().\n * Kicks off the pixi component lifecycle handling by updating props on Pixi RootComponent.\n */\nexport class PixiReactBridge {\n  public app!: Pixi.Application;\n\n  state!: State;\n  props!: Props;\n  private staleProps?: Props;\n\n  rootComponent: RootComponent | undefined;\n  onTick!: (d: number) => void;\n\n  /**\n   * NOTE: for lifecycle convenience, we allow initializing with essentially empty props, and to finish the initialization\n   * lazily at the first rerender() call\n   * NOTE: this causes an annoying flash since we don't know the initial window size\n   */\n  constructor(props?: Props, isSecondConstructorCall: boolean = false) {\n    // verify that we are not loading this twice when we expect to load it only once -- bad for performance!!\n    if (!(props?.args?.isSecondConstructorCall || isSecondConstructorCall)) {\n      // assertOnlyCalledOnce(\"Pixi react bridge constructor\"); // annoying with react hot reload, disable for now}\n    }\n\n    let appSize = DEFAULT_APP_SIZE;\n    this.state = {\n      appSize,\n      originalAppSize: appSize,\n    };\n\n    this.app = new Pixi.Application({\n      width: this.state.appSize.x,\n      height: this.state.appSize.y,\n      antialias: true, // both about the same FPS, i get around 30 fps on 1600 x 900\n      transparent: true, // true -> better fps?? https://github.com/pixijs/pixi.js/issues/5580\n      resolution: window.devicePixelRatio || 1, // lower -> more FPS but uglier\n      // resolution: 0.5,\n      // resolution: 2,\n      autoDensity: true,\n      powerPreference: 'low-power', // the only valid one for webgl\n      backgroundColor: COLORS.white, // immaterial - we recommend setting color in backdrop graphics\n    });\n\n    // test\n    // createBunnyExample({ parent: this.app.stage, ticker: this.app.ticker, x: this.app.screen.width / 2, y: this.app.screen.height / 2 });\n  }\n\n  public pause() {\n    this.app.ticker.remove(this.onTick);\n  }\n  public destroy() {\n    this.app.destroy(true, {\n      children: true,\n      texture: true,\n      baseTexture: true,\n    });\n  }\n\n  public didMount() {\n    this.onTick = (delta) => this.baseGameLoop(delta);\n    this.onTick = this.onTick.bind(this);\n    this.app.ticker.add(this.onTick);\n\n    // we forgot to set app size properly when pixi first loaded, so do it now\n    this.state.appSize = appSizeFromWindowSize(\n      new Vector2(\n        this.props.gameState.windowState.innerWidth,\n        this.props.gameState.windowState.innerHeight\n      )\n    );\n  }\n\n  /**\n   * Please only call once!!\n   * Usage: const container = useRef<HTMLDivElement>(null); useEffect(() => { application.register(container.current!); }, []);\n   */\n  public register(curr: HTMLDivElement) {\n    curr.appendChild(this.app.view);\n  }\n\n  updateSelf(props: Props, staleProps?: Props) {\n    if (props === staleProps) {\n      props.updaters.tick.enqueueUpdate((it) => it + 1); // TODO(bowei): reneable this\n      return;\n    }\n\n    // memoize: compute app state from window state dimensions only if they changed from last tick\n    if (\n      !(\n        props.gameState.windowState.innerWidth ===\n          staleProps?.gameState.windowState.innerWidth &&\n        props.gameState.windowState.innerHeight ===\n          staleProps?.gameState.windowState.innerHeight\n      )\n    ) {\n      // console.log(\n      //   'update self inner',\n      //   props.gameState.windowState,\n      //   staleProps?.gameState.windowState\n      // );\n      this.state.appSize = appSizeFromWindowSize(\n        new Vector2(\n          props.gameState.windowState.innerWidth,\n          props.gameState.windowState.innerHeight\n        )\n      );\n    }\n\n    props.updaters.tick.enqueueUpdate((it) => it + 1); // TODO(bowei): reneable this\n  }\n\n  // shim, called from react, possibly many times , possibly at any time, including during the baseGameLoop below\n  // props should be a referentially distinct object from props the last time this was called\n  rerender(futureProps: Props) {\n    if (this.rootComponent && this.props === futureProps) {\n      // skip updating props if we're already initialized and there's no new props object\n      return;\n    }\n\n    // console.log('base app rerender called');\n\n    // take the props handed down from react (probably due to our own props.updaters.fireBatch() call, see game loop) and\n    // record them for future use. note that the future props do not take effect down the child hierarchy unless they are\n    // manually told to do so.\n    this.props = futureProps;\n\n    // If we're not done initializing yet (note that constructor does not set props!), finish it now\n    if (!this.rootComponent) {\n      // finish initialization\n      this.rootComponent = new RootComponent({\n        args: {\n          renderer: this.app.renderer,\n          markForceUpdate: () => {},\n        },\n        updaters: this.props.updaters,\n        delta: 0,\n        gameState: this.props.gameState,\n        appSize: this.state.appSize,\n      });\n      this.app.stage.addChild(this.rootComponent.container);\n\n      this.renderSelf(this.props);\n\n      // test\n      // createBunnyExample({ parent: this.app.stage, ticker: this.app.ticker, x: this.app.screen.width / 2, y: this.app.screen.height / 2 });\n      this.didMount();\n    }\n  }\n\n  renderSelf(props: Props) {\n    this.app.renderer.resize(this.state.appSize.x, this.state.appSize.y);\n  }\n\n  /**\n   *\n   * @param delta passed from pixi - indicates the amount of time elapsed since this function was last called, measured in ticks.\n   * fairly sure tick is exactly 1/60 sec, but might depend on pixi default FPS (120 on some systems???)\n   */\n  baseGameLoop(delta: number): void {\n    if (this.props.gameState.playerUI.isPixiHidden) {\n      if (this.props.gameState.tick % BACKGROUND_UPDATE_INTERVAL_TICKS === 0) {\n        // console.log('computing pixi update even though pixi is not visible');\n      } else {\n        // console.log('skipping update since pixi is not visible');\n        // have to manually update the tick number since updateSelf is not being called, because staleProps is not being updated\n        this.props.updaters.tick.enqueueUpdate((it) => it + 1); // TODO(bowei): reneable this\n        this.props.args.fireBatch(); // fire enqueued game state updates, which should come back from react in the rerender()\n        return; // skip update loop if pixi is hidden\n      }\n    }\n    // assume props is up to date\n    this.updateSelf(this.props, this.staleProps);\n\n    // send props downwards\n    this.rootComponent?.update({\n      args: {\n        renderer: this.app.renderer,\n        markForceUpdate: () => {},\n      },\n      updaters: this.props.updaters,\n      delta,\n      gameState: this.props.gameState,\n      appSize: this.state.appSize,\n    });\n\n    this.renderSelf(this.props);\n    this.staleProps = this.props;\n    this.props.args.fireBatch(); // fire enqueued game state updates, which should come back from react in the rerender()\n  }\n}\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { UseGameStateContext } from '../contexts';\nimport { PixiReactBridge } from '../pixi/PixiReactBridge';\nimport { Lazy } from '../lib/util/lazy';\n\nconst initialApplication = new Lazy(() => new PixiReactBridge());\n\n/**\n * React side of a pixi-react bridge. This react component owns the div which own the canvas element,\n * and send rerender props updates to pixi application when react causes state to be updated.\n */\nexport function PixiWrapperComponent(props: { hidden: boolean }) {\n  const [application] = useState(initialApplication.get());\n  const container = useRef<HTMLDivElement>(null);\n  const [gameState, gameStateUpdaters, fireBatchedSetGameState] =\n    useContext(UseGameStateContext);\n\n  useEffect(() => {\n    // remove old application if it exists\n    for (let i = container.current!.childNodes.length - 1; i >= 0; i--) {\n      container.current!.removeChild(container.current!.childNodes[i]);\n    }\n    // add the application\n    container.current!.appendChild(application.app.view);\n  }, [application]);\n\n  // Trigger component render on first load and also when game state is updated\n  // wrap in useeffect to avoid triggering every react render (130+ UPS) and only check every pixi render (60fps)\n  useEffect(() => {\n    application.rerender({\n      args: {\n        fireBatch: fireBatchedSetGameState,\n        isSecondConstructorCall: false,\n      },\n      updaters: gameStateUpdaters,\n      gameState,\n    });\n  }, [application, fireBatchedSetGameState, gameStateUpdaters, gameState]);\n\n  return (\n    <>\n      <div ref={container} hidden={props.hidden} style={{}} />\n    </>\n  );\n}\n","import React from 'react';\n// import UAParser from 'ua-parser-js';\nimport { GameState } from '../data/GameState';\nimport { WindowState } from '../data/WindowState';\nimport { UpdaterGeneratorType2 } from '../lib/util/updaterGenerator';\n\ntype Props = {\n  updaters: UpdaterGeneratorType2<WindowState, GameState>;\n};\n\ntype State = {};\n\n// TODO(bowei): on mobile, for either ios or android, when in portrait locked orientation, we want to serve a landscape\n// experience - similar to a native app which is landscape locked.\n// (on mobile in already landscape orientation, and in all desktop, serve ordinary orientation.)\n// also note that android webapp supports manifest.json setting orientation, but not in the browser\n// FOR NOW - ignore this\n// https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Managing_screen_orientation\n// https://stackoverflow.com/questions/14360581/force-landscape-orientation-mode\n\n// const browser = new UAParser().getBrowser();\n// let forceRotate = false;\n// if (\n//   browser.name === 'Mobile Safari' &&\n//   window.innerWidth < window.innerHeight\n// ) {\n//   forceRotate = true;\n// }\n//     <div className={classnames({ App: true, \"force-landscape\": forceRotate })}>\n/*\n.force-landscape {\n  transform: rotate(90deg);\n}\n*/\n\n/**\n * Empty react element with listeners for window changes.\n */\nexport class WindowListenerComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n    window.addEventListener('resize', this.handleWindowResize);\n  }\n\n  // NOTE(bowei): does using e.repeat here break when window loses focus??\n  handleWindowResize = (e: any) => {\n    this.props.updaters.enqueueUpdate((old) => {\n      // console.log(\"executing window state update in window onresize in app\");\n      // const result = { ...old };\n      // result.innerWidth = window.innerWidth;\n      // result.innerHeight = window.innerHeight;\n      // return result;\n      return {\n        ...old,\n        innerWidth: window.innerWidth,\n        innerHeight: window.innerHeight,\n      };\n    });\n  };\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n  render() {\n    return <> </>;\n  }\n}\n","import { HashSet } from '../../lib/util/data_structures/hash';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\n\nexport enum Direction {\n  NORTHWEST = 'NORTHWEST',\n  SOUTHWEST = 'SOUTHWEST',\n  NORTHEAST = 'NORTHEAST',\n  SOUTHEAST = 'SOUTHEAST',\n  EAST = 'EAST',\n  WEST = 'WEST',\n  UP = 'UP',\n  DOWN = 'DOWN',\n}\n\n/**\n * Moving 1 unit of grid on a z level corresponds to moving this many units of grid in the same direction on the z level below.\n */\n// const PER_Z_SCALE_FACTOR = 6;\n\n/**\n *   2   3\n * 4 - O - 1\n *   6   5\n * x-axis is along 0 -> 1\n * y-axis is along 0 -> 2\n * z-axis is vertical\n *\n * @param base 0\n */\nexport function getCoordNeighbors(\n  base: Vector3\n): { [d in Direction]?: Vector3 } {\n  let neighbors: { [d in Direction]?: Vector3 } = {} as any;\n\n  neighbors.EAST = base.addX(1);\n  neighbors.WEST = base.addX(-1);\n  neighbors.NORTHWEST = base.addY(1);\n  neighbors.SOUTHEAST = base.addY(-1);\n  neighbors.NORTHEAST = base.add(1, 1, 0);\n  neighbors.SOUTHWEST = base.add(-1, -1, 0);\n\n  // TODO(bowei): reenable up/down neighbors later\n  // neighbors.DOWN = base\n  //   .multiply(new Vector3(PER_Z_SCALE_FACTOR, PER_Z_SCALE_FACTOR, 1))\n  //   .addZ(-1);\n\n  // if (base.x % PER_Z_SCALE_FACTOR === 0 && base.y % PER_Z_SCALE_FACTOR === 0) {\n  //   neighbors.UP = base\n  //     .divide(new Vector3(PER_Z_SCALE_FACTOR, PER_Z_SCALE_FACTOR, 1))\n  //     .addZ(1);\n  // }\n\n  return neighbors;\n}\n\nexport type IReadonlySet<K> = {\n  contains: (k: K) => boolean;\n};\n\n/**\n *\n * @param base\n * @param maxDistance\n * @param minDistance\n * @returns all vector3 coords that are <= maxDistance and >= minDistance.\n */\nexport function getWithinDistance(\n  base: Vector3,\n  maxDistance: number,\n  minDistance?: number,\n  disallowedSet?: IReadonlySet<Vector3>\n): Vector3[] {\n  let touched: HashSet<Vector3> = new HashSet();\n  let disallowedButTouched: HashSet<Vector3> = new HashSet();\n  touched.put(base);\n  const byDist: Vector3[][] = [[base]];\n\n  for (let d = 1; d <= maxDistance; d++) {\n    byDist.push([]);\n    for (let vec of byDist[d - 1]) {\n      const considering = Object.values(getCoordNeighbors(vec));\n      for (const n of considering) {\n        if (!n) continue;\n        if (touched.get(n)) continue;\n\n        if (disallowedSet?.contains(n)) {\n          disallowedButTouched.put(n);\n        } else {\n          touched.put(n);\n          byDist[d].push(n);\n        }\n      }\n    }\n  }\n\n  let result: Vector3[] = [];\n  for (let dd = minDistance || 0; dd <= maxDistance; dd++) {\n    result = result.concat(byDist[dd]);\n  }\n  result = result.concat(disallowedButTouched.values());\n  return result;\n}\n","import { LockStatus, NodeTakenStatus } from './NodeStatus';\nimport { KeyedHashMap } from '../lib/util/data_structures/hash';\nimport { Vector3 } from '../lib/util/geometry/vector3';\nimport { DeserializationError } from '../lib/util/misc';\n\nexport type PlayerSaveState = {\n  /**\n   * Indicated which nodes are allocated or not. NOTE: does not contain fog of war information\n   */\n  allocationStatusMap: KeyedHashMap<Vector3, NodeTakenStatus>;\n};\n\n// NOT DEPRECATED\nexport type LockData = {\n  shortTextTarget: string;\n  shortTextTimer: string;\n  lockStatus: LockStatus;\n};\n\nexport const newPlayerSaveState = (): PlayerSaveState => {\n  return {\n    // make sure to allocate the beginning node\n    allocationStatusMap: new KeyedHashMap<Vector3, NodeTakenStatus>([\n      [Vector3.Zero, NodeTakenStatus.true],\n    ]),\n  };\n};\n\nconst serializeToObject = (s: PlayerSaveState): object => {\n  return {\n    ...s,\n    allocationStatusMap: KeyedHashMap.SerializeToObject<\n      Vector3,\n      NodeTakenStatus\n    >(s.allocationStatusMap, Vector3.SerializeToObject),\n  };\n};\n\nconst serialize = (s: PlayerSaveState) => JSON.stringify(serializeToObject(s));\n\nconst deserializeFromObject = (obj: any): PlayerSaveState | null => {\n  if (!obj || !obj.hasOwnProperty('allocationStatusMap')) {\n    console.error('Failed deserializing PlayerSaveState: ', obj);\n    return null;\n  }\n\n  const allocationStatusMap = KeyedHashMap.Deserialize<\n    Vector3,\n    NodeTakenStatus\n  >(obj.allocationStatusMap, (it) => {\n    const result = Vector3.Deserialize(it);\n    if (!result) {\n      throw new DeserializationError(\n        `Failed deserializing vector3 ${JSON.stringify(it)}`\n      );\n    }\n    return result;\n  });\n  if (!allocationStatusMap) {\n    console.error('Failed deserializing PlayerSaveState: ', obj);\n    return null;\n  }\n\n  return {\n    ...(obj as PlayerSaveState),\n    allocationStatusMap,\n  };\n};\n\nconst deserialize = (obj: string) => deserializeFromObject(JSON.parse(obj));\n\nconst storageKey = 'PlayerSaveState';\n\n/**\n * Tries to load from local storage and falls back to creating a new object if unsuccessful.\n * see: https://gist.github.com/muzfr7/7e15582add46e74dee111002ec6cf594\n * http://vaughnroyko.com/idbonbeforeunload/\n * https://discourse.mozilla.org/t/saving-to-localstorage-on-window-close/35627/7\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n */\nconst tryLoad = (): PlayerSaveState => {\n  const loaded = load();\n  if (loaded) {\n    return loaded;\n  } else {\n    console.log('Failed to load PlayerSaveState');\n    return newPlayerSaveState();\n  }\n};\n\nconst load = (): PlayerSaveState | null => {\n  const data = window.localStorage.getItem(storageKey);\n  const loaded = (data && deserialize(data)) || null;\n  return loaded;\n};\n\nconst store = (s: PlayerSaveState) => {\n  const data = serialize(s);\n  window.localStorage.setItem(storageKey, data);\n};\n\nconst clear = () => {\n  window.localStorage.setItem(storageKey, '');\n};\n\n// eslint-disable-next-line\nexport const PlayerSaveState = {\n  new: newPlayerSaveState,\n  serialize,\n  deserialize,\n  tryLoad,\n  load,\n  store,\n  clear,\n};\n","import { LockStatus } from '../../data/NodeStatus';\nimport { LockData } from '../../data/PlayerSaveState';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { INTMAX32, squirrel3 } from '../../lib/util/random';\n\ntype LockFactoryConfig = {};\n\nexport class LockFactory {\n  public config: LockFactoryConfig;\n\n  constructor(config: LockFactoryConfig) {\n    this.config = config;\n  }\n\n  public create(args: {\n    seed: number;\n    location: Vector3;\n  }): LockData | undefined {\n    const id = squirrel3(\n      args.seed +\n        args.location.x +\n        args.location.y +\n        squirrel3(args.seed + args.location.x + args.location.z)\n    );\n    const p = id / INTMAX32;\n\n    let lockData: LockData = {\n      shortTextTarget: '🔒',\n      shortTextTimer: '',\n      lockStatus: LockStatus.TICKING,\n    };\n    if (args.location.equals(Vector3.Zero)) {\n      return undefined;\n    }\n    // TODO(bowei): unhardcode\n    // locks occur at this frequency\n    // a good non-debug value is 0.47. 0.5 is the site percolation threshold for triangular lattice\n    if (p < 0.47) {\n      return lockData;\n    }\n\n    return undefined;\n  }\n}\n","import { LockData } from '../../data/PlayerSaveState';\nimport { WorldGenState } from '../../data/WorldGenState';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { LazyHashMap } from '../../lib/util/lazy';\nimport { LockFactory } from './LockFactory';\nimport {\n  NodeContentsFactory,\n  NodeContents,\n} from './nodeContents/NodeContentsFactory';\n\nexport type WorldGenStateConfig = {};\n\nconst storageKey = 'WorldGenState';\n\nexport class WorldGenStateFactory {\n  public config: WorldGenStateConfig;\n\n  constructor(config: WorldGenStateConfig) {\n    this.config = config;\n  }\n\n  public create(args: { seed: number }): WorldGenState {\n    const mySeed = args.seed;\n\n    const lockFactory = new LockFactory({});\n    const lockDataMap = new LazyHashMap<Vector3, LockData | undefined>((k) =>\n      lockFactory.create({ seed: mySeed, location: k })\n    );\n    const nodeContentsFactory = new NodeContentsFactory({});\n    const nodeContentsMap = new LazyHashMap<Vector3, NodeContents>((k) =>\n      nodeContentsFactory.create({ seed: mySeed, location: k })\n    );\n    return {\n      seed: mySeed,\n      lockMap: lockDataMap,\n      nodeContentsMap,\n    };\n  }\n\n  public tryLoad(args: { seed: number }): WorldGenState {\n    const loaded = this.load();\n    if (loaded) {\n      return this.create(loaded);\n    } else {\n      return this.create(args);\n    }\n  }\n\n  public store(s: WorldGenState) {\n    const data = this.serialize(s);\n    window.localStorage.setItem(storageKey, data);\n  }\n\n  load(): { seed: number } | null {\n    const data = window.localStorage.getItem(storageKey);\n    const loaded = (data && this.deserialize(data)) || null;\n    return loaded;\n  }\n\n  deserialize(obj: string): { seed: number } | null {\n    return this.deserializeFromObject(JSON.parse(obj));\n  }\n\n  deserializeFromObject(obj: any): { seed: number } | null {\n    if (!obj || !obj.hasOwnProperty('seed')) {\n      return null;\n    }\n    return { ...obj };\n  }\n\n  serialize(s: WorldGenState) {\n    return JSON.stringify(this.serializeToObject(s));\n  }\n\n  serializeToObject(s: WorldGenState): object {\n    return { seed: s.seed };\n  }\n\n  public clear() {\n    window.localStorage.setItem(storageKey, '');\n  }\n}\n","import { GameState } from '../../data/GameState';\nimport {\n  LockStatus,\n  NodeReachableStatus,\n  NodeTakenStatus,\n  NodeVisibleStatus,\n} from '../../data/NodeStatus';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { getWithinDistance, IReadonlySet } from '../lib/HexGrid';\n\nexport interface AllocateNodeInput {\n  nodeLocation: Vector3;\n  newStatus: NodeTakenStatus;\n}\n\n// TODO(bowei): unhardcode\nexport const FOG_OF_WAR_DISTANCE = 5;\n\n/**\n * Stateless action wrapper over updaters.\n * Represents the action of allocating a node.\n */\nexport class AllocateNodeAction {\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n\n  constructor(updaters: UpdaterGeneratorType2<GameState, GameState>) {\n    this.updaters = updaters;\n  }\n\n  enqueueAction(input: AllocateNodeInput) {\n    const { nodeLocation, newStatus } = input;\n\n    this.updaters.playerSave.allocationStatusMap.enqueueUpdate((prevMap) => {\n      // console.log('prev was', prevMap.get(nodeLocation), 'now', newStatus);\n      // if (prevMap.get(nodeLocation) === newStatus) {\n      //   return prevMap;\n      // }\n      prevMap.put(nodeLocation, newStatus);\n      return prevMap.clone();\n    });\n\n    // before updating Fog of war, first unlock any locks\n    this.updaters.computed.lockStatusMap?.enqueueUpdate(\n      (prevMap, prevGameState) => {\n        if (!prevMap) {\n          return prevMap;\n        }\n\n        for (let [\n          location,\n          lockData,\n        ] of prevGameState.worldGen.lockMap.entries()) {\n          if (lockData) {\n            // TODO: compute lock status\n            const newStatus = LockStatus.TICKING;\n            prevMap.put(location, newStatus);\n          }\n        }\n\n        return prevMap.clone();\n      }\n    );\n\n    this.updaters.computed.reachableStatusMap?.enqueueUpdate((prevMap) => {\n      if (!prevMap) {\n        return prevMap;\n      }\n\n      getWithinDistance(nodeLocation, 1).forEach((n) => {\n        prevMap.put(n, NodeReachableStatus.true);\n      });\n      return prevMap.clone();\n    });\n\n    this.updaters.computed.fogOfWarStatusMap?.enqueueUpdate(\n      (prevMap, prevGameState) => {\n        if (!prevMap) {\n          return prevMap;\n        }\n        prevMap.put(nodeLocation, NodeVisibleStatus.true);\n\n        getWithinDistance(nodeLocation, 1).forEach((n) => {\n          prevMap.put(n, NodeVisibleStatus.true);\n        });\n\n        // make sure we make use of lock state\n        // getWithinDistance(nodeLocation, 3).forEach((n) => {\n        // const validLocks = prevGameState.worldGen.lockMap\n        const validLocks: IReadonlySet<Vector3> = {\n          // TODO(bowei): optimize this?\n          contains: (v: Vector3) => {\n            // const maybeLock = prevGameState.worldGen.lockMap.get(v);\n            const maybeLock = prevGameState.computed.lockStatusMap?.get(v);\n            if (maybeLock && maybeLock !== LockStatus.OPEN) {\n              return true;\n            }\n            return false;\n          },\n        };\n        getWithinDistance(\n          nodeLocation,\n          FOG_OF_WAR_DISTANCE,\n          0,\n          validLocks\n        ).forEach((n) => {\n          if (!prevMap.get(n)?.visible) {\n            // NOTE(bowei): fuck, this doesnt cause a update to be propagated... i guess it's fine though\n            prevGameState.worldGen.lockMap.precompute(n);\n            prevMap.put(n, NodeVisibleStatus.true);\n          }\n        });\n\n        return prevMap.clone();\n      }\n    );\n  }\n}\n","import { Vector2 } from '../../lib/util/geometry/vector2';\nimport React, { useEffect } from 'react';\nimport { colorToCss } from '../../pixi/colors';\n\nexport const CssVariablesComponent = React.memo(Component);\n\n/**\n * Handles loading display settings from props into css variables.\n * component is empty in the DOM - can be embedded anywhere in react hierarchy\n */\nfunction Component(props: {\n  appSize: Vector2;\n  hexGridPx: Vector2;\n  borderWidth: number;\n  hexCenterRadius: number;\n  COLORS: any;\n  children?: any;\n}) {\n  const { hexGridPx, borderWidth, hexCenterRadius, appSize, COLORS } = props;\n  useEffect(() => {\n    document.documentElement.style.setProperty(\n      '--grid-width',\n      ` ${hexGridPx.x}px`\n    );\n    document.documentElement.style.setProperty(\n      '--grid-height',\n      ` ${hexGridPx.y}px`\n    );\n    document.documentElement.style.setProperty(\n      '--hex-center-radius',\n      ` ${hexCenterRadius}px`\n    );\n    document.documentElement.style.setProperty(\n      '--border-width',\n      ` ${borderWidth}px`\n    );\n  }, [hexGridPx, hexCenterRadius, borderWidth]);\n  useEffect(() => {\n    document.documentElement.style.setProperty(\n      '--background-black',\n      colorToCss(COLORS.backgroundBlue)\n    );\n    document.documentElement.style.setProperty(\n      '--deemphasized-black',\n      colorToCss(COLORS.grayBlack)\n    );\n    document.documentElement.style.setProperty(\n      '--active-purple',\n      colorToCss(COLORS.nodePink)\n    );\n    document.documentElement.style.setProperty(\n      '--border-unimportant-black',\n      colorToCss(COLORS.borderBlack)\n    );\n    document.documentElement.style.setProperty(\n      '--border-important-white',\n      colorToCss(COLORS.borderWhite)\n    );\n    document.documentElement.style.setProperty(\n      '--text-readable-white',\n      colorToCss(COLORS.textWhite)\n    );\n  }, [COLORS]);\n  useEffect(() => {\n    document.documentElement.style.setProperty(\n      '--app-size-width',\n      ` ${appSize.x}px`\n    );\n    document.documentElement.style.setProperty(\n      '--app-size-height',\n      ` ${appSize.y}px`\n    );\n  }, [appSize]);\n\n  return <>{props.children}</>;\n}\n","import React from 'react';\nimport { LockStatus, NodeAllocatedStatus } from '../../data/NodeStatus';\nimport { NodeContents } from '../../game/worldGen/nodeContents/NodeContentsFactory';\nimport {\n  AttributeSymbolMap,\n  ModifierSymbolMap,\n  nodeContentsConditionToString,\n  nodeContentsLineToString,\n} from '../../game/worldGen/nodeContents/NodeContentsRendering';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { LazyHashMap } from '../../lib/util/lazy';\nimport { GameGridSubState } from './GameAreaGrid';\n\nexport type NodeReactData = {\n  // 3-4 character description that goes on the main board\n  shortText: React.ReactElement;\n  // 3-4 line description that gets displayed on hover\n  toolTipText: React.ReactElement;\n  // Extended description that shows up in sidebar\n  fullText: React.ReactElement;\n  lockData?: {\n    shortTextTarget: string;\n    shortTextTimer: string;\n    lockStatus: LockStatus;\n  };\n  nodeContents: NodeContents;\n  status: NodeAllocatedStatus;\n  nodeLocation: Vector3;\n  id: string;\n};\n\n// Text to display both in the tooltip and sidebar for node description.\n// Currently we only have a description for the starting node.\nexport const STARTING_NODE_DESCRIPTION = 'The starting node.';\n\n/**\n * Computes a hash map of vector2 virtual hex grid coordinates to\n * text & tooltip info about the node at those coordinates.\n */\nexport function computeNodeReactData(args: {\n  gameState: GameGridSubState;\n  location: Vector3;\n}): NodeReactData {\n  const { location } = args;\n  const {\n    fogOfWarStatusMap,\n    reachableStatusMap,\n    // lockStatusMap,\n  } = args.gameState.computed;\n  const { allocationStatusMap } = args.gameState.playerSave;\n  const { lockMap, nodeContentsMap } = args.gameState.worldGen;\n\n  const fogOfWarStatus = fogOfWarStatusMap?.get(location);\n  const reachableStatus = reachableStatusMap?.get(location);\n  const takenStatus = allocationStatusMap.get(location);\n  const nodeStatus = takenStatus?.taken\n    ? NodeAllocatedStatus.TAKEN\n    : reachableStatus?.reachable\n    ? NodeAllocatedStatus.AVAILABLE\n    : fogOfWarStatus?.visible\n    ? NodeAllocatedStatus.UNREACHABLE\n    : NodeAllocatedStatus.HIDDEN;\n  const id = location.hash();\n  const lockData = lockMap.get(location);\n  const nodeContents = nodeContentsMap.get(location);\n  let shortText1 = '';\n  if (nodeContents.lines[0]) {\n    shortText1 += ModifierSymbolMap[nodeContents.lines[0].modifier];\n    shortText1 += AttributeSymbolMap[nodeContents.lines[0].attribute];\n  } else {\n    // the origin node is empty\n    shortText1 = '';\n  }\n  if (\n    nodeContents.lines[1] &&\n    nodeContents.lines[0].attribute !== nodeContents.lines[1].attribute\n  ) {\n    // add another symbol if it's a mixed node\n    // TODO(bowei): make sure that node contents generation cannot mix modifiers!!\n    shortText1 += AttributeSymbolMap[nodeContents.lines[1].attribute];\n  }\n  let shortText2 = '';\n  if (nodeContents.condition) {\n    // SPENDing\n    shortText2 = '-' + AttributeSymbolMap[nodeContents.condition.attribute];\n  }\n\n  let tooltipHeader = <> {nodeStatus.toString()}</>;\n  if (lockData) {\n    if (nodeStatus === NodeAllocatedStatus.AVAILABLE) {\n      tooltipHeader = (\n        <>\n          <div>{'LOCKED'}</div>\n          <br></br>\n          <div>{'Locks are currently WIP!'}</div>\n        </>\n      );\n    } else if (nodeStatus === NodeAllocatedStatus.UNREACHABLE) {\n      tooltipHeader = (\n        <>\n          <div>\n            {'LOCKED, '}\n            {nodeStatus.toString()}\n          </div>\n          <br></br>\n          <div>{'Locks are currently WIP!'}</div>\n        </>\n      );\n    }\n  } else if (nodeStatus === NodeAllocatedStatus.AVAILABLE) {\n    tooltipHeader = (\n      <>\n        <div>{nodeStatus.toString()}</div>\n        <br></br>\n        <div>Click to allocate.</div>\n      </>\n    );\n  } else if (location.equals(Vector3.Zero)) {\n    tooltipHeader = (\n      <>\n        <div>{nodeStatus.toString()}</div>\n        <br></br>\n        <div>{STARTING_NODE_DESCRIPTION}</div>\n      </>\n    );\n  }\n\n  const nodeData: NodeReactData = {\n    nodeLocation: location,\n    shortText: shortText2 ? (\n      <>\n        {shortText1}\n        <br />\n        {shortText2}\n      </>\n    ) : (\n      <>{shortText1}</>\n    ),\n    toolTipText: (\n      <>\n        <div>{tooltipHeader}</div>\n        {nodeContents.lines[0] ? <br /> : <></>}\n        {nodeContentsToDom(nodeContents)}\n      </>\n    ),\n    nodeContents,\n    fullText: <> </>,\n    status: nodeStatus,\n    lockData,\n    id,\n  };\n  return nodeData;\n}\n\nexport function computeNodeReactDataMap(args: {\n  gameState: GameGridSubState;\n}): LazyHashMap<Vector3, NodeReactData> {\n  const map = new LazyHashMap<Vector3, NodeReactData>((location: Vector3) => {\n    return computeNodeReactData({ location, gameState: args.gameState });\n  });\n\n  return map;\n}\n\nexport function nodeContentsToDom(nodeContents: NodeContents) {\n  return (\n    <>\n      <div>\n        {nodeContents.lines[0] &&\n          nodeContentsLineToString(nodeContents.lines[0])}\n      </div>\n      <div>\n        {nodeContents.lines[1] &&\n          nodeContentsLineToString(nodeContents.lines[1])}\n      </div>\n      <div>\n        {nodeContents.condition &&\n          nodeContentsConditionToString(nodeContents.condition)}\n      </div>\n    </>\n  );\n}\n","import './GameAreaCell.css';\nimport './GameArea.css';\n\nimport classnames from 'classnames';\nimport React, { useCallback, useState } from 'react';\nimport { NodeReactData } from './computeVirtualNodeDataMap';\nimport { NodeAllocatedStatus } from '../../data/NodeStatus';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\n\n/**\n * Smart wrapper for the Cell (rectangular component of a hex grid).\n *\n * Handles sending the click event upstream to cause a status update.\n * @param idx x-coord of this cell in its row of hex cells\n * @param rowIdx y-coord of this row of hex cells\n * @param onUpdateStatus callback for updating the status of this cell\n * @param nodeData react fragments to help render this cell\n * @param isCursored whether or not to display a flashing cursor for this cell\n * @param onUpdateCursored callback, should be called with the cell virtual position to select that cell, or undefined to unselect the currently selected cell\n */\nexport const GameAreaCell = React.memo(GameAreaCellComponent);\nfunction GameAreaCellComponent({\n  id,\n  onUpdateStatus,\n  nodeData,\n  isCursored,\n  onUpdateCursored,\n  debugIsCursored,\n}: {\n  id: string;\n  onUpdateStatus: (args: {\n    nodeLocation: Vector3;\n    newStatus: NodeAllocatedStatus;\n  }) => void;\n  nodeData: NodeReactData;\n  isCursored: boolean;\n  onUpdateCursored: (v: Vector3 | null) => void;\n  debugIsCursored: boolean;\n}) {\n  // const startTime = +new Date();\n  // console.log(`GameAreaCell key ${id} rerendered at ${startTime}`);\n  const { nodeLocation } = nodeData;\n\n  const handleClick = useCallback(\n    (e: React.MouseEvent) => {\n      // TODO(bowei): debounce this so double-clicks dont double trigger this\n\n      e.stopPropagation();\n      e.preventDefault();\n      // console.log(`clicked`);\n      // console.log({ idx, rowIdx, status: nodeData.status });\n      if (nodeData.status === NodeAllocatedStatus.AVAILABLE) {\n        onUpdateStatus({\n          nodeLocation,\n          newStatus: NodeAllocatedStatus.TAKEN,\n        });\n      } else {\n        onUpdateCursored(isCursored ? null : nodeLocation);\n      }\n    },\n    [onUpdateStatus, nodeLocation, nodeData, isCursored, onUpdateCursored]\n  );\n\n  const handleClickQuestionMark = useCallback(\n    (e: React.MouseEvent) => {\n      e.stopPropagation();\n      e.preventDefault();\n      // TODO(bowei): use nodeData.id here instead of (idx, rowIdx), so that onUpdateStatus callback doesn't ever have to be recreated in the parent statemanager\n      onUpdateCursored(isCursored ? null : nodeLocation);\n    },\n    [isCursored, onUpdateCursored, nodeLocation]\n  );\n\n  return (\n    <Cell\n      key={id}\n      id={id}\n      onClickCenter={handleClick}\n      nodeData={nodeData}\n      onClickQuestionMark={handleClickQuestionMark}\n      isCursored={isCursored}\n      // debugIsCursored={debugIsCursored}\n    ></Cell>\n  );\n}\n\n/**\n * Renderes a single rectangular component of a hex grid.\n * Contains a central node, hover-over tooltips attached to the node, and optionally 2 rectangular text boxes\n * that represent the locked state.\n *\n * @param onClickCenter callback to fire when the node itself (as opposed to the region around it) is clicked.\n * @param onClickQuestionMark callback to fire when the question mark tooltip icon is clicked.\n */\nconst Cell = React.memo(CellComponent);\nfunction CellComponent({\n  id,\n  onClickCenter,\n  onClickQuestionMark,\n  nodeData,\n  isCursored,\n  debugIsCursored,\n}: {\n  id: string;\n  onClickCenter: React.MouseEventHandler;\n  onClickQuestionMark: React.MouseEventHandler;\n  nodeData: NodeReactData;\n  isCursored: boolean;\n  debugIsCursored?: boolean;\n}) {\n  // const startTime = +new Date();\n  // console.log(`GameAreaCellComponent key: ${id} rerendered at ${startTime}`);\n\n  const status = nodeData.status;\n  const isLocked = !!nodeData.lockData;\n\n  const [hovered, setHovered] = useState(false);\n\n  const onHover = (e: React.PointerEvent) => {\n    console.log(`got pointer enter on ${id}`);\n    setHovered(true);\n  };\n  const onUnhover = (e: React.PointerEvent) => {\n    console.log(`got pointer leave on ${id}`);\n    setHovered(false);\n  };\n\n  return (\n    <div className=\"hex-block hex-full-block\" key={id} id={id}>\n      <div\n        className={classnames(\n          'hex-center',\n          status === NodeAllocatedStatus.TAKEN\n            ? 'node-allocated'\n            : 'node-unallocated',\n          status === NodeAllocatedStatus.TAKEN ||\n            status === NodeAllocatedStatus.UNREACHABLE\n            ? 'border-unimportant'\n            : 'border-important',\n          status === NodeAllocatedStatus.AVAILABLE ? 'node-available' : ''\n        )}\n        onClick={onClickCenter}\n        onDoubleClick={() => {\n          console.log('double clicked');\n        }}\n        onPointerEnter={onHover}\n        onPointerLeave={onUnhover}\n        hidden={status === NodeAllocatedStatus.HIDDEN}\n      >\n        <div className=\"hex-center-text-wrapper\">\n          <div className=\"tiny-text\">{nodeData.shortText}</div>\n        </div>\n      </div>\n      {isLocked ? (\n        <div\n          className=\"hex-center-lock\"\n          hidden={status === NodeAllocatedStatus.HIDDEN}\n          onClick={onClickCenter}\n          onDoubleClick={() => {\n            console.log('double clicked');\n          }}\n          onPointerEnter={onHover}\n          onPointerLeave={onUnhover}\n        >\n          <div className=\"hex-center-lock-left\">\n            <div className=\"tiny-text\">\n              {nodeData.lockData?.shortTextTarget}\n            </div>\n          </div>\n          <div className=\"hex-center-lock-right\">\n            <div className=\"tiny-text\">{nodeData.lockData?.shortTextTimer}</div>\n          </div>\n        </div>\n      ) : null}\n      <div className=\"empty-positioned node-tooltip-wrapper\">\n        <div\n          // className=\"hover-only absolute-positioned node-tooltip\" // temp disabling this, the css is causing perf issues\n          className=\"absolute-positioned node-tooltip\"\n          hidden={!hovered}\n        >\n          {nodeData.toolTipText}\n        </div>\n      </div>\n      <div className=\"empty-positioned\">\n        <div className=\"hover-only-2 absolute-positioned\">\n          <div\n            className=\"question\"\n            hidden={status === NodeAllocatedStatus.HIDDEN}\n            onClick={onClickQuestionMark}\n          >\n            ?\n          </div>\n        </div>\n      </div>\n      <div className=\"empty-positioned selection-cursor-wrapper\">\n        <div\n          className=\"absolute-positioned selection-cursor\"\n          // hidden={!debugIsCursored}\n          hidden={!isCursored}\n        ></div>\n      </div>\n    </div>\n  );\n}\n","import './GameAreaGrid.css';\nimport './GameArea.css';\n\nimport React, { useMemo } from 'react';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport {\n  computeNodeReactData,\n  NodeReactData,\n} from './computeVirtualNodeDataMap';\nimport { GameAreaCell } from './GameAreaCell';\nimport { NodeAllocatedStatus } from '../../data/NodeStatus';\nimport { GameAreaSubState } from './GameAreaInterface';\nimport { LazyHashMap } from '../../lib/util/lazy';\nimport { extractDeps } from '../../lib/util/misc';\n\n/**\n * The subset of the game state that is relevant to game area components.\n */\nexport function extractGameGridSubState(gameState: GameAreaSubState) {\n  return {\n    playerUI: {\n      cursoredNodeLocation: gameState.playerUI.cursoredNodeLocation,\n    },\n    playerSave: {\n      allocationStatusMap: gameState.playerSave.allocationStatusMap,\n    },\n    worldGen: {\n      nodeContentsMap: gameState.worldGen.nodeContentsMap,\n      lockMap: gameState.worldGen.lockMap,\n    },\n    computed: {\n      fogOfWarStatusMap: gameState.computed.fogOfWarStatusMap,\n      reachableStatusMap: gameState.computed.reachableStatusMap,\n      lockStatusMap: gameState.computed.lockStatusMap,\n    },\n  };\n}\nexport type GameGridSubState = ReturnType<typeof extractGameGridSubState>;\nexport const depsGameGridSubState = extractDeps(extractGameGridSubState);\n\nexport const GameAreaGrid = React.memo(Component);\n/**\n * Dumb-ish component that manages the game board where the skill tree is located\n * , as well as the \"virtual\"\n * game space which is larger than the currently visible scrollable area the player can see.\n *\n * @param virtualGridDims the integer dimensions of the virtual scrollable space, measured in grid units. integer vector.\n * @param virtualCoordsToLocation utility stateless function to convert from ui virtual grid coords (ints) to 3d node location in game state (ints)\n * @param virtualNodeDataMap table of ui grid corods to object containing react fragments for contents of that node\n * @param updateNodeStatusCb callback for when a node is allocated and the node status needs to change. need to provide the virtual grid coords of the node to be allocated, and the new status.\n * @param cursoredVirtualNode 2d virtual dims of the node which is currently cursored (flashing and may show up in sidebar), or undefined if there is none\n * @param setCursoredVirtualNode callback which takes virtual 2d coords and causes that node to now be cursored, or undefined to clear cursor\n */\nfunction Component(props: {\n  gameState: GameGridSubState;\n  virtualGridDims: Vector2;\n  virtualCoordsToLocation: (v: Vector2) => Vector3;\n  updateNodeStatusByLocationCb: (args: {\n    nodeLocation: Vector3;\n    newStatus: NodeAllocatedStatus;\n  }) => void;\n  cursoredVirtualNode: Vector2 | null;\n  setCursoredLocation: (v: Vector3 | null) => void;\n  debug?: any;\n}) {\n  const {\n    gameState,\n    virtualGridDims,\n    virtualCoordsToLocation,\n    updateNodeStatusByLocationCb,\n    cursoredVirtualNode,\n    setCursoredLocation,\n    debug,\n  } = props;\n  const startTime = +new Date();\n\n  debug?.rerenderGameAreaGrid();\n  // const debugOffsetX = (debug?.getOffsetX?.() || 0) % 8;\n  const flipCursored = debug?.isFlipCursored?.() || false;\n  // console.log('Game area grid rerender');\n\n  const nodeReactDataMap = useMemo(\n    () =>\n      new LazyHashMap<Vector3, NodeReactData>((location: Vector3) =>\n        computeNodeReactData({ location, gameState })\n      ),\n    [gameState]\n  );\n\n  /**\n   * See pointer/mouse, over/enter/out/leave, event propagation documentation\n   * https://www.w3schools.com/jquery/tryit.asp?filename=tryjquery_event_mouseenter_mouseover#:~:text=mouseenter%20and%20mouseover.-,The%20mouseover%20event%20triggers%20when%20the%20mouse%20pointer%20enters%20the,moved%20over%20the%20div%20element.\n   * https://stackoverflow.com/questions/4697758/prevent-onmouseout-when-hovering-child-element-of-the-parent-absolute-div-withou\n   * https://developer.mozilla.org/en-US/docs/Web/API/Pointer_events\n   * https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Examples#example_5_event_propagation\n   * https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation\n   * https://developer.mozilla.org/en-US/docs/Web/API/Event/target\n   * https://developer.mozilla.org/en-US/docs/Web/API/Event/currentTarget\n   * https://stackoverflow.com/questions/55546973/react-onmouseenter-event-triggering-on-child-element\n   * https://developer.mozilla.org/en-US/docs/Web/API/Touch_events\n   */\n  const result = (\n    <>\n      {Array(virtualGridDims.y)\n        .fill(0)\n        .map((_, y) => (\n          <Row\n            key={virtualCoordsToLocation(new Vector2(0, y)).y.toString()} // important to force react to hang on to the old row\n            // key={y} // stupid, for debug\n            rowIdx={y}\n          >\n            {\n              Array(virtualGridDims.x)\n                .fill(0)\n                .map((_, x) => {\n                  const virtualCoords = new Vector2(x, y);\n                  const location = virtualCoordsToLocation(virtualCoords);\n                  const nodeData = nodeReactDataMap.get(location);\n                  let isCursored =\n                    !!cursoredVirtualNode &&\n                    cursoredVirtualNode.equals(virtualCoords);\n                  // if (flipCursored) {\n                  //   isCursored = !isCursored;\n                  // }\n                  const key = nodeData.id || `loading${x}`;\n                  // console.log(`key should be ${key} from ${nodeData.toString()}`);\n                  return (\n                    <GameAreaCell\n                      // key={nodeData.id}\n                      key={key}\n                      id={key}\n                      // key={x.toString() + \",\" + y.toString()} // stupid debug??\n                      // key={x} // debug??\n                      nodeData={nodeData}\n                      onUpdateStatus={updateNodeStatusByLocationCb}\n                      isCursored={isCursored}\n                      debugIsCursored={flipCursored ? !isCursored : isCursored}\n                      onUpdateCursored={setCursoredLocation}\n                    />\n                  );\n                })\n              // .slice(debugOffsetX, virtualGridDims.x - 8 + debugOffsetX)\n            }\n          </Row>\n        ))}\n    </>\n  );\n  const now = +new Date();\n  const elapsed = now - startTime;\n  console.log(`Game area grid elapsed ${elapsed}ms at ${now}`);\n  return result;\n}\n\nconst Row = React.memo(RowComponent);\nfunction RowComponent({\n  rowIdx,\n  children,\n}: {\n  rowIdx: number;\n  children?: React.ReactNode;\n}) {\n  const odd = !!(rowIdx % 2);\n\n  // If the row number is odd, prepend a half-block to the row contents of hex blocks\n  // Else, if the row number is even, append a half-block\n  return (\n    <div className=\"hex-block-row\">\n      {odd && <div className=\"hex-block hex-half-block\" />}\n      {children}\n      {!odd && <div className=\"hex-block hex-half-block\" />}\n    </div>\n  );\n}\n","import './GameAreaGrid.css';\nimport './GameArea.css';\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport classnames from 'classnames';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { GameState } from '../../data/GameState';\nimport { getVirtualGridCenterPx } from './locationUtils';\n\nconst SCROLL_INTERVAL_MS = 8; // polling interval - how often to check keyboard scroll state. recommended 60 FPS == 16ms or faster.\nconst SCROLL_VELOCITY = 0.75; // pixels per ms. independent of interval_ms tick rate\n\ntype Props = {\n  hidden: boolean;\n  appSize: Vector2;\n  hexGridPx: Vector2; // the size of a single grid unit, in px\n  virtualGridDims: Vector2; // in grid units. width x height, guaranteed to be integers\n  children?: any;\n  debug?: any;\n  triggerScrollRecenterCb: () => void;\n  updaters: UpdaterGeneratorType2<GameState, GameState>; // TODO(bowei): remove this\n  keyboardScrollDirection: Vector2;\n};\n\nexport const InfiniteScrollManager = React.memo(Component);\n/**\n * Manages the scroll state.\n * @param hidden true to disappear this entire component and all its children.\n * @param appSize size of the scrollable viewport\n * @param hexGridPx size of a single grid unit, in px. needs to be a good ratio if we want an actual hex grid\n * @param virtualGridDims integer vector for # of grid cells in each dimension\n * @param children any react subcomponents. Note that updating children causes this component to update as well - react memo is sensitive to it\n * @param debug TODO(bowei): contains triggers (extracted out of gameState.playerUI) for debugging the scroll jump and the virtual position rerender, SEPARATELY\n * @param keyboardScrollDirection unit-ish vector indicating player using keyboard controls to scroll (we disabled native browser keyboard scrolling)\n */\nfunction Component(props: Props) {\n  const {\n    hexGridPx,\n    virtualGridDims,\n    appSize,\n    updaters,\n    triggerScrollRecenterCb,\n    keyboardScrollDirection,\n    debug,\n  } = props;\n  // console.log('infinite scroll manager rerender');\n\n  const container = useRef<HTMLDivElement>(null);\n\n  const [jumpOffset, setJumpOffset] = useState(new Vector2(0, 0));\n\n  // Set initial position in the center, exactly once!\n  // useEffect(() => {\n  //   if (\n  //     container.current != null &&\n  //     container.current !== previousContainer.current\n  //   ) {\n  //     // TODO(bowei): figure out where the actual center is, so we can center the screen on the starting node perfectly\n  //     const center = getVirtualGridCenterPx({ virtualGridDims, hexGridPx });\n  //     container.current.scrollTop = center.y - appSize.y / 2;\n  //     container.current.scrollLeft = center.x - appSize.x / 2;\n  //   }\n  //   previousContainer.current = container.current;\n  // }, [appSize, virtualGridDims, hexGridPx]);\n  useEffect(() => {\n    if (container.current) {\n      triggerScrollRecenterCb();\n      const center = getVirtualGridCenterPx({ virtualGridDims, hexGridPx });\n      container.current.scrollTop = center.y - appSize.y / 2;\n      container.current.scrollLeft = center.x - appSize.x / 2;\n    }\n  }, [appSize, virtualGridDims, hexGridPx, triggerScrollRecenterCb]);\n\n  // Uses offset to jump to a new scroll position, exactly once\n  useEffect(() => {\n    if (!jumpOffset) return;\n    const ref = container.current;\n    if (!ref) return;\n    ref.scrollTo(\n      ref.scrollLeft - jumpOffset.x * hexGridPx.x,\n      ref.scrollTop - jumpOffset.y * hexGridPx.y\n    );\n  }, [jumpOffset, hexGridPx]);\n\n  // when we trigger a scroll jump, compute where we jump to, and don't forget to update the virtual grid location\n  const handleJump = useCallback(\n    (args: { direction: Vector2 }) => {\n      // // direction: if we hit bottom right of screen, direction == (1,1)\n      // // console.log({ direction: args.direction });\n      // // let jumpAmounts = virtualGridDims.multiply(0.35).floor();\n      // let jumpAmounts = virtualGridDims.multiply(0.05).floor();\n      // // jumpAmounts = jumpAmounts.withY(Math.floor(jumpAmounts.y / 2) * 2);\n      // jumpAmounts = jumpAmounts\n      //   .clampX(1, virtualGridDims.x - 1)\n      //   .clampY(1, virtualGridDims.y - 1);\n      // // .clampY(2, Math.floor((virtualGridDims.y - 1) / 2) * 2);\n\n      // let newJumpOffset = jumpAmounts.multiply(args.direction); // multiply the magnitudes by unit-ish direction vector\n      let locationOffset = new Vector2(args.direction.x, -1 * args.direction.y); // biased\n      if (args.direction.x === args.direction.y) {\n        locationOffset = new Vector2(0, -1 * args.direction.y);\n      }\n\n      const newJumpOffset = new Vector2(locationOffset.x, 0).add(\n        new Vector2(-0.5, -1).multiply(locationOffset.y)\n      );\n\n      // console.log({ newJumpOffset });\n\n      updaters.playerUI.virtualGridLocation.enqueueUpdate((it) => {\n        return it.add(Vector3.FromVector2(locationOffset, 0));\n      });\n      // force a rerender\n      setJumpOffset(newJumpOffset);\n    },\n    [updaters]\n  );\n\n  const getForceJumpOffset = debug.getForceJumpOffset;\n  useEffect(() => {\n    const newJumpOffset = getForceJumpOffset?.();\n    if (newJumpOffset) {\n      updaters.playerUI.virtualGridLocation.enqueueUpdate((it) => {\n        return it\n          .addX(newJumpOffset.x)\n          .add(new Vector3(-1, -2, 0).multiply(newJumpOffset.y / 2));\n      });\n    }\n  }, [updaters, getForceJumpOffset]);\n\n  // Detect if the user has scrolled to the edge of the screen, and if so trigger a scroll jump\n  const enableScrollJump = debug.enableScrollJump;\n  const handleScroll = useCallback(\n    (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n      // console.log(\"NOW IN handlescroll\");\n\n      // fast exit if debug\n      if (!enableScrollJump) {\n        // console.log(\"skipped scroll trigger due to debug\", { debug });\n        return;\n      }\n\n      // handle scroll\n      let direction = { x: 0, y: 0 };\n      const target = e.target! as Element;\n      let newScrollTop = target.scrollTop; // only used as boolean to see if it changed\n      let newScrollLeft = target.scrollLeft;\n      if (target.scrollTop < hexGridPx.y * 0.9) {\n        // between 0.1 and 0.4 of leeway is recommended. increasing it more helps with lag but also incurs more virtual area cost.\n        newScrollTop += hexGridPx.y * 2;\n        direction.y -= 1;\n      }\n      if (\n        target.scrollTop >\n        (virtualGridDims.y - 0.9) * hexGridPx.y - appSize.y\n      ) {\n        newScrollTop -= hexGridPx.y * 2;\n        direction.y += 1;\n      }\n      if (target.scrollLeft < hexGridPx.x * 0.9) {\n        // between 0.6 and 0.9 of leeway is recommended. increasing it more helps with lag but also incurs more virtual area cost.\n        newScrollLeft += hexGridPx.x * 2;\n        direction.x -= 1;\n      }\n      if (\n        target.scrollLeft >\n        (virtualGridDims.x - 0.9) * hexGridPx.x - appSize.x\n      ) {\n        newScrollLeft -= hexGridPx.x * 2;\n        direction.x += 1;\n      }\n      // console.log(target);\n      // console.log(target.scrollTop);\n      // console.log(target.scrollLeft);\n\n      if (\n        target.scrollTop !== newScrollTop ||\n        target.scrollLeft !== newScrollLeft\n      ) {\n        // console.log('jump!', +new Date());\n        // target.scrollTo(newScrollLeft, newScrollTop);\n        handleJump({ direction: new Vector2(direction.x, direction.y) });\n      }\n    },\n    [appSize, handleJump, hexGridPx, virtualGridDims, enableScrollJump]\n  );\n\n  // control scroll with keyboard\n  useEffect(() => {\n    if (!keyboardScrollDirection.equals(Vector2.Zero)) {\n      // console.log('nonzero keyboard scroll direction update received');\n\n      let lastTime: number | null = null;\n      const action = () => {\n        const ref = container.current;\n        if (!ref) return;\n        let direction = Vector2.Zero;\n        if (lastTime === null) {\n          direction = keyboardScrollDirection.multiply(SCROLL_INTERVAL_MS); // assume 1 tick\n          lastTime = +new Date();\n        } else {\n          const elapsed = +new Date() - lastTime;\n          if (elapsed > 40) {\n            console.log('WAS SLOW - ' + elapsed.toString());\n          }\n          direction = keyboardScrollDirection.multiply(elapsed);\n          lastTime = +new Date();\n        }\n        direction = direction.multiply(SCROLL_VELOCITY);\n        ref.scrollTo(\n          ref.scrollLeft + direction.x,\n          ref.scrollTop - direction.y // scroll is measured from the top left\n        );\n      };\n      const interval = setInterval(action, SCROLL_INTERVAL_MS);\n      action();\n      return () => clearInterval(interval);\n    }\n  }, [keyboardScrollDirection]);\n\n  return (\n    <div\n      ref={container}\n      className={classnames({\n        'game-area': true,\n        'hidden-scrollbars': !(debug?.debugShowScrollbars || false),\n      })}\n      hidden={props.hidden}\n      onScroll={handleScroll}\n    >\n      <div className=\"virtual-game-area\">{props.children}</div>\n    </div>\n  );\n}\n","import { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\n\nexport function convertVirtualCoordsToLocation(args: {\n  virtualCoords: Vector2;\n  virtualGridLocation: Vector3;\n  virtualGridDims: Vector2;\n}): Vector3 {\n  const { virtualCoords, virtualGridLocation, virtualGridDims } = args;\n  const virtualCenter = virtualGridDims.divide(2).floor();\n  const offsetFromVirtualCenter = virtualCoords.subtract(virtualCenter);\n  let relativeLocation = Vector2.Zero;\n\n  if (offsetFromVirtualCenter.y % 2 === 0) {\n    // calculate the effect of y\n    relativeLocation = new Vector2(-1, -2).multiply(\n      offsetFromVirtualCenter.y / 2\n    );\n  } else if (virtualCenter.y % 2 === 0) {\n    // half block is not in the center row\n    /**\n     * 0: O - O - O\n     * 1:   O - O - O\n     * 2: O - O - O <- virtualCenter.y\n     * 3:   O - O - O <- offsetFromVirtualCenter.y == 1\n     */\n    relativeLocation = new Vector2(0, -1).add(\n      new Vector2(-1, -2).multiply((offsetFromVirtualCenter.y - 1) / 2)\n    );\n  } else {\n    // half block is in the center row\n    /**\n     * 0: O - O - O\n     * 1:   O - O - O <- virtualCenter.y\n     * 2: O - O - O <- offsetFromVirtualCenter.y == 1\n     * 3:   O - O - O\n     */\n    relativeLocation = new Vector2(-1, -1).add(\n      new Vector2(-1, -2).multiply((offsetFromVirtualCenter.y - 1) / 2)\n    );\n  }\n  // now add in the x offset\n  relativeLocation = relativeLocation.addX(offsetFromVirtualCenter.x);\n\n  return virtualGridLocation.add(Vector3.FromVector2(relativeLocation, 0));\n}\n\nexport function convertLocationToVirtualCoords(args: {\n  location: Vector3;\n  virtualGridLocation: Vector3;\n  virtualGridDims: Vector2;\n}): Vector2 | null {\n  const { location, virtualGridLocation, virtualGridDims } = args;\n  const virtualCenter = virtualGridDims.divide(2).floor();\n  const offsetFromVirtualGridLocation = location.subtract(virtualGridLocation);\n  let relativeVirtualCoords = Vector2.Zero;\n\n  if (offsetFromVirtualGridLocation.z !== 0) {\n    return null;\n  }\n\n  if (offsetFromVirtualGridLocation.y % 2 === 0) {\n    relativeVirtualCoords = new Vector2(-1, -2).multiply(\n      offsetFromVirtualGridLocation.y / 2\n    );\n  } else if (virtualCenter.y % 2 === 0) {\n    // half block is not in the center row\n    /**\n     * 0: O - O - O\n     * 1:   O - O - O <- offsetFromVirtualGridLocation.y == 1\n     * 2: O - O - O <- virtualCenter.y\n     * 3:   O - O - O\n     */\n    relativeVirtualCoords = new Vector2(-1, -1).add(\n      new Vector2(-1, -2).multiply((offsetFromVirtualGridLocation.y - 1) / 2)\n    );\n  } else {\n    // half block is in the center row\n    /**\n     * 0: O - O - O <- offsetFromVirtualGridLocation.y == 1\n     * 1:   O - O - O <- virtualCenter.y\n     * 2: O - O - O\n     * 3:   O - O - O\n     */\n    relativeVirtualCoords = new Vector2(0, -1).add(\n      new Vector2(-1, -2).multiply((offsetFromVirtualGridLocation.y - 1) / 2)\n    );\n  }\n  relativeVirtualCoords = relativeVirtualCoords.addX(\n    offsetFromVirtualGridLocation.x\n  );\n\n  return virtualCenter.add(relativeVirtualCoords);\n}\n\n/**\n *\n * @param args\n * @return the number of pixels, measured from the top left of the virtual area, to the center of the \"virtualCenter\" node\n */\nexport function getVirtualGridCenterPx(args: {\n  virtualGridDims: Vector2;\n  hexGridPx: Vector2;\n}) {\n  const { virtualGridDims, hexGridPx } = args;\n\n  const virtualCenter = virtualGridDims.divide(2).floor();\n  let centerPxY = (virtualCenter.y + 0.5) * hexGridPx.y;\n\n  // even rows are left-aligned, odd rows are right-aligned\n  let centerPxX = (virtualCenter.x + 0.5) * hexGridPx.x;\n  if (virtualCenter.y % 2 === 1) {\n    centerPxX += 0.5 * hexGridPx.x;\n  }\n\n  return new Vector2(centerPxX, centerPxY);\n}\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { GameState } from '../../data/GameState';\nimport {\n  NodeAllocatedStatus,\n  NodeReachableStatus,\n  NodeTakenStatus,\n} from '../../data/NodeStatus';\nimport { AllocateNodeAction } from '../../game/actions/AllocateNode';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../lib/util/geometry/vector3';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport {\n  GameAreaGrid,\n  extractGameGridSubState,\n  depsGameGridSubState,\n} from './GameAreaGrid';\nimport { GameAreaSubState } from './GameAreaInterface';\nimport { InfiniteScrollManager } from './InfiniteScrollManager';\nimport {\n  convertLocationToVirtualCoords,\n  convertVirtualCoordsToLocation,\n} from './locationUtils';\n\n/**\n * Wrapper for GameAreaGrid that manages game state location <> virtual coord conversions, as well as populating the onClick/onSelect callbacks when interacting with nodes.\n * @param virtualGridDims integer vector for # of grid cells in each dimension\n * @param appSize the playable area\n */\nexport const GameAreaStateManager = React.memo(Component);\nfunction Component(props: {\n  gameState: GameAreaSubState;\n  virtualGridDims: Vector2;\n  hexGridPx: Vector2;\n  appSize: Vector2;\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n  actions: { allocateNode: AllocateNodeAction };\n}) {\n  const { gameState, hexGridPx, appSize, virtualGridDims } = props;\n  // console.log('GameArea state manager rerender');\n\n  // Compute some helpful coordinate to location conversions. These MUST be recomputed every time virtualGridLocation changes\n  const virtualCoordsToLocation = useCallback(\n    (virtualCoords: Vector2): Vector3 => {\n      return convertVirtualCoordsToLocation({\n        virtualCoords,\n        virtualGridDims,\n        virtualGridLocation: gameState.playerUI.virtualGridLocation,\n      });\n    },\n    [gameState.playerUI.virtualGridLocation, virtualGridDims]\n  );\n  const locationToVirtualCoords = useCallback(\n    (location: Vector3): Vector2 | null => {\n      return convertLocationToVirtualCoords({\n        location,\n        virtualGridDims,\n        virtualGridLocation: gameState.playerUI.virtualGridLocation,\n      });\n    },\n    [gameState.playerUI.virtualGridLocation, virtualGridDims]\n  );\n\n  // If a node is attempted to be clicked, take its virtual dims and see if that's a valid allocation action\n  const handleUpdateNodeStatusByLocation = useCallback(\n    (args: { nodeLocation: Vector3; newStatus: NodeAllocatedStatus }) => {\n      const { nodeLocation, newStatus } = args;\n\n      const reachableStatus =\n        gameState.computed.reachableStatusMap?.get(nodeLocation) ||\n        NodeReachableStatus.false;\n      if (newStatus === NodeAllocatedStatus.TAKEN) {\n        if (reachableStatus !== NodeReachableStatus.true) {\n          console.log('cant do that, not reachable:', reachableStatus);\n          return;\n        }\n        const maybeLock = gameState.worldGen.lockMap.get(nodeLocation);\n        if (!!maybeLock) {\n          console.log('is locked', maybeLock);\n          return;\n        }\n      }\n\n      if (!gameState.playerSave.allocationStatusMap.get(nodeLocation)?.taken) {\n        props.actions.allocateNode.enqueueAction({\n          nodeLocation,\n          newStatus: NodeTakenStatus.true,\n        });\n      }\n    },\n    [\n      // props.updaters,\n      props.actions,\n      gameState.playerSave.allocationStatusMap,\n      gameState.computed.reachableStatusMap,\n      gameState.worldGen.lockMap,\n    ]\n  );\n  const handleUpdateNodeStatus = useCallback(\n    (args: { virtualCoords: Vector2; newStatus: NodeAllocatedStatus }) => {\n      const { virtualCoords, newStatus } = args;\n\n      // console.log({ got: 'here handleUpdateNodeStatus', virtualCoords, newStatus });\n      const nodeLocation: Vector3 = virtualCoordsToLocation(virtualCoords);\n      handleUpdateNodeStatusByLocation({ nodeLocation, newStatus });\n    },\n    [virtualCoordsToLocation, handleUpdateNodeStatusByLocation]\n  );\n\n  // Manage cursor \"node selected\" state\n  const setCursoredLocation = useCallback(\n    (v: Vector3 | null) => {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate((prev) => {\n        return v;\n      });\n      if (!!v) {\n        // also open the sidebar\n        props.updaters.playerUI.isSidebarOpen.enqueueUpdate(() => true);\n        props.updaters.playerUI.isLeftSidebarOpen.enqueueUpdate(() => true);\n        props.updaters.playerUI.isRightSidebarOpen.enqueueUpdate(() => true);\n      }\n    },\n    [props.updaters]\n  );\n\n  const cursoredVirtualNodeCoords: Vector2 | null = useMemo(() => {\n    if (gameState.playerUI.cursoredNodeLocation) {\n      // console.log({\n      //   3: gameState.playerUI.cursoredNodeLocation,\n      //   2: locationToVirtualCoords(gameState.playerUI.cursoredNodeLocation),\n      // });\n      return locationToVirtualCoords(gameState.playerUI.cursoredNodeLocation);\n    } else {\n      return null;\n    }\n  }, [gameState.playerUI.cursoredNodeLocation, locationToVirtualCoords]);\n\n  // manage keyboard wasdezx cusored node navigation\n  useEffect(() => {\n    // const newIntent = props.gameState.intent.newIntent;\n    const newLocation = virtualCoordsToLocation(\n      virtualGridDims.divide(2).floor()\n    );\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_EAST) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.addX(1) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_WEST) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.addX(-1) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_NORTHEAST) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.add({ x: 1, y: 1, z: 0 }) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_NORTHWEST) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.addY(1) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_SOUTHEAST) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.addY(-1) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_SOUTHWEST) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.add({ x: -1, y: -1, z: 0 }) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_SOUTH) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate((prev) => {\n        if (prev && prev.y % 2 === 0) {\n          return prev?.add({ x: 0, y: -1, z: 0 });\n        } else if (prev && prev.y % 2 !== 0) {\n          return prev?.add({ x: -1, y: -1, z: 0 });\n        } else {\n          return newLocation;\n        }\n      });\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_NORTH) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate((prev) => {\n        if (prev && prev.y % 2 === 0) {\n          return prev?.add({ x: 1, y: 1, z: 0 });\n        } else if (prev && prev.y % 2 !== 0) {\n          return prev?.add({ x: 0, y: 1, z: 0 });\n        } else {\n          return newLocation;\n        }\n      });\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_NORTHNORTH) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.add({ x: 1, y: 2, z: 0 }) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.MOVE_CURSOR_SOUTHSOUTH) {\n      props.updaters.playerUI.cursoredNodeLocation.enqueueUpdate(\n        (prev) => prev?.add({ x: -1, y: -2, z: 0 }) || newLocation\n      );\n    }\n    if (props.gameState.intent.newIntent.INTERACT_WITH_NODE) {\n      if (cursoredVirtualNodeCoords) {\n        handleUpdateNodeStatus({\n          virtualCoords: cursoredVirtualNodeCoords,\n          newStatus: NodeAllocatedStatus.TAKEN,\n        });\n      }\n    }\n  }, [\n    props.gameState.intent.newIntent.INTERACT_WITH_NODE,\n    props.gameState.intent.newIntent.MOVE_CURSOR_EAST,\n    props.gameState.intent.newIntent.MOVE_CURSOR_NORTH,\n    props.gameState.intent.newIntent.MOVE_CURSOR_NORTHNORTH,\n    props.gameState.intent.newIntent.MOVE_CURSOR_NORTHEAST,\n    props.gameState.intent.newIntent.MOVE_CURSOR_NORTHWEST,\n    props.gameState.intent.newIntent.MOVE_CURSOR_SOUTH,\n    props.gameState.intent.newIntent.MOVE_CURSOR_SOUTHSOUTH,\n    props.gameState.intent.newIntent.MOVE_CURSOR_SOUTHEAST,\n    props.gameState.intent.newIntent.MOVE_CURSOR_SOUTHWEST,\n    props.gameState.intent.newIntent.MOVE_CURSOR_WEST,\n    props.updaters,\n    virtualCoordsToLocation,\n    virtualGridDims,\n    cursoredVirtualNodeCoords,\n    handleUpdateNodeStatus,\n  ]);\n\n  useEffect(() => {\n    if (props.gameState.intent.newIntent.ZOOM_RECENTER_AT_NODE) {\n      const location = gameState.playerUI.cursoredNodeLocation;\n      if (location) {\n        // set virtual grid location\n        props.updaters.playerUI.virtualGridLocation.enqueueUpdate((prev) => {\n          return location;\n        });\n\n        props.updaters.playerUI.triggerScrollRecenterCb.enqueueUpdate(() => {\n          return () => {\n            // this is not guaranteed to ever be called\n            console.log('zoomed to location: ', { location });\n          };\n        });\n      }\n    }\n  }, [\n    props.gameState.intent.newIntent.ZOOM_RECENTER_AT_NODE,\n    gameState.playerUI.cursoredNodeLocation,\n    props.updaters,\n  ]);\n\n  // Manage keyboard scrolling here\n  // TODO(bowei): move this into infinite scroll manager. the only reason this is here is because we have access to intent object conveniently here\n  const keyboardScrollDirection: Vector2 = useMemo(() => {\n    let direction = Vector2.Zero;\n    if (props.gameState.intent.activeIntent.PAN_EAST) {\n      direction = direction.addX(1);\n    }\n    if (props.gameState.intent.activeIntent.PAN_WEST) {\n      direction = direction.addX(-1);\n    }\n    if (props.gameState.intent.activeIntent.PAN_NORTH) {\n      direction = direction.addY(1);\n    }\n    if (props.gameState.intent.activeIntent.PAN_SOUTH) {\n      direction = direction.addY(-1);\n    }\n    return direction;\n  }, [\n    props.gameState.intent.activeIntent.PAN_EAST,\n    props.gameState.intent.activeIntent.PAN_WEST,\n    props.gameState.intent.activeIntent.PAN_NORTH,\n    props.gameState.intent.activeIntent.PAN_SOUTH,\n  ]);\n\n  const infiniteScrollManagerDebug = useMemo(() => {\n    return {\n      debugShowScrollbars: gameState.debug.debugShowScrollbars,\n      enableScrollJump: gameState.debug.enableScrollJump,\n      getForceJumpOffset: gameState.debug.getForceJumpOffset,\n    };\n  }, [\n    gameState.debug.debugShowScrollbars,\n    gameState.debug.enableScrollJump,\n    gameState.debug.getForceJumpOffset,\n  ]);\n\n  const gameAreaGridDebug = useMemo(() => {\n    return {\n      rerenderGameAreaGrid: gameState.debug.rerenderGameAreaGrid,\n      getOffsetX: gameState.debug.getOffsetX,\n      isFlipCursored: gameState.debug.isFlipCursored,\n    };\n  }, [\n    gameState.debug.rerenderGameAreaGrid,\n    gameState.debug.getOffsetX,\n    gameState.debug.isFlipCursored,\n  ]);\n\n  const subGameState = useMemo(() => {\n    return extractGameGridSubState(gameState);\n    // TODO(bowei): use custom hook here so react doesnt complain so much\n    // eslint-disable-next-line\n  }, depsGameGridSubState(gameState));\n\n  return (\n    <>\n      <InfiniteScrollManager\n        hidden={!gameState.playerUI.isPixiHidden}\n        appSize={appSize}\n        triggerScrollRecenterCb={gameState.playerUI.triggerScrollRecenterCb}\n        updaters={props.updaters}\n        hexGridPx={hexGridPx}\n        virtualGridDims={virtualGridDims}\n        keyboardScrollDirection={keyboardScrollDirection}\n        debug={infiniteScrollManagerDebug}\n      >\n        <GameAreaGrid\n          gameState={subGameState}\n          virtualGridDims={virtualGridDims}\n          virtualCoordsToLocation={virtualCoordsToLocation}\n          updateNodeStatusByLocationCb={handleUpdateNodeStatusByLocation}\n          cursoredVirtualNode={cursoredVirtualNodeCoords}\n          setCursoredLocation={setCursoredLocation}\n          debug={gameAreaGridDebug}\n        />\n      </InfiniteScrollManager>\n    </>\n  );\n}\n","import React, { useMemo } from 'react';\nimport { GameState } from '../../data/GameState';\nimport { appSizeFromWindowSize } from '../../data/WindowState';\nimport { AllocateNodeAction } from '../../game/actions/AllocateNode';\nimport { Vector2 } from '../../lib/util/geometry/vector2';\nimport { extractDeps } from '../../lib/util/misc';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport COLORS from '../../pixi/colors';\nimport { CssVariablesComponent } from './CssVariables';\nimport { GameAreaStateManager } from './GameAreaStateManager';\n\n/**\n * Approximations for sqrt(3)/2 == ratio of an equilateral triangle's height to its width:\n * 6/7, 13/15 (*), 26/30, 45/52, 58/67, 84/97 (*), 97/112, 181/209 (*)\n * for divisibility -- recommend 19/22, 26/30, 52/60, 78/90, 104/120, 168/194, 180/208, 232/268, 336/388\n */\n// export const hexGridPx = new Vector2(268, 232);\n// export const hexGridPx = new Vector2(194, 168);\n// export const hexGridPx = new Vector2(120, 104);\n// export const hexGridPx = new Vector2(97, 84);\n// export const hexGridPx = new Vector2(75, 65); // TODO(bowei): change text font size to xx-small\n\n// export const hexCenterRadius = 64; // Radius of the circles representing allocatable nodes, in px\n// export const hexCenterRadius = 44; // Radius of the circles representing allocatable nodes, in px\n// export const hexCenterRadius = Math.round(hexGridPx.x / 16 - 0.025) * 4; // Radius of the circles representing allocatable nodes, in px\n\n// export const borderWidth = hexGridPx.x > 100 ? 2 : 1; // border of circles, etc. in px\n\n/**\n * How much bigger the \"virtual\" (i.e. scrollable) game area is than the visible window.\n * Bigger == more elements rendered which are outside the viewport == worse performance,\n * but need to 'jump' the scroll viewport less often.\n * Recommended default is 3.0\n */\nexport const virtualAreaScaleMultiplier = 2.0;\n\n/**\n * The subset of the game state that is relevant to game area components.\n */\nexport function extractGameAreaSubState(gameState: GameState) {\n  return {\n    playerUI: {\n      virtualGridLocation: gameState.playerUI.virtualGridLocation,\n      cursoredNodeLocation: gameState.playerUI.cursoredNodeLocation,\n      isPixiHidden: gameState.playerUI.isPixiHidden,\n      triggerScrollRecenterCb: gameState.playerUI.triggerScrollRecenterCb,\n    },\n    playerSave: {\n      allocationStatusMap: gameState.playerSave.allocationStatusMap,\n    },\n    worldGen: {\n      nodeContentsMap: gameState.worldGen.nodeContentsMap,\n      lockMap: gameState.worldGen.lockMap,\n    },\n    computed: {\n      fogOfWarStatusMap: gameState.computed.fogOfWarStatusMap,\n      reachableStatusMap: gameState.computed.reachableStatusMap,\n      lockStatusMap: gameState.computed.lockStatusMap,\n    },\n    intent: gameState.intent,\n    debug: {\n      debugShowScrollbars: gameState.debug.debugShowScrollbars,\n      rerenderGameAreaGrid: gameState.debug.rerenderGameAreaGrid,\n      enableScrollJump: gameState.debug.enableScrollJump,\n      getForceJumpOffset: gameState.debug.getForceJumpOffset,\n      getOffsetX: gameState.debug.getOffsetX,\n      isFlipCursored: gameState.debug.isFlipCursored,\n    },\n  };\n}\nexport type GameAreaSubState = ReturnType<typeof extractGameAreaSubState>;\nexport const depsGameAreaSubState = extractDeps(extractGameAreaSubState);\n\n/**\n * Handles managing constants (settings) as well as pruning down game state and updaters to what is actually relevant.\n * Helps with memoization as well.\n */\nexport function GameAreaInterface(props: {\n  gameState: GameState;\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n}) {\n  const { gameState } = props;\n\n  const appSize = useMemo(() => {\n    return appSizeFromWindowSize(\n      new Vector2(\n        gameState.windowState.innerWidth,\n        gameState.windowState.innerHeight\n      )\n    );\n  }, [gameState.windowState.innerWidth, gameState.windowState.innerHeight]);\n\n  // TODO(bowei): programmatically determine UI scale based on app size\n  const hexGridPx = useMemo(() => {\n    if (appSize.x > 1920) {\n      return new Vector2(268, 232);\n    } else {\n      return new Vector2(194, 168);\n      // return new Vector2(120, 104);\n      // return new Vector2(97, 84);\n      // return new Vector2(75, 65); // TODO(bowei): change text font size to xx-small\n    }\n  }, [appSize]);\n\n  const hexCenterRadius = useMemo(() => {\n    return Math.round(hexGridPx.x / 16 - 0.025) * 4; // Radius of the circles representing allocatable nodes, in px\n  }, [hexGridPx]);\n\n  const borderWidth = useMemo(() => {\n    return hexGridPx.x > 100 ? 2 : 1; // border of circles, etc. in px\n  }, [hexGridPx]);\n\n  const onDebugRetrigger = gameState.debug.retriggerVirtualGridDims; // triggered from debug tab to check performance\n  const virtualGridDims = useMemo(() => {\n    onDebugRetrigger();\n\n    let x = Math.floor(\n      (appSize.x * virtualAreaScaleMultiplier) / hexGridPx.x - 0.5\n    );\n    let y = Math.floor((appSize.y * virtualAreaScaleMultiplier) / hexGridPx.y);\n\n    // y = (Math.floor((y - 1) / 2) * 2) + 1; // force y to be odd\n\n    // needs to be at least 3.8 x 4.8 so we have room for jumps\n    // x = Math.max(4, x);\n    // y = Math.max(5, y);\n\n    return new Vector2(x, y);\n  }, [appSize, onDebugRetrigger, hexGridPx]);\n\n  const subGameState: GameAreaSubState = useMemo(() => {\n    return extractGameAreaSubState(gameState);\n    // TODO(bowei): use custom hook here so react doesnt complain so much\n    // eslint-disable-next-line\n  }, depsGameAreaSubState(gameState));\n\n  // TODO(bowei): improve this abstraction??\n  const actions = useMemo(() => {\n    return { allocateNode: new AllocateNodeAction(props.updaters) };\n  }, [props.updaters]);\n\n  return (\n    <>\n      <CssVariablesComponent\n        appSize={appSize}\n        hexCenterRadius={hexCenterRadius}\n        hexGridPx={hexGridPx}\n        borderWidth={borderWidth}\n        COLORS={COLORS}\n      />\n      <GameAreaStateManager\n        appSize={appSize}\n        virtualGridDims={virtualGridDims}\n        hexGridPx={hexGridPx}\n        gameState={subGameState}\n        updaters={props.updaters}\n        actions={actions}\n      />\n    </>\n  );\n}\n","import React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { GameState } from '../../../data/GameState';\nimport { UpdaterGeneratorType2 } from '../../../lib/util/updaterGenerator';\nimport { Vector2 } from '../../../lib/util/geometry/vector2';\nimport { PlayerUIState } from '../../../data/PlayerUIState';\nimport { WorldGenStateFactory } from '../../../game/worldGen/WorldGenStateFactory';\nimport { appSizeFromWindowSize } from '../../../data/WindowState';\nimport { virtualAreaScaleMultiplier } from '../../GameArea/GameAreaInterface';\nimport { PlayerSaveState } from '../../../data/PlayerSaveState';\n\nexport function DebugTabContent(props: {\n  gameState: GameState; // definitely needs gameState.tick in order that this component updates regularly\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n  hidden: boolean;\n}) {\n  const { gameState } = props;\n  const { tick } = gameState;\n\n  const [lastUpdated, setLastUpdated] = useState(+new Date());\n  const [slowRenderMsgs, setSlowRenderMsgs] = useState<string[]>([]);\n\n  const appSize = useMemo(() => {\n    return appSizeFromWindowSize(\n      new Vector2(\n        gameState.windowState.innerWidth,\n        gameState.windowState.innerHeight\n      )\n    );\n  }, [gameState.windowState.innerWidth, gameState.windowState.innerHeight]);\n\n  // TODO(bowei): re-factor this from game area interface\n  // TODO(bowei): programmatically determine UI scale based on app size\n  const hexGridPx = useMemo(() => {\n    if (appSize.x > 1920) {\n      return new Vector2(268, 232);\n    } else {\n      return new Vector2(194, 168);\n      // return new Vector2(120, 104);\n      // return new Vector2(97, 84);\n      // return new Vector2(75, 65); // TODO(bowei): change text font size to xx-small\n    }\n  }, [appSize]);\n\n  const virtualGridDims = useMemo(() => {\n    let x = Math.floor(\n      (appSize.x * virtualAreaScaleMultiplier) / hexGridPx.x - 0.5\n    );\n    let y = Math.floor((appSize.y * virtualAreaScaleMultiplier) / hexGridPx.y);\n\n    // y = (Math.floor((y - 1) / 2) * 2) + 1; // force y to be odd\n\n    // needs to be at least 3.8 x 4.8 so we have room for jumps\n    // x = Math.max(4, x);\n    // y = Math.max(5, y);\n\n    return new Vector2(x, y);\n  }, [appSize, hexGridPx]);\n\n  useEffect(() => {\n    const now = new Date();\n    const msSinceLastTick = +now - lastUpdated;\n    if (msSinceLastTick > 30) {\n      const msg = `Tick ${tick} took ${msSinceLastTick}ms at ${\n        now.toTimeString().split(' ')[0]\n      }`;\n      console.log(msg);\n      setSlowRenderMsgs((prev) => {\n        return [msg, ...prev];\n      });\n    }\n    setLastUpdated(+new Date());\n  }, [tick, lastUpdated, setLastUpdated, setSlowRenderMsgs]);\n\n  const virtualGridDimsTrigger = useCallback(() => {\n    console.log('tried triggered update from debug tab');\n    // NOTE(bowei): this apparently takes around 100ms alone. full jump takes ~200ms\n    props.updaters.debug.retriggerVirtualGridDims.enqueueUpdate((prev) => {\n      return () => {\n        console.log('force triggered update from debug tab');\n      };\n    });\n  }, [props.updaters]);\n\n  const toggleScrollbars = useCallback(() => {\n    props.updaters.debug.debugShowScrollbars?.enqueueUpdate((prev) => {\n      const next = !prev;\n      return next;\n    });\n  }, [props.updaters]);\n\n  const gameAreaGridRerender = useCallback(() => {\n    props.updaters.debug.rerenderGameAreaGrid.enqueueUpdate((prev) => {\n      return () => {\n        console.log('force triggered react rerender from debug tab');\n      };\n    });\n  }, [props.updaters]);\n\n  const onDisableScrollJump = useCallback(() => {\n    props.updaters.debug.enableScrollJump.enqueueUpdate(() => {\n      return false;\n    });\n  }, [props.updaters]);\n\n  const onEnableScrollJump = useCallback(() => {\n    props.updaters.debug.enableScrollJump.enqueueUpdate(() => {\n      return true;\n    });\n  }, [props.updaters]);\n\n  const forceVirtualGridJump = useCallback(() => {\n    props.updaters.debug.getForceJumpOffset.enqueueUpdate((prev) => {\n      return () => {\n        console.log('force triggered virtual jump only');\n        return new Vector2(1, 2);\n      };\n    });\n  }, [props.updaters]);\n\n  const addDebugOffsetX = useCallback(() => {\n    props.updaters.debug.getOffsetX.enqueueUpdate((prev) => {\n      const offsetX = prev() || 0;\n      return () => {\n        return offsetX + 1;\n      };\n    });\n  }, [props.updaters]);\n\n  const flipCursored = useCallback(() => {\n    props.updaters.debug.isFlipCursored.enqueueUpdate((prev) => {\n      const flipCursored = prev() || false;\n      return () => {\n        return !flipCursored;\n      };\n    });\n  }, [props.updaters]);\n\n  const toggleTextBoxFocused = useCallback(() => {\n    props.updaters.playerUI.isTextBoxFocused.enqueueUpdate((prev) => {\n      const isTextBoxFocused = !prev;\n      console.log({ isTextBoxFocused });\n      return isTextBoxFocused;\n    });\n  }, [props.updaters]);\n\n  const saveLocalStorage = useCallback(() => {\n    PlayerUIState.store(props.gameState.playerUI);\n  }, [props.gameState]);\n\n  const loadLocalStorage = useCallback(() => {\n    const loaded = PlayerUIState.load();\n    if (loaded) {\n      props.updaters.playerUI.enqueueUpdate(() => loaded);\n    }\n  }, [props.updaters]);\n\n  const clearLocalStorage = useCallback(() => {\n    PlayerUIState.clear();\n    new WorldGenStateFactory({}).clear();\n    PlayerSaveState.clear();\n    props.updaters.justDisabledSave.enqueueUpdate(true);\n  }, [props.updaters]);\n\n  const clearSave = useCallback(() => {\n    PlayerSaveState.clear();\n    props.updaters.playerSave.enqueueUpdate((prev) => {\n      return PlayerSaveState.new();\n    });\n    props.updaters.justDisabledSave.enqueueUpdate(true);\n  }, [props.updaters]);\n\n  if (props.hidden) {\n    return <> </>;\n  }\n  return (\n    <>\n      <div> debug tab </div>\n      <div className=\"tab-content-body\">\n        <br></br>\n        <div>Recent slow renders:</div>\n        {slowRenderMsgs.slice(0, 5).map((it, idx) => {\n          return <div key={idx}>{it}</div>;\n        })}\n        <br></br>\n      </div>\n      <br></br>\n      <div> virtual grid location </div>\n      <div>\n        ( {gameState.playerUI.virtualGridLocation.x} ,{' '}\n        {gameState.playerUI.virtualGridLocation.y} )\n      </div>\n      <br></br>\n      <div> virtual grid dims </div>\n      <div>\n        ( {virtualGridDims.x} , {virtualGridDims.y} )\n      </div>\n      <br></br>\n      <div> buttons </div>\n      <div className=\"tab-content-body\">\n        <br></br>\n        <div>\n          <button onClick={toggleScrollbars}>Toggle scrollbars</button>\n        </div>\n        <div>\n          <button onClick={virtualGridDimsTrigger}>\n            Trigger virtual grid dims rerender\n          </button>\n        </div>\n        <div>\n          <button onClick={gameAreaGridRerender}>\n            Trigger only virtual game area grid react rerender\n          </button>\n        </div>\n        <div>\n          <button onClick={onDisableScrollJump}>\n            Disable scroll jump trigger\n          </button>\n        </div>\n        <div>\n          <button onClick={onEnableScrollJump}>\n            Reenable scroll jump trigger\n          </button>\n        </div>\n        <div>\n          <button onClick={forceVirtualGridJump}>\n            Force virtual grid jump only\n          </button>\n        </div>\n        <div>\n          <button onClick={addDebugOffsetX}>add weird x offset to grid</button>\n        </div>\n        <div>\n          <button onClick={flipCursored}>\n            weird flip cursored state on all nodes\n          </button>\n        </div>\n        <div>\n          <button onClick={toggleTextBoxFocused}>\n            toggle text box focused\n          </button>\n        </div>\n        <div>\n          <button onClick={saveLocalStorage}>\n            save state to local storage\n          </button>\n        </div>\n        <div>\n          <button onClick={loadLocalStorage}>\n            load state from local storage\n          </button>\n        </div>\n        <div>\n          <button onClick={clearLocalStorage}>\n            clear local storage and disable saving\n          </button>\n        </div>\n        <div>\n          <button onClick={clearSave}>clear save</button>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useCallback, useState } from 'react';\nimport { UpdaterGeneratorType2 } from '../../../lib/util/updaterGenerator';\nimport { GameState } from '../../../data/GameState';\nimport {\n  Attribute,\n  Modifier,\n} from '../../../game/worldGen/nodeContents/NodeContentsFactory';\nimport {\n  AttributeDescriptionMap,\n  AttributeSymbolMap,\n  ModifierDescriptionMap,\n  ModifierSymbolMap,\n} from '../../../game/worldGen/nodeContents/NodeContentsRendering';\n\nexport const StrategicTab = React.memo(StrategicTabComponent);\n\n// TODO(bowei): prune down state\nfunction StrategicTabComponent(props: {\n  gameState: GameState;\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n}) {\n  const { gameState, updaters } = props;\n\n  const [showAdvancedSearch, setShowAdvancedSearch] = useState(false);\n  const [highlightInputValue, setHighlightInputValue] = useState('');\n\n  const onFocus = useCallback(() => {\n    updaters.playerUI.isTextBoxFocused.enqueueUpdate(true);\n  }, [updaters]);\n  const onBlur = useCallback(() => {\n    updaters.playerUI.isTextBoxFocused.enqueueUpdate(false);\n  }, [updaters]);\n\n  const onFireSearch = useCallback(() => {\n    updaters.playerUI.strategicSearch.highlight1.enqueueUpdate(() => {\n      return {\n        value: highlightInputValue,\n      };\n    });\n  }, [updaters, highlightInputValue]);\n\n  // const onCancelSearch = useCallback(() => {\n  //   setHighlightInputValue(gameState.playerUI.strategicSearch.highlight1.value);\n  // }, [gameState.playerUI.strategicSearch.highlight1.value]);\n  const onCancelSearch = useCallback(() => {\n    setHighlightInputValue('');\n    updaters.playerUI.strategicSearch.highlight1.enqueueUpdate(() => {\n      return {\n        value: '',\n      };\n    });\n  }, [updaters]);\n\n  const onToggleColors = useCallback(\n    (value: 'Yes' | 'Only unallocated' | 'No', e: React.MouseEvent) => {\n      updaters.playerUI.strategicSearch.colors.enabled.enqueueUpdate((prev) => {\n        return value;\n      });\n    },\n    [updaters]\n  );\n\n  if (gameState.playerUI.isPixiHidden) {\n    return (\n      <>\n        <div>Strategic view is not open!</div>\n        <br></br>\n        <div>Click (hotkey: b) to toggle strategic view.</div>\n      </>\n    );\n  }\n  return (\n    <>\n      <div>{showAdvancedSearch ? 'Custom' : 'Basic'} search</div>\n      <br></br>\n      <div className=\"tab-content-body\">\n        <div>\n          Colors enabled?\n          <HorizontalButtonRadio\n            labels={['Always', 'Only unallocated', 'No']}\n            values={['Yes', 'Only unallocated', 'No']}\n            defaultValue={gameState.playerUI.strategicSearch.colors.enabled}\n            onChange={onToggleColors}\n          />\n        </div>\n        <br></br>\n        <div>\n          Symbols: {/* TODO(bowei): need tooltip text here */}\n          <SymbolButton\n            updateTextInputValue={setHighlightInputValue}\n            attribute={Attribute.RED0}\n          />\n          <SymbolButton\n            updateTextInputValue={setHighlightInputValue}\n            attribute={Attribute.RED1}\n          />\n          <SymbolButton\n            updateTextInputValue={setHighlightInputValue}\n            attribute={Attribute.RED2}\n          />\n          <SymbolButton\n            updateTextInputValue={setHighlightInputValue}\n            attribute={Attribute.DEL0}\n          />\n          <SymbolButton\n            updateTextInputValue={setHighlightInputValue}\n            attribute={Attribute.DEL1}\n          />\n          <SymbolButton\n            updateTextInputValue={setHighlightInputValue}\n            attribute={Attribute.DEL2}\n          />\n          <TextInputButton\n            updateTextInputValue={setHighlightInputValue}\n            icon={'*'}\n            insertedText={'[*] '}\n          />\n          <br></br>\n          <TextInputButton\n            updateTextInputValue={setHighlightInputValue}\n            id={Modifier.FLAT}\n            icon={ModifierSymbolMap[Modifier.FLAT]}\n            insertedText={'[' + ModifierDescriptionMap[Modifier.FLAT] + '] '}\n          />\n          <TextInputButton\n            updateTextInputValue={setHighlightInputValue}\n            id={Modifier.INCREASED}\n            icon={ModifierSymbolMap[Modifier.INCREASED]}\n            insertedText={\n              '[' + ModifierDescriptionMap[Modifier.INCREASED] + '] '\n            }\n          />\n        </div>\n        <br></br>\n        <div>\n          Highlight:{' '}\n          <input\n            type={'text'}\n            onFocus={onFocus}\n            onChange={(e) => {\n              // need to set value manually: https://stackoverflow.com/questions/41736213/why-cant-i-change-my-input-value-in-react-even-with-the-onchange-listener\n              setHighlightInputValue(e.target.value);\n            }}\n            onBlur={onBlur}\n            value={highlightInputValue}\n          ></input>\n          <button onClick={onFireSearch}>🔎</button>\n          <button onClick={onCancelSearch}>🚫</button>\n        </div>\n        {showAdvancedSearch ? (\n          <>\n            <div>\n              Highlight 2: <input type={'text'}></input>\n              <button>Apply</button>\n              <button>Cancel</button>\n            </div>\n            <br></br>\n            <div>Filter:</div>\n            <br></br>\n            <div>\n              Show if: <input type={'text'}></input>\n              <button>Apply</button>\n              <button>Cancel</button>\n            </div>\n            <br></br>\n            <div>Color:</div>\n            <br></br>\n            <div>\n              Grayscale by: <input type={'text'}></input>\n              <button>Apply</button>\n              <button>Cancel</button>\n            </div>\n            <div>\n              Color by: <input type={'text'}></input>\n              <button>Apply</button>\n              <button>Cancel</button>\n            </div>\n            <br></br>\n            <div>Shape:</div>\n            <br></br>\n            <div>\n              Shape = | if: <input type={'text'}></input>\n              <button>Apply</button>\n              <button>Cancel</button>\n            </div>\n            <br></br>\n            <br></br>\n            <div>\n              <input type={'text'}></input>\n              <button>Save config</button>\n            </div>\n            <div>\n              <input type={'text'}></input>\n              <button>Load config</button>\n            </div>\n            <div>\n              <button>Reset to defaults</button>\n            </div>\n            <br></br>\n            <div>\n              <button\n                onClick={() => {\n                  setShowAdvancedSearch(false);\n                }}\n              >\n                Use basic search\n              </button>\n            </div>\n          </>\n        ) : (\n          <>\n            <br></br>\n            <div>\n              <button\n                onClick={() => {\n                  setShowAdvancedSearch(true);\n                }}\n              >\n                Use custom search\n              </button>\n            </div>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction SymbolButton(props: {\n  updateTextInputValue: (fn: (s: string) => string) => void;\n  attribute: Attribute;\n}) {\n  return (\n    <TextInputButton\n      updateTextInputValue={props.updateTextInputValue}\n      insertedText={'[' + AttributeDescriptionMap[props.attribute] + '] '}\n      icon={AttributeSymbolMap[props.attribute]}\n    />\n  );\n}\n\nfunction TextInputButton(props: {\n  updateTextInputValue: (fn: (s: string) => string) => void;\n  icon: string;\n  id?: any;\n  insertedText: string;\n}) {\n  return (\n    <button\n      onMouseDown={(e) => {\n        // needed to preserve textbox focus: https://stackoverflow.com/questions/12154954/how-to-make-element-not-lose-focus-when-button-is-pressed\n        // keydown does NOT work here!\n        e.preventDefault();\n      }}\n      onPointerDown={(e) => {\n        e.preventDefault();\n      }}\n      onClick={(e) => {\n        e.preventDefault();\n        props.updateTextInputValue((prev) => prev + props.insertedText);\n      }}\n    >\n      {props.icon}\n    </button>\n  );\n}\n\nfunction HorizontalButtonRadio<T>(props: {\n  labels: (string | React.ReactNode)[];\n  values: T[];\n  defaultValue: T | null;\n  onChange: (value: T, e: React.MouseEvent) => void;\n}) {\n  const { labels, values, defaultValue, onChange } = props;\n\n  const defaultIdx = defaultValue ? values.indexOf(defaultValue) : -1;\n  const [currentIdx, setCurrentIdx] = useState(defaultIdx);\n\n  const len = Math.min(labels.length, values.length);\n\n  const body = Array(len)\n    .fill(0)\n    .map((_, idx) => {\n      return (\n        <button\n          key={idx}\n          disabled={idx === currentIdx}\n          onClick={(e: React.MouseEvent) => {\n            setCurrentIdx(idx);\n            onChange(values[idx], e);\n          }}\n        >\n          {labels[idx]}\n        </button>\n      );\n    });\n\n  return <>{body}</>;\n}\n","import React, { useCallback } from 'react';\nimport { GameState } from '../../../data/GameState';\nimport { NodeTakenStatus } from '../../../data/NodeStatus';\nimport { AllocateNodeAction } from '../../../game/actions/AllocateNode';\nimport { Vector2 } from '../../../lib/util/geometry/vector2';\nimport { Vector3 } from '../../../lib/util/geometry/vector3';\nimport { UpdaterGeneratorType2 } from '../../../lib/util/updaterGenerator';\nimport {\n  nodeContentsToDom,\n  STARTING_NODE_DESCRIPTION,\n} from '../../GameArea/computeVirtualNodeDataMap';\n\nexport const SelectedNodeTabContent = React.memo(\n  SelectedNodeTabContentComponent\n);\n\n// TODO(bowei): trim down the game state here\nfunction SelectedNodeTabContentComponent(props: {\n  gameState: GameState;\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n  actions: { allocateNode: AllocateNodeAction };\n}) {\n  const { gameState } = props;\n  const location = gameState.playerUI.cursoredNodeLocation;\n\n  const onAllocate = useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n      if (location) {\n        props.actions.allocateNode.enqueueAction({\n          nodeLocation: location,\n          newStatus: NodeTakenStatus.true,\n        });\n      }\n    },\n    [props.actions.allocateNode, location]\n  );\n\n  const onZoom = useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n      if (location) {\n        // set virtual grid location\n        props.updaters.playerUI.virtualGridLocation.enqueueUpdate((prev) => {\n          return location;\n        });\n\n        props.updaters.playerUI.triggerScrollRecenterCb.enqueueUpdate(() => {\n          return () => {\n            // this is not guaranteed to ever be called\n            console.log('zoomed to location: ', { location });\n          };\n        });\n      }\n    },\n    [props.updaters, location]\n  );\n\n  if (location === null) {\n    return (\n      <>\n        <div>Nothing selected!</div>\n        <div>\n          <br></br>\n        </div>\n        <div>Hover and click the</div>\n        <div> question mark tooltip to</div>\n        <div>select a node.</div>\n      </>\n    );\n  }\n  let xyCoords = new Vector2(\n    location.x - location.y / 2,\n    (location.y * Math.sqrt(3)) / 2\n  );\n  xyCoords = new Vector2(\n    Math.round(xyCoords.x * 100) / 100,\n    Math.round(xyCoords.y * 100) / 100\n  );\n\n  const takenStatus =\n    gameState.playerSave.allocationStatusMap?.get(location)?.taken || false;\n  const reachableStatus =\n    gameState.computed.reachableStatusMap?.get(location)?.reachable || false;\n  const visibleStatus =\n    gameState.computed.fogOfWarStatusMap?.get(location)?.visible || false;\n  const lockData = visibleStatus\n    ? gameState.worldGen.lockMap?.get(location) || null\n    : null;\n  // const lockStatus = gameState.computed.lockStatusMap?.get(location) || null;\n\n  const canBeAllocated = reachableStatus && !lockData && !takenStatus;\n\n  let description = '';\n  if (location.equals(Vector3.Zero)) {\n    description = STARTING_NODE_DESCRIPTION;\n  } else if (!visibleStatus) {\n    description = 'Unknown.';\n  } else if (gameState.worldGen.lockMap?.get(location) !== undefined) {\n    description = 'A locked node.';\n  } else {\n    description = 'An allocatable node.';\n  }\n\n  const nodeContents = visibleStatus\n    ? gameState.worldGen.nodeContentsMap.get(location) || null\n    : null;\n  const nodeContentsDom = nodeContents?.lines[0]\n    ? nodeContentsToDom(nodeContents)\n    : 'empty';\n\n  return (\n    <>\n      <div className=\"tab-content-body\">\n        <div>\n          Location: ( {xyCoords.x} , {xyCoords.y} ) , z-layer = {location.z}\n        </div>\n        <br></br>\n        <div>\n          <button onClick={onZoom}>Recenter on here (hotkey: r, {'\\\\'})</button>\n        </div>\n        <br></br>\n        <div>Description: {description}</div>\n        <br></br>\n        <div>Taken?: {takenStatus.toString()}</div>\n        <div>Reachable?: {reachableStatus.toString()}</div>\n        <div>Visible?: {visibleStatus.toString()}</div>\n        {visibleStatus ? (\n          <>\n            <div>Locked?: {(!!lockData).toString()}</div>\n            <div>Can be allocated?: {canBeAllocated.toString()}</div>\n            <br></br>\n            <div>Contents: {nodeContentsDom}</div>\n            <br></br>\n            <button disabled={!canBeAllocated} onClick={onAllocate}>\n              Allocate (hotkey: spacebar)\n            </button>\n          </>\n        ) : (\n          <> </>\n        )}\n      </div>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { GameState } from '../../../data/GameState';\nimport {\n  Attribute,\n  Modifier,\n} from '../../../game/worldGen/nodeContents/NodeContentsFactory';\nimport {\n  AttributeDescriptionMap,\n  AttributeSymbolMap,\n} from '../../../game/worldGen/nodeContents/NodeContentsRendering';\nimport { enumKeys } from '../../../lib/util/misc';\nimport { UpdaterGeneratorType2 } from '../../../lib/util/updaterGenerator';\n\nexport const StatsTab = React.memo(StatsTabComponent);\n\n// TODO(bowei): trim down the game state here\nfunction StatsTabComponent(props: {\n  gameState: GameState;\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n}) {\n  const { gameState } = props;\n\n  const [isOpen, setOpen] = useState(false);\n\n  const attributeInfos = Object.fromEntries(\n    enumKeys(Attribute).map((attribute) => {\n      const desc = AttributeDescriptionMap[attribute];\n      const symbol = AttributeSymbolMap[attribute];\n\n      const modifiers = Object.fromEntries(\n        enumKeys(Modifier).map((modifier) => {\n          const amount = gameState.playerSave.allocationStatusMap\n            .entries()\n            .map((pair) => {\n              const [location, status] = pair;\n              if (!status.taken) {\n                // skip nodes that are not taken === true\n                return 0;\n              }\n\n              // look for nodes with attribute\n              const nodeContents =\n                gameState.worldGen.nodeContentsMap.get(location);\n              if (\n                nodeContents.lines[0]?.attribute === attribute &&\n                nodeContents.lines[0]?.modifier === modifier\n              ) {\n                return nodeContents.lines[0].amount;\n              } else if (\n                nodeContents.lines[1]?.attribute === attribute &&\n                nodeContents.lines[1]?.modifier === modifier\n              ) {\n                return nodeContents.lines[1].amount;\n              } else {\n                return 0;\n              }\n            })\n            .reduce((pv, cv) => pv + cv);\n\n          return [modifier, amount];\n        })\n      );\n\n      const attributeInfo = (\n        <>\n          <details className=\"details\" open={isOpen}>\n            <summary>\n              {' '}\n              {symbol} ({desc}):\n            </summary>\n            <div className=\"details-body\">\n              <div>+: {modifiers[Modifier.FLAT]}</div>\n              <div>%: {modifiers[Modifier.INCREASED]}</div>\n              <div className=\"final-total\">\n                Total:{' '}\n                {Math.round(\n                  modifiers[Modifier.FLAT] *\n                    (1 + 0.01 * modifiers[Modifier.INCREASED])\n                )}\n              </div>\n            </div>\n          </details>\n        </>\n      );\n      return [attribute, attributeInfo];\n    })\n  );\n\n  return (\n    <>\n      <div>Current stats</div>\n      <br></br>\n      <div>\n        <button\n          onClick={() => {\n            setOpen(true);\n          }}\n        >\n          Open all\n        </button>{' '}\n        <button\n          onClick={() => {\n            setOpen(false);\n          }}\n        >\n          Close all\n        </button>\n      </div>\n      <br></br>\n      <div className=\"tab-content-body\">\n        {attributeInfos[Attribute.RED0]}\n        {attributeInfos[Attribute.RED1]}\n        {attributeInfos[Attribute.RED2]}\n        {attributeInfos[Attribute.DEL0]}\n        {attributeInfos[Attribute.DEL1]}\n        {attributeInfos[Attribute.DEL2]}\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport './TabContent.css';\nimport { GameState } from '../../data/GameState';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport { DebugTabContent } from './Tabs/DebugTab';\nimport { StrategicTab } from './Tabs/StrategicTab';\nimport { SelectedNodeTabContent } from './Tabs/SelectedNodeTab';\nimport { AllocateNodeAction } from '../../game/actions/AllocateNode';\nimport { StatsTab } from './Tabs/StatsTab';\nimport { HelpTab } from './Tabs/HelpTab';\n\nexport enum TAB_NAME {\n  EMPTY = 'EMPTY',\n  SELECTED_NODE = 'SELECTED_NODE',\n  STATS = 'STATS',\n  QUESTS = 'QUESTS',\n  DEBUG = 'DEBUG',\n  HELP = 'HELP',\n  STRATEGIC_VIEW = 'STRATEGIC_VIEW',\n}\n\n// in charge of constructing content. no css\nexport function TabContentInterface(props: {\n  tabName: TAB_NAME;\n  gameState: GameState;\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n  actions: { allocateNode: AllocateNodeAction };\n}) {\n  const { tabName } = props;\n\n  const tabComponents = {\n    [TAB_NAME.EMPTY]: <EmptyTabContent />,\n    [TAB_NAME.SELECTED_NODE]: (\n      <SelectedNodeTabContent\n        gameState={props.gameState}\n        updaters={props.updaters}\n        actions={props.actions}\n      />\n    ),\n    [TAB_NAME.STATS]: (\n      <StatsTab gameState={props.gameState} updaters={props.updaters} />\n    ),\n    [TAB_NAME.QUESTS]: <>quests info???</>,\n    [TAB_NAME.STRATEGIC_VIEW]: (\n      <StrategicTab gameState={props.gameState} updaters={props.updaters} />\n    ),\n    [TAB_NAME.DEBUG]: (\n      <DebugTabContent\n        gameState={props.gameState}\n        updaters={props.updaters}\n        hidden={tabName !== TAB_NAME.DEBUG}\n      />\n    ),\n    [TAB_NAME.HELP]: <HelpTab />,\n  };\n\n  return <TabContentSelector tabComponents={tabComponents} tabName={tabName} />;\n}\n\n// layout & switch statement. pure. no knowledge of game state\nfunction TabContentSelector(props: {\n  tabComponents: { [k in TAB_NAME]: React.ReactNode };\n  tabName: TAB_NAME;\n}) {\n  const selectedTabName = props.tabName;\n  const tabNames = Object.keys(TAB_NAME) as TAB_NAME[];\n\n  return (\n    <>\n      {tabNames.map((tabName) => {\n        return (\n          <div key={tabName} hidden={tabName !== selectedTabName}>\n            {props.tabComponents[tabName]!}\n          </div>\n        );\n      })}\n    </>\n  );\n}\n\n/**\n * Tabs\n */\nexport const EmptyTabContent = React.memo(EmptyTabContentComponent);\nfunction EmptyTabContentComponent(props: {}) {\n  console.log('got here empty tab content');\n  return <div>Nothing here!</div>;\n}\n","import React from 'react';\n\nexport function HelpTab() {\n  return (\n    <>\n      <div>How to play the game</div>\n      <br></br>\n      <div className=\"tab-content-body\">\n        <div>CONTROLS</div>\n        <br></br>\n        <CheckboxDiv>Use hotkey: t, y to open and close the tabs.</CheckboxDiv>\n        <CheckboxDiv>Use hotkey: b to toggle strategic view.</CheckboxDiv>\n        <CheckboxDiv>\n          Move the tabs around using \"send left/right\" buttons.\n        </CheckboxDiv>\n        <CheckboxDiv>Open the Stats tab.</CheckboxDiv>\n        <CheckboxDiv>Open the Quest tab.</CheckboxDiv>\n        <br></br>\n        <div>GAME</div>\n        <br></br>\n        <CheckboxDiv>Hover over some nodes.</CheckboxDiv>\n        <CheckboxDiv>\n          Left click on an available node to allocate it.\n        </CheckboxDiv>\n        <CheckboxDiv>\n          Left click on any other node to view detailed info.\n        </CheckboxDiv>\n        <CheckboxDiv>Close the selected node tab.</CheckboxDiv>\n        <br></br>\n        <div>STRATEGIC VIEW</div>\n        <br></br>\n        <CheckboxDiv>\n          Open the strategic view tab while strategic view is open.\n        </CheckboxDiv>\n        <CheckboxDiv>Toggle colors.</CheckboxDiv>\n        <CheckboxDiv>\n          Try adding an attribute to the search bar by clicking a symbol.\n        </CheckboxDiv>\n        <CheckboxDiv>Click search to highlight those attributes.</CheckboxDiv>\n        <CheckboxDiv>Click cancel to reset the search.</CheckboxDiv>\n      </div>\n    </>\n  );\n}\n\nfunction CheckboxDiv(props: { children: any }) {\n  return (\n    <div>\n      <input type=\"checkbox\" /> {props.children}\n    </div>\n  );\n}\n","import { TAB_NAME } from '../components/Sidebars/TabContentInterface';\nimport { Vector2 } from '../lib/util/geometry/vector2';\nimport { Vector3 } from '../lib/util/geometry/vector3';\n\nexport const initialTabLabels: { [k in 'left' | 'right']: TAB_NAME[] } = {\n  left: [TAB_NAME.HELP],\n  right: [\n    TAB_NAME.SELECTED_NODE,\n    TAB_NAME.STATS,\n    TAB_NAME.QUESTS,\n    TAB_NAME.DEBUG,\n    TAB_NAME.STRATEGIC_VIEW,\n  ],\n};\n\nexport type PlayerUIState = {\n  /**\n   * Determines if pixi (i.e. strategic view) is hidden or not.\n   */\n  isPixiHidden: boolean;\n  /**\n   * Determines where in the universe the user has scrolled to.\n   */\n  virtualGridLocation: Vector3;\n  /**\n   * Which, if any, node is highlighted with a selection cursor\n   */\n  cursoredNodeLocation: Vector3 | null;\n  /**\n   * state of the sidebar component\n   */\n  isSidebarOpen: boolean;\n  isLeftSidebarOpen: boolean;\n  isRightSidebarOpen: boolean;\n  /**\n   * whether or not the cursor is captured by a text entry element. if so, we need to allow default behavior on keyboard events\n   */\n  isTextBoxFocused: boolean;\n  /**\n   * change this state in order to trigger a useeffect which causes scroll to recenter. this function is not guaranteed to be ever be called\n   */\n  triggerScrollRecenterCb: () => void;\n\n  /**\n   * Tab controls.\n   */\n  tabs: {\n    left: {\n      tabs: TAB_NAME[];\n      activeIndex: number;\n    };\n    right: {\n      tabs: TAB_NAME[];\n      activeIndex: number;\n    };\n  };\n\n  strategicSearch: StrategicSearchState;\n\n  // WIP?\n  virtualApproximateScroll?: Vector2;\n  strategicGridLocation?: Vector3;\n};\n\nexport type StrategicSearchState = {\n  colors: {\n    enabled: 'Yes' | 'Only unallocated' | 'No';\n  };\n  highlight1: {\n    value: string;\n  };\n};\n\nexport const newPlayerUIState = (): PlayerUIState => {\n  return {\n    triggerScrollRecenterCb: () => {},\n    tabs: {\n      left: {\n        tabs: initialTabLabels['left'],\n        activeIndex: 0,\n      },\n      right: {\n        tabs: initialTabLabels['right'],\n        activeIndex: 0,\n      },\n    },\n    strategicSearch: {\n      colors: {\n        enabled: 'Only unallocated',\n      },\n      highlight1: {\n        value: '',\n      },\n    },\n    isPixiHidden: true,\n    virtualGridLocation: Vector3.Zero,\n    cursoredNodeLocation: null,\n    isSidebarOpen: false,\n    isLeftSidebarOpen: true,\n    isRightSidebarOpen: false,\n    isTextBoxFocused: false,\n  };\n};\n\nconst serializeToObject = (s: PlayerUIState): object => {\n  return {\n    ...s,\n    triggerScrollRecenterCb: undefined,\n    virtualGridLocation: Vector3.SerializeToObject(s.virtualGridLocation),\n  };\n};\n\nconst serialize = (s: PlayerUIState) => JSON.stringify(serializeToObject(s));\n\nconst deserializeFromObject = (obj: any): PlayerUIState | null => {\n  if (\n    !obj ||\n    !obj.hasOwnProperty('isPixiHidden') ||\n    !obj.hasOwnProperty('virtualGridLocation') ||\n    !obj.hasOwnProperty('cursoredNodeLocation') ||\n    !obj.hasOwnProperty('isSidebarOpen') ||\n    !obj.hasOwnProperty('isLeftSidebarOpen') ||\n    !obj.hasOwnProperty('isRightSidebarOpen') ||\n    !obj.hasOwnProperty('isTextBoxFocused') ||\n    !obj.hasOwnProperty('tabs') ||\n    !obj.hasOwnProperty('strategicSearch')\n  ) {\n    console.error('Failed deserializing PlayerUIState: ', obj);\n    return null;\n  }\n  const { strategicSearch } = obj;\n  if (\n    !strategicSearch ||\n    !strategicSearch.hasOwnProperty('colors') ||\n    !strategicSearch.hasOwnProperty('highlight1')\n  ) {\n    console.error('Failed deserializing PlayerUIState: ', obj);\n    return null;\n  }\n\n  const virtualGridLocation = Vector3.Deserialize(obj.virtualGridLocation);\n  if (!virtualGridLocation) {\n    console.error('Failed deserializing PlayerUIState: ', obj);\n    return null;\n  }\n  const cursoredNodeLocation = Vector3.Deserialize(obj.cursoredNodeLocation);\n\n  return {\n    ...(obj as PlayerUIState),\n    virtualGridLocation,\n    cursoredNodeLocation,\n    triggerScrollRecenterCb: () => {},\n  };\n};\n\nconst deserialize = (obj: string) => deserializeFromObject(JSON.parse(obj));\n\nconst storageKey = 'PlayerUIState';\n\n/**\n * Tries to load from local storage and falls back to creating a new object if unsuccessful.\n * see: https://gist.github.com/muzfr7/7e15582add46e74dee111002ec6cf594\n * http://vaughnroyko.com/idbonbeforeunload/\n * https://discourse.mozilla.org/t/saving-to-localstorage-on-window-close/35627/7\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowEventHandlers/onbeforeunload\n * https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage\n */\nconst tryLoad = (): PlayerUIState => {\n  const loaded = load();\n  if (loaded) {\n    return loaded;\n  } else {\n    console.log('Failed to load PlayerUIState');\n    return newPlayerUIState();\n  }\n};\n\nconst load = (): PlayerUIState | null => {\n  const data = window.localStorage.getItem(storageKey);\n  const loaded = (data && deserialize(data)) || null;\n  return loaded;\n};\n\nconst store = (s: PlayerUIState) => {\n  const data = serialize(s);\n  window.localStorage.setItem(storageKey, data);\n};\n\nconst clear = () => {\n  window.localStorage.setItem(storageKey, '');\n};\n\n// eslint-disable-next-line\nexport const PlayerUIState = {\n  new: newPlayerUIState,\n  serialize,\n  deserialize,\n  tryLoad,\n  load,\n  store,\n  clear,\n};\n","import React, { useCallback, useEffect } from 'react';\nimport { GameState } from '../data/GameState';\nimport { PlayerUIState } from '../data/PlayerUIState';\nimport { WorldGenStateFactory } from '../game/worldGen/WorldGenStateFactory';\nimport { newPlayerIntentState } from '../data/PlayerIntentState';\nimport { newDebugState } from '../data/DebugState';\nimport { newWindowState } from '../data/WindowState';\nimport { PlayerSaveState } from '../data/PlayerSaveState';\nimport { loadComputed, DEFAULT_SEED } from '../game/GameStateFactory';\n\nexport function PersistenceComponent(props: { gameState: GameState }) {\n  const { gameState } = props;\n\n  // save the game\n  const onUnload = useCallback(() => {\n    if (gameState.justDisabledSave) {\n      console.log('skipping save because it was just disabled!');\n    } else {\n      PlayerUIState.store(gameState.playerUI);\n      PlayerSaveState.store(gameState.playerSave);\n      new WorldGenStateFactory({}).store(gameState.worldGen);\n    }\n    // return 'onunload'; // adds a console prompt\n  }, [\n    gameState.playerUI,\n    gameState.justDisabledSave,\n    gameState.worldGen,\n    gameState.playerSave,\n  ]);\n\n  useEffect(() => {\n    if (gameState.intent.newIntent.HARD_REFRESH_PAGE) {\n      PlayerUIState.clear();\n      new WorldGenStateFactory({}).clear();\n      PlayerSaveState.clear();\n\n      // TODO(bowei): actually force hard reload here???\n      window.location.reload();\n    }\n  }, [gameState.intent.newIntent.HARD_REFRESH_PAGE]);\n\n  // NOTE(bowei): window.addEventListener does not work here i think: https://stackoverflow.com/questions/24081699/why-onbeforeunload-event-is-not-firing\n  // https://gist.github.com/muzfr7/7e15582add46e74dee111002ec6cf594\n  useEffect(() => {\n    window.onbeforeunload = onUnload;\n    return () => {\n      window.onbeforeunload = null;\n    };\n  });\n\n  return <> </>;\n}\n\n/**\n * Tries to read out game state info from localstorage. if not present, creates a new state\n */\nexport function loadOrCreate(\n  seed: number | undefined | null = undefined\n): GameState {\n  const mySeed = seed || DEFAULT_SEED;\n\n  const worldGenStateFactory = new WorldGenStateFactory({});\n  const gameState: GameState = {\n    tick: 0,\n    worldGen: worldGenStateFactory.tryLoad({ seed: mySeed }),\n    playerSave: PlayerSaveState.tryLoad(),\n    playerUI: PlayerUIState.tryLoad(),\n    computed: {},\n    intent: newPlayerIntentState(),\n    windowState: newWindowState(),\n    debug: newDebugState(),\n    justDisabledSave: false,\n  };\n\n  loadComputed(gameState);\n\n  return gameState;\n}\n","import { Vector2 } from '../lib/util/geometry/vector2';\n\nexport type DebugState = {\n  retriggerVirtualGridDims: () => void;\n  debugShowScrollbars: boolean; // default false\n  rerenderGameAreaGrid: () => void;\n  enableScrollJump: boolean; // default true\n  getForceJumpOffset: () => Vector2 | void;\n  getOffsetX: () => number | void;\n  isFlipCursored: () => boolean | void;\n};\n\nexport const newDebugState = (): DebugState => {\n  return {\n    retriggerVirtualGridDims: () => {},\n    debugShowScrollbars: false,\n    rerenderGameAreaGrid: () => {},\n    enableScrollJump: true,\n    getForceJumpOffset: () => {},\n    getOffsetX: () => {},\n    isFlipCursored: () => {},\n  };\n};\n","import { GameState } from '../data/GameState';\nimport {\n  LockStatus,\n  NodeReachableStatus,\n  NodeVisibleStatus,\n} from '../data/NodeStatus';\nimport { newPlayerIntentState } from '../data/PlayerIntentState';\nimport { newWindowState } from '../data/WindowState';\nimport { newPlayerSaveState } from '../data/PlayerSaveState';\nimport { HashMap } from '../lib/util/data_structures/hash';\nimport { Vector3 } from '../lib/util/geometry/vector3';\nimport { getWithinDistance, IReadonlySet } from './lib/HexGrid';\nimport { WorldGenStateFactory } from './worldGen/WorldGenStateFactory';\nimport { FOG_OF_WAR_DISTANCE } from './actions/AllocateNode';\nimport { newDebugState } from '../data/DebugState';\nimport { PlayerUIState } from '../data/PlayerUIState';\nimport { loadOrCreate } from '../components/PersistenceComponent';\n\nexport type GameStateConfig = any;\n\nexport const DEFAULT_SEED = 0x19283;\n\nexport class GameStateFactory {\n  public config: GameStateConfig;\n\n  constructor(config: GameStateConfig) {\n    this.config = config;\n  }\n\n  /**\n   * Tries to read out game state info from localstorage. if not present, creates a new state\n   */\n  public loadOrCreate(seed: number | undefined | null = undefined): GameState {\n    return loadOrCreate(seed);\n  }\n\n  public create(seed: number | undefined | null = undefined): GameState {\n    if (seed === undefined) {\n      // assertOnlyCalledOnce(\"GameStateFactory.create\");\n    }\n    const mySeed = seed || DEFAULT_SEED;\n\n    const worldGenStateFactory = new WorldGenStateFactory({});\n    const gameState: GameState = {\n      tick: 0,\n      worldGen: worldGenStateFactory.create({ seed: mySeed }),\n      playerSave: newPlayerSaveState(),\n      playerUI: PlayerUIState.new(),\n      computed: {},\n      intent: newPlayerIntentState(),\n      windowState: newWindowState(),\n      debug: newDebugState(),\n      justDisabledSave: false,\n    };\n\n    loadComputed(gameState);\n\n    return gameState;\n  }\n}\n\n/**\n * computes the computed portion of game state from a freshly created or loaded game state and inserts it into the provided obj\n * @param gameState\n */\nexport function loadComputed(gameState: GameState): GameState {\n  gameState.computed.lockStatusMap = new HashMap();\n  gameState.computed.fogOfWarStatusMap = new HashMap();\n  gameState.computed.reachableStatusMap = new HashMap();\n\n  /**\n   * Initialize fog of war and visible locks\n   */\n  // let prevMap = gameState.playerSave.allocationStatusMap;\n  // first precompute the nearby lock states\n  getWithinDistance(Vector3.Zero, FOG_OF_WAR_DISTANCE).forEach((n) => {\n    gameState.worldGen.lockMap.precompute(n);\n  });\n  // fill in lock statuses with computed statuses\n  {\n    let prevMap = gameState.computed.lockStatusMap;\n    // let nodeLocation = Vector3.Zero;\n    const prevGameState = gameState;\n\n    for (let [location, lockData] of prevGameState.worldGen.lockMap.entries()) {\n      if (lockData) {\n        // compute lock status\n        const newStatus = LockStatus.TICKING;\n        prevMap.put(location, newStatus);\n      }\n    }\n  }\n  // now fog of war flow vision based on computed lock statuses\n  {\n    let prevMap = gameState.computed.fogOfWarStatusMap;\n    let prevReachableStatusMap = gameState.computed.reachableStatusMap;\n    // let newStatus = NodeAllocatedStatus.TAKEN;\n    const prevGameState = gameState;\n\n    gameState.playerSave.allocationStatusMap\n      .entries()\n      .filter(([loc, status]) => {\n        return status.taken === true;\n      })\n      .map((it) => it[0])\n      .forEach((nodeLocation) => {\n        prevMap.put(nodeLocation, NodeVisibleStatus.true);\n\n        getWithinDistance(nodeLocation, 1).forEach((n) => {\n          prevMap.put(n, NodeVisibleStatus.true);\n          prevReachableStatusMap.put(n, NodeReachableStatus.true);\n        });\n\n        // make sure we make use of lock state\n        // getWithinDistance(nodeLocation, 3).forEach((n) => {\n        // const validLocks = prevGameState.worldGen.lockMap\n        const validLocks: IReadonlySet<Vector3> = {\n          // TODO(bowei): optimize this?\n          contains: (v: Vector3) => {\n            // const maybeLock = prevGameState.worldGen.lockMap.get(v);\n            const maybeLock = prevGameState.computed.lockStatusMap?.get(v);\n            if (maybeLock && maybeLock !== LockStatus.OPEN) {\n              return true;\n            }\n            return false;\n          },\n        };\n        getWithinDistance(\n          nodeLocation,\n          FOG_OF_WAR_DISTANCE,\n          0,\n          validLocks\n        ).forEach((n) => {\n          if (!prevMap.get(n)?.visible) {\n            // NOTE(bowei): fuck, this doesnt cause a update to be propagated... i guess it's fine though\n            prevGameState.worldGen.lockMap.precompute(n);\n            prevMap.put(n, NodeVisibleStatus.true);\n          }\n        });\n      });\n  }\n  return gameState;\n}\n","import React from 'react';\n\nimport './Sidebar.css';\n\nexport default function Sidebar(props: {\n  children: React.ReactNode;\n  hidden: boolean;\n  placement: 'left' | 'right';\n}) {\n  const { children, hidden, placement } = props;\n\n  return (\n    <div\n      className={\n        placement === 'left' ? 'layout left-sidebar' : 'layout right-sidebar'\n      }\n      hidden={hidden}\n    >\n      <>{children}</>\n    </div>\n  );\n}\n","import React, { useCallback } from 'react';\nimport './Tabs.css';\n\nexport const Tabs = React.memo(Component);\n\nfunction Component(props: {\n  value: number;\n  labels: React.ReactNode[];\n  onChange: (t: number) => void;\n}) {\n  const { value, labels, onChange } = props;\n  return (\n    <div className={'tab-label-container'}>\n      {labels.map((label: React.ReactNode, i: number) => (\n        <Tab onClick={onChange} value={i} active={value === i} key={i}>\n          {label}\n        </Tab>\n      ))}\n    </div>\n  );\n}\n\nconst Tab = React.memo(TabComponent);\n\nfunction TabComponent(props: {\n  onClick: (t: number) => void;\n  value: number;\n  active: boolean;\n  children: React.ReactNode;\n}) {\n  const { onClick, value, active, children } = props;\n  const handleClick = useCallback(() => {\n    onClick(value);\n  }, [onClick, value]);\n  return (\n    <div className={active ? 'tab-label active' : 'tab-label inactive'}>\n      <div onClick={handleClick}>{children}</div>\n    </div>\n  );\n}\n","import './SidebarsInterface.css';\nimport React, { useCallback, useMemo } from 'react';\nimport { GameState } from '../../data/GameState';\nimport { UpdaterGeneratorType2 } from '../../lib/util/updaterGenerator';\nimport Sidebar from './Sidebar';\nimport { Tabs } from './Tabs';\nimport { TabContentInterface, TAB_NAME } from './TabContentInterface';\nimport { AllocateNodeAction } from '../../game/actions/AllocateNode';\n\nexport const emptyTabLabels: TAB_NAME[] = [TAB_NAME.EMPTY];\nexport const initialTabLabels: TAB_NAME[] = [\n  TAB_NAME.SELECTED_NODE,\n  TAB_NAME.STATS,\n  TAB_NAME.QUESTS,\n  TAB_NAME.DEBUG,\n  TAB_NAME.HELP,\n  TAB_NAME.STRATEGIC_VIEW,\n];\n\n/**\n * Manages both sidebars (left & right) as well as anything directly adjacent to them.\n */\nexport function SidebarsInterface(props: {\n  gameState: GameState;\n  updaters: UpdaterGeneratorType2<GameState, GameState>;\n}) {\n  // NOTE(bowei): commenting out this entire component subtree increases react rerenders per sec from 80-ish to 100-ish while doing nothing other than scrolling (jumps disabled)\n  const { gameState, updaters } = props;\n\n  const setLeftSidebarHidden = useCallback(() => {\n    updaters.playerUI.isSidebarOpen.enqueueUpdate(() => false);\n    updaters.playerUI.isLeftSidebarOpen.enqueueUpdate(() => false);\n  }, [updaters]);\n  const setLeftSidebarUnhidden = useCallback(() => {\n    updaters.playerUI.isSidebarOpen.enqueueUpdate(() => true);\n    updaters.playerUI.isLeftSidebarOpen.enqueueUpdate(() => true);\n  }, [updaters]);\n  const setRightSidebarHidden = useCallback(() => {\n    updaters.playerUI.isSidebarOpen.enqueueUpdate(() => false);\n    updaters.playerUI.isRightSidebarOpen.enqueueUpdate(() => false);\n  }, [updaters]);\n  const setRightSidebarUnhidden = useCallback(() => {\n    updaters.playerUI.isSidebarOpen.enqueueUpdate(() => true);\n    updaters.playerUI.isRightSidebarOpen.enqueueUpdate(() => true);\n  }, [updaters]);\n\n  const tabsState = gameState.playerUI.tabs;\n  const tabsUpdaters = updaters.playerUI.tabs;\n\n  const leftSidebarTabs = tabsState.left.tabs;\n  const rightSidebarTabs = tabsState.right.tabs;\n  const leftActiveTabIndex = tabsState.left.activeIndex;\n  const rightActiveTabIndex = tabsState.right.activeIndex;\n  const setLeftSidebarTabs = tabsUpdaters.left.tabs.enqueueUpdate;\n  const setRightSidebarTabs = tabsUpdaters.right.tabs.enqueueUpdate;\n  const setLeftActiveTabIndex = tabsUpdaters.left.activeIndex.enqueueUpdate;\n  const setRightActiveTabIndex = tabsUpdaters.right.activeIndex.enqueueUpdate;\n\n  // const [leftSidebarTabs, setLeftSidebarTabs] = useState<TAB_NAME[]>([]);\n  // const [rightSidebarTabs, setRightSidebarTabs] = useState<TAB_NAME[]>(initialTabLabels);\n  // const [leftActiveTabIndex, setLeftActiveTabIndex] = useState(0);\n  // const [rightActiveTabIndex, setRightActiveTabIndex] = useState(0);\n\n  const onSendTabLeft = useCallback(() => {\n    if (rightSidebarTabs.length === 0) {\n      return;\n    }\n    const currentRightTab = rightSidebarTabs[rightActiveTabIndex];\n    if (currentRightTab === undefined) {\n      return;\n    }\n    const newRightSidebarTabs = rightSidebarTabs\n      .slice(0, rightActiveTabIndex)\n      .concat(rightSidebarTabs.slice(rightActiveTabIndex + 1));\n    setRightSidebarTabs(newRightSidebarTabs);\n    setRightActiveTabIndex(\n      Math.max(0, Math.min(rightActiveTabIndex, newRightSidebarTabs.length - 1))\n    );\n    const newLeftSidebarTabs = [...leftSidebarTabs, currentRightTab];\n    setLeftSidebarTabs(newLeftSidebarTabs);\n    setLeftActiveTabIndex(newLeftSidebarTabs.length - 1);\n    setLeftSidebarUnhidden();\n  }, [\n    leftSidebarTabs,\n    setLeftSidebarTabs,\n    rightSidebarTabs,\n    setRightSidebarTabs,\n    setLeftActiveTabIndex,\n    rightActiveTabIndex,\n    setRightActiveTabIndex,\n    setLeftSidebarUnhidden,\n  ]);\n\n  const onSendTabRight = useCallback(() => {\n    if (leftSidebarTabs.length === 0) {\n      return;\n    }\n    const currentLeftTab = leftSidebarTabs[leftActiveTabIndex];\n    if (currentLeftTab === undefined) {\n      return;\n    }\n    const newLeftSidebarTabs = leftSidebarTabs\n      .slice(0, leftActiveTabIndex)\n      .concat(leftSidebarTabs.slice(leftActiveTabIndex + 1));\n    setLeftSidebarTabs(newLeftSidebarTabs);\n    setLeftActiveTabIndex(\n      Math.max(Math.min(leftActiveTabIndex, newLeftSidebarTabs.length - 1), 0)\n    );\n    const newRightSidebarTabs = [...rightSidebarTabs, currentLeftTab];\n    setRightSidebarTabs(newRightSidebarTabs);\n    setRightActiveTabIndex(newRightSidebarTabs.length - 1);\n    setRightSidebarUnhidden();\n  }, [\n    leftSidebarTabs,\n    setLeftSidebarTabs,\n    rightSidebarTabs,\n    setRightSidebarTabs,\n    leftActiveTabIndex,\n    setLeftActiveTabIndex,\n    setRightActiveTabIndex,\n    setRightSidebarUnhidden,\n  ]);\n\n  // Find out which tab is active on either side\n  const leftTabName: TAB_NAME = useMemo(() => {\n    if (leftSidebarTabs.length === 0) {\n      return TAB_NAME.EMPTY;\n    } else {\n      return leftSidebarTabs[leftActiveTabIndex] as TAB_NAME;\n    }\n  }, [leftSidebarTabs, leftActiveTabIndex]);\n\n  const rightTabName: TAB_NAME = useMemo(() => {\n    if (rightSidebarTabs.length === 0) {\n      return TAB_NAME.EMPTY;\n    } else {\n      return rightSidebarTabs[rightActiveTabIndex] as TAB_NAME;\n    }\n  }, [rightSidebarTabs, rightActiveTabIndex]);\n\n  // TODO(bowei): improve this abstraction??\n  const actions = useMemo(() => {\n    return { allocateNode: new AllocateNodeAction(props.updaters) };\n  }, [props.updaters]);\n\n  return (\n    <>\n      <Sidebar\n        hidden={!gameState.playerUI.isLeftSidebarOpen}\n        // hidden={true}\n        placement={'left'}\n      >\n        <div className=\"sidebar-header\">\n          <div className=\"sidebar-header-button\" onClick={onSendTabRight}>\n            ➡️️ Send right\n          </div>\n          <div className=\"sidebar-header-gap\"></div>\n          <div\n            className=\"sidebar-header-button\"\n            onClick={() => {\n              setLeftSidebarHidden();\n            }}\n          >\n            ❎ Close\n          </div>\n        </div>\n        <Tabs\n          value={leftActiveTabIndex || 0}\n          labels={leftSidebarTabs.length ? leftSidebarTabs : emptyTabLabels}\n          onChange={setLeftActiveTabIndex}\n        />\n        <TabContentInterface\n          gameState={gameState}\n          updaters={updaters}\n          tabName={leftTabName}\n          actions={actions}\n        />\n      </Sidebar>\n      <Sidebar\n        hidden={!gameState.playerUI.isRightSidebarOpen}\n        placement={'right'}\n      >\n        <div className=\"sidebar-header\">\n          <div className=\"sidebar-header-button\" onClick={onSendTabLeft}>\n            ⬅️ Send left\n          </div>\n          <div className=\"sidebar-header-gap\"></div>\n          <div\n            className=\"sidebar-header-button\"\n            onClick={() => {\n              setRightSidebarHidden();\n            }}\n          >\n            ❎ Close\n          </div>\n        </div>\n        <Tabs\n          value={rightActiveTabIndex || 0}\n          labels={rightSidebarTabs.length ? rightSidebarTabs : emptyTabLabels}\n          onChange={setRightActiveTabIndex}\n        />\n        <TabContentInterface\n          gameState={gameState}\n          updaters={updaters}\n          tabName={rightTabName}\n          actions={actions}\n        />\n      </Sidebar>\n    </>\n  );\n}\n","import './App.css';\n\nimport classnames from 'classnames';\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { DebugOverlayComponent } from './components/DebugOverlayComponent';\nimport { KeyboardListenerComponent } from './components/KeyboardListenerComponent';\nimport { PixiWrapperComponent } from './components/PixiWrapperComponent';\nimport { WindowListenerComponent } from './components/WindowListenerComponent';\nimport { UseGameStateContext } from './contexts';\nimport { GameState } from './data/GameState';\nimport { GameStateFactory } from './game/GameStateFactory';\nimport { batchifySetState } from './lib/util/batchify';\nimport { Lazy } from './lib/util/lazy';\nimport {\n  UpdaterGeneratorType2,\n  updaterGenerator2,\n} from './lib/util/updaterGenerator';\nimport { GameAreaInterface } from './components/GameArea/GameAreaInterface';\nimport { SidebarsInterface } from './components/Sidebars/SidebarsInterface';\nimport { PersistenceComponent } from './components/PersistenceComponent';\n\nconst initialGameState: Lazy<GameState> = new Lazy(() =>\n  new GameStateFactory({}).loadOrCreate(+new Date())\n);\n\n/**\n * Root react component.\n * In charge of creating game state, and hooking up the game display, pixi, keyboard control, and window event listeners.\n */\nfunction App() {\n  const [gameState, setGameState] = useState<GameState>(function factory() {\n    return initialGameState.get();\n  });\n\n  let [batchedSetGameState, fireBatch] = useMemo(\n    () => batchifySetState(setGameState),\n    [setGameState]\n  );\n  let updaters = useMemo(\n    () => updaterGenerator2(initialGameState.get(), batchedSetGameState),\n    [batchedSetGameState]\n  );\n\n  const gameStateContextValue = useMemo(() => {\n    return [gameState, updaters, fireBatch] as [\n      GameState,\n      UpdaterGeneratorType2<GameState, GameState>,\n      () => void\n    ];\n  }, [gameState, updaters, fireBatch]);\n\n  useEffect(() => {\n    console.log('maybe toggling strategic view');\n    if (gameState.intent.newIntent.TOGGLE_STRATEGIC_VIEW) {\n      updaters.playerUI.isPixiHidden.enqueueUpdate((it) => !it);\n    }\n  }, [gameState.intent.newIntent.TOGGLE_STRATEGIC_VIEW, updaters]);\n\n  // DEPRECATED\n  useEffect(() => {\n    if (gameState.intent.newIntent.TOGGLE_SIDEBAR) {\n      updaters.playerUI.isSidebarOpen.enqueueUpdate((it) => !it);\n      //updaters.playerUI.isLeftSidebarOpen.enqueueUpdate((it) => !it);\n      //updaters.playerUI.isRightSidebarOpen.enqueueUpdate((it) => !it);\n    }\n  }, [gameState.intent.newIntent.TOGGLE_SIDEBAR, updaters]);\n\n  useEffect(() => {\n    if (gameState.intent.newIntent.TOGGLE_LEFT_SIDEBAR) {\n      updaters.playerUI.isLeftSidebarOpen.enqueueUpdate((it) => !it);\n    }\n  }, [gameState.intent.newIntent.TOGGLE_LEFT_SIDEBAR, updaters]);\n\n  useEffect(() => {\n    if (gameState.intent.newIntent.TOGGLE_RIGHT_SIDEBAR) {\n      updaters.playerUI.isRightSidebarOpen.enqueueUpdate((it) => !it);\n    }\n  }, [gameState.intent.newIntent.TOGGLE_RIGHT_SIDEBAR, updaters]);\n\n  useEffect(() => {\n    if (gameState.intent.newIntent.TURN_OFF_SIDEBAR) {\n      updaters.playerUI.isLeftSidebarOpen.enqueueUpdate((it) => false);\n      updaters.playerUI.isRightSidebarOpen.enqueueUpdate((it) => false);\n    }\n  }, [gameState.intent.newIntent.TURN_OFF_SIDEBAR, updaters]);\n\n  useEffect(() => {\n    if (gameState.intent.newIntent.EXIT) {\n      updaters.playerUI.isLeftSidebarOpen.enqueueUpdate((it) => false);\n      updaters.playerUI.isRightSidebarOpen.enqueueUpdate((it) => false);\n      updaters.playerUI.cursoredNodeLocation.enqueueUpdate((prev) => {\n        return null;\n      });\n    }\n  }, [gameState.intent.newIntent.EXIT, updaters]);\n\n  return (\n    <div className={classnames({ App: true })}>\n      <div className=\"entire-area\">\n        <UseGameStateContext.Provider\n          // NOTE(bowei): this context provider is absolutely unnecessary, but keeping it here for now in case i forget how to use context managers\n          value={gameStateContextValue}\n        >\n          <PixiWrapperComponent hidden={gameState.playerUI.isPixiHidden} />\n        </UseGameStateContext.Provider>\n        <GameAreaInterface\n          gameState={gameState}\n          updaters={updaters}\n        ></GameAreaInterface>\n      </div>\n\n      <div className=\"debug-overlay\">\n        <DebugOverlayComponent\n          tick={gameState.tick}\n          windowState={gameState.windowState}\n        />\n      </div>\n      <div className=\"button-zone\">\n        <button\n          className=\"button-pixi-toggle\"\n          style={{}}\n          onClick={() => {\n            updaters.playerUI.isPixiHidden.enqueueUpdate((it) => !it);\n          }}\n        >\n          Toggle big view (hotkey: b)\n        </button>\n        <span> </span>\n        <button\n          onClick={() => {\n            updaters.playerUI.isSidebarOpen.enqueueUpdate((it) => !it);\n            updaters.playerUI.isLeftSidebarOpen.enqueueUpdate((it) => !it);\n            updaters.playerUI.isRightSidebarOpen.enqueueUpdate((it) => !it);\n          }}\n        >\n          Toggle sidebars (hotkeys: t, y)\n        </button>\n      </div>\n\n      <SidebarsInterface gameState={gameState} updaters={updaters} />\n      <KeyboardListenerComponent\n        isTextBoxFocused={gameState.playerUI.isTextBoxFocused}\n        updaters={updaters.intent}\n      />\n      <WindowListenerComponent updaters={updaters.windowState} />\n      <PersistenceComponent gameState={gameState} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}