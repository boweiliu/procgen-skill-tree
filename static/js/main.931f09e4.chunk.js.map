{"version":3,"sources":["lib/util/misc.ts","data/PointNodeRef.ts","data/WorldGenState.ts","data/GameState.ts","game/Neighbors.ts","lib/util/epsilon_math.ts","lib/util/geometry/vector2.ts","game/EfficiencyCalculator.ts","components/DebugTab.tsx","components/KeyboardControl.tsx","components/NodeDetail.tsx","contexts.ts","components/PixiWrapperComponent.tsx","lib/util/data_structures/hash.ts","lib/pixi/pixify.ts","lib/util/batchify.ts","lib/util/updaterGenerator.ts","pixi/components/LifecycleHandler.ts","game/ComputeState.ts","game/OnSelectOrReselectNode.ts","game/OnAllocation.ts","pixi/components/PointNodeComponent.ts","pixi/components/ChunkComponent.ts","game/WorldGenStateFactory.ts","pixi/components/ZLevelComponent.ts","pixi/components/EfficiencyBarComponent.ts","lib/util/fpsTracker.ts","pixi/components/FpsComponent.ts","pixi/components/ReticleComponent.ts","pixi/components/TooltipComponent.ts","pixi/components/FixedCameraStageComponent.ts","pixi/components/RootComponent.ts","pixi/textures/PointNodeTexture.ts","pixi/PixiReactBridge.ts","game/GameStateFactory.ts","components/PixiComponent.tsx","components/QuestProgress.tsx","components/Sidebar.tsx","components/TabContent.tsx","components/Tabs.tsx","App.tsx","game/OnCreateQuest.ts","serviceWorker.ts","index.tsx","lib/util/random.ts"],"names":["Util","list","fn","lowestT","lowestValue","item","value","obj","highestT","highestValue","low","high","Math","floor","random","array","key","sort","a","b","str","mapObj","re","RegExp","Object","keys","join","replace","matched","toLowerCase","func","timeoutId","waitMilliseconds","options","isImmediate","result","args","doLater","undefined","apply","shouldCallNow","clearTimeout","setTimeout","d","monthName","getMonth","getDate","getHours","substr","getMinutes","getSeconds","arr","concat","string","length","intersperse","character","repeat","assertOnlyCalledOnceData","assertOnlyCalledOnce","id","k","toString","Error","stacktrace","stack","Lazy","factory","_wasConstructed","_value","_factory","this","multiplyColor","color1","color2","reds","blues","greens","out","round","enumKeys","enm","ResourceNontrivialType","PointNodeRef","z","chunkCoord","pointNodeCoord","pointNodeId","ChunkRef","chunkId","ChunkGenConstants","CHUNK_HALF_DIM","CHUNK_DIM","DROP_NODES_CHANCE","ResourceModifier","IntentName","ResourceType","Nothing","Direction","noIntent","reduce","object","ResourceTypeAndModifier","type","modifier","EPSILON","Vector2","propsOrX","x","y","_x","_y","p","abs","max","dx","dy","sqrt","newY","about","amount","origin","angle","PI","cos","sin","other","__type","trans","scale","newX","t","console","error","add","tx","ty","lerp","highX","highY","lowX","lowY","RandRange","hasOwnProperty","JSON","stringify","getNeighbors","selfPointNodeRef","worldGen","neighborsMap","neighbors","zLevel","zLevels","myChunk","chunks","get","addX","chunk","withX","nbor","pointNodes","EAST","WEST","addY","withY","SOUTH","NORTH","equals","Zero","upZLevel","upChunkCoordX","upNodeX","upChunkCoordY","upNodeY","upChunkCoord","upChunk","upNode","UP","downZLevel","multiply","downChunk","DOWN","getNeighborsMap","it","push","canAllocate","allocatedPointNodeSet","hasActiveQuest","contains","computeQuestEfficiencyPercent","playerSave","questProgressHistory","noEffectNodeCount","forEach","num","i","questInitialAmount","noEffectNodePercent","log","remapQuestEfficiencyToDisplayable","percent","pow","min","remapQuestEfficiencyToGrade","displayable","remapEfficiencyGradeToNumber","grade","DebugTab","selectedPointNode","computed","useState","b64PlayerSaveString","setB64PlayerSaveString","history","setHistory","useEffect","pointNodeGen","isAllocated","canBeAllocated","activeQuest","nodeDescription","resourceType","resourceAmount","resourceModifier","playerResourceAmounts","onClick","btoa","map","slice","pointNodeRef","reverse","One","defaultKeyIntentConfig","w","PAN_NORTH","PAN_WEST","s","PAN_SOUTH","PAN_EAST","ArrowUp","ArrowLeft","ArrowDown","ArrowRight","TRAVEL_OUT","TRAVEL_IN","KeyboardControlComponent","props","handleKeydown","e","configuredIntent","state","keyIntentConfig","NOOP","updaters","newIntent","enqueueUpdate","activeIntent","handleKeyup","endedIntent","document","addEventListener","removeEventListener","React","Component","NodeDetail","memo","NodeDetailComponent","UseGameStateContext","createContext","PixiWrapperComponent","application","windowState","container","useRef","useContext","gameState","gameStateUpdaters","fireBatchedSetGameState","current","childNodes","removeChild","appendChild","app","view","rerender","fireBatch","fireBatchedSetWindowState","isSecondConstructorCall","ref","HashSet","initialValues","_values","HashMap","put","remove","values","n","clone","size","hash","KeyedHashMap","_kvalues","hashCode","pv","cv","h","imul","charCodeAt","PixiPointFrom","Pixi","batchifySetState","batch","arg","thisBatch","prev","next","valueOrCallback","updaterGenerator2Helper","dataObject","dataUpdater","newValueOrCallback","oldData","wholeData","newKey","updaterGenerator2","setState","stateCallbackFunction","ChildrenArray","c","indexOf","instance","removed","splice","findIndex","find","cloned","callbackfn","LifecycleHandlerBase","_staleProps","_children","_childrenToConstruct","_childrenToDestruct","_forceUpdates","markForceUpdate","childInstance","childInfo","child","childClass","propsFactory","addChild","renderSelf","didMount","self","initialState","batchedSetState","fireStateUpdaters","stateUpdaters","nextProps","_update","staleState","updateSelf","shouldUpdate","forceUpdates","didForceUpdateChild","didForceUpdate","updateChildren","_updateChildren","Promise","resolve","didUpdate","willUnmount","engageLifecycle","derived","Proxy","construct","target","_didConstruct","newTarget","Reflect","computePlayerResourceAmounts","amounts","playerResourceNodesAggregated","allocatedPointNodeHistory","resourceTypeAndModifier","Flat","Increased0","AfterIncreased0","Increased1","AfterIncreased1","selectOrReselectNode","justTriedToAllocate","justSpentSp","justFailedToAllocate","playerUI","prevGameState","nextSet","nextHistory","doTryAllocate","spSpentThisQuest","afterMaybeSpendingSp","activeTab","wrapped","sprite","halfwayCenterSprite","centerSprite","hitArea","tooltippableArea","numClicks","descriptionText","sortableChildren","pointNodeTexture","anchor","zIndex","alpha","interactive","buttonMode","RenderedChunkConstants","NODE_HITAREA_PX","tint","centerTint","position","isSelected","baseColor","Mana0","staleProps","addListener","event","localPosition","data","getLocalPosition","worldTransform","tooltipUpdaters","visible","text","SPACING_PX","CHUNK_SPACING_PX","NODE_SIZE_PX","NODE_ROUNDED_PX","children","resyncChildren","prevProps","prevState","childrenToDelete","chunkGen","entries","selfChunkRef","childPropsFactory","delta","allocatedPointNodeSubset","childKey","childComponent","PointNodeComponent","ZLevelGenFactory","config","chunkGenFactory","ChunkGenFactory","squirrel3","seed","startingChunks","j","location","create","pointNodeGenFactory","PointNodeGenFactory","droppedNodes","INTMAX32","loc","randomFloat","Mana1","Mana2","upsertChildren","zLevelGen","doChild","ChunkComponent","chunkRef","filter","cornerRadius","boundingBoxWidth","boundingBox","innerBarWidth","innerBarHeight","textHeight","paddingBottom","innerBar","barBorder","barFill","mask","titleText","textStyle","fontFamily","padding","fontSize","beginFill","drawRoundedRect","pivot","barFillContainer","drawRect","maskContainer","fixedMask","lineStyle","tick","updateText","efficiencyPercent","FpsTracker","frameTimestampsInTicks","frameTimestampsInTime","ticksSinceLastUpdate","lastFrameTime","logRowsToKeep","Date","getTime","ticksDiff","framesPerTick","timeDiff","framesPerMilli","getFps","toFixed","getUps","fpsTracker","getFpsString","getUpsString","appSize","outerCircle","drawCircle","moveTo","lineTo","box","offset","width","height","reticle","efficiencyBar","scoreText","FpsComponent","ReticleComponent","EfficiencyBarComponent","TooltipComponent","tooltip","score","fixedCameraStage","actionStage","backdropStage","zLevelPropsFactory","backdrop","renderer","g","generateTexture","NEAREST","generatePointNodeTexture","playerCurrentZ","fixedCameraStagePropsFactory","FixedCameraStageComponent","ZLevelComponent","registerChild","intent","deltaX","deltaY","unit","whole","PixiReactBridge","rootComponent","onTick","originalAppSize","antialias","transparent","resolution","window","devicePixelRatio","autoDensity","powerPreference","backgroundColor","ticker","destroy","texture","baseTexture","baseGameLoop","bind","curr","Infinity","appSizeFromWindowSize","innerWidth","innerHeight","RootComponent","stage","resize","update","GameStateFactory","mySeed","firstId","0","questsCompleted","initialApplication","PixiComponent","orientation","setWindowState","useMemo","batchedSetWindowState","setApplication","onresize","old","newGameState","pause","originalSetGameState","QuestProgressComponent","createQuestCb","efficiencyGrade","isQuestComplete","didAcceptRewards","setDidAcceptRewards","scoreReward","setScoreReward","Score","doClaimRewards","total","className","disabled","classnames","table","scoreComponents","scoreReason","scoreAmount","calculateQuestScoreReward","Sidebar","TabContent","showContent","hidden","Tabs","labels","onChange","label","Tab","active","browser","UAParser","getBrowser","forceRotate","name","tabLabels","initialGameState","App","setGameState","batchedSetGameState","useCallback","numQuestsCompleted","totalAllocatedNodes","historicalAmountPerNode","targetNumAllocatedNodes","randomScale","description","createQuest","tabViews","Provider","getUpdater","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.931f09e4.chunk.js","sourcesContent":["let lastUsedId = 0;\n\nexport const getUniqueID = () => {\n  return lastUsedId++;\n};\n\nexport class Util {\n  static MinBy<T>(list: T[], fn: (T: T) => number): T | null {\n    let lowestT: T | null = null;\n    let lowestValue: number | null = null;\n\n    for (const item of list) {\n      const value = fn(item);\n\n      if (lowestValue === null || value < lowestValue) {\n        lowestT = item;\n        lowestValue = value;\n      }\n    }\n\n    return lowestT;\n  }\n\n  static MinByAndValue<T>(\n    list: T[],\n    fn: (T: T) => number\n  ): { obj: T; value: number } | null {\n    let lowestT: T | null = null;\n    let lowestValue: number | null = null;\n\n    for (const item of list) {\n      const value = fn(item);\n\n      if (lowestValue === null || value < lowestValue) {\n        lowestT = item;\n        lowestValue = value;\n      }\n    }\n\n    return lowestT === null || lowestValue === null\n      ? null\n      : { obj: lowestT, value: lowestValue };\n  }\n\n  static MaxBy<T>(list: T[], fn: (T: T) => number): T | null {\n    let highestT: T | null = null;\n    let highestValue: number | null = null;\n\n    for (const item of list) {\n      const value = fn(item);\n\n      if (highestValue === null || value > highestValue) {\n        highestT = item;\n        highestValue = value;\n      }\n    }\n\n    return highestT;\n  }\n\n  static RandRange(low: number, high: number): number {\n    return Math.floor(Math.random() * (high - low) + low);\n  }\n\n  public static SortByKey<T>(array: T[], key: (x: T) => number): T[] {\n    return array.sort((a, b) => {\n      return key(a) - key(b);\n    });\n  }\n\n  public static ReplaceAll(\n    str: string,\n    mapObj: { [key: string]: string }\n  ): string {\n    const re = new RegExp(Object.keys(mapObj).join(\"|\"), \"gi\");\n\n    return str.replace(re, (matched) => {\n      return mapObj[matched.toLowerCase()];\n    });\n  }\n\n  public static Debounce<F extends (...args: any[]) => void>(\n    func: F,\n    waitMilliseconds = 50,\n    options = {\n      isImmediate: false,\n    }\n  ): F {\n    let timeoutId: any; // types are different on node vs client, so we have to use any.\n\n    const result = (...args: any[]) => {\n      const doLater = () => {\n        timeoutId = undefined;\n        if (!options.isImmediate) {\n          func.apply(this, args);\n        }\n      };\n\n      const shouldCallNow = options.isImmediate && timeoutId === undefined;\n\n      if (timeoutId !== undefined) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(doLater, waitMilliseconds);\n\n      if (shouldCallNow) {\n        func.apply(this, args);\n      }\n    };\n\n    return result as any;\n  }\n\n  public static FormatDate(d: Date): string {\n    const monthName = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ][d.getMonth()];\n\n    return `${monthName} ${d.getDate()}, ${(\"00\" + d.getHours()).substr(-2)}:${(\n      \"00\" + d.getMinutes()\n    ).substr(-2)}:${(\"00\" + d.getSeconds()).substr(-2)}`;\n  }\n\n  public static FlattenByOne<T>(arr: T[][]): T[] {\n    let result: T[] = [];\n\n    for (const obj of arr) {\n      result = result.concat(obj);\n    }\n\n    return result;\n  }\n\n  public static PadString(\n    string: string,\n    length: number,\n    intersperse = \"\",\n    character = \" \"\n  ) {\n    return string + intersperse + character.repeat(length - string.length);\n  }\n}\n\n/**\n * A deep readonly type - given an object type, all subobjects and their subobjects are also marked as readonly.\n */\nexport type Const<T> = T extends Function\n  ? T\n  : {\n      readonly [P in keyof T]: T[P] extends { [k: string]: any }\n        ? Const<T[P]>\n        : T[P];\n    };\n\nconst assertOnlyCalledOnceData: { [k: string]: [string, number] } = {};\n\n/**\n * Asserts that a function is not called more than twice. Useful for debugging react lifecycle which may be creating more objects than you realize, impacting performance.\n * @param id identifier\n */\nexport function assertOnlyCalledOnce(id: string | number) {\n  let k = id.toString();\n  if (assertOnlyCalledOnceData[k] !== undefined) {\n    if (assertOnlyCalledOnceData[k][1] === 1) {\n      assertOnlyCalledOnceData[k][1] = 2;\n    } else {\n      throw new Error(\n        \"Error, called more than twice with same id: \" +\n          k +\n          \" , callback the first time was : \" +\n          assertOnlyCalledOnceData[k]\n      );\n    }\n  } else {\n    const stacktrace = new Error().stack!;\n    assertOnlyCalledOnceData[k] = [stacktrace, 1];\n  }\n}\n\n/**\n * Class representing a value which is only computed when used.\n *\n * Usage: const lazy = new Lazy(() => thingThatReturnsSomething()).\n * Then thingThatReturnsSomething() will only get called on the first time lazy.get() is called.\n * On the second and subsequent times, lazy.get() will return the same object - the factory method is not called again.\n */\nexport class Lazy<T> {\n  private _wasConstructed: boolean = false;\n  private _value: T | undefined = undefined;\n  private _factory: () => T;\n\n  constructor(\n    factory: () => T,\n    // structure?: T extends { [key: string]: any } ? T : void\n  ) {\n    this._factory = factory;\n  }\n  public get(): T {\n    // T might have undefined as a valid value\n    if (this._value !== undefined || this._wasConstructed === true) {\n      return this._value!;\n    } else {\n      this._value = this._factory();\n      this._wasConstructed = true;\n      return this._value;\n    }\n  }\n  public wasConstructed(): boolean {\n    return this._wasConstructed;\n  }\n  // public async getAsync(): Promise<T> {\n  //   if (this._value !== undefined || this._wasConstructed === true) {\n  //     return Promise.resolve(this._value!);\n  //   } else {\n  //     return new Promise<T>((resolve, reject) => {\n  //       this._value = this._factory();\n  //       this._wasConstructed = true;\n  //       resolve(this._value);\n  //     });\n  //   }\n  // }\n}\n\nexport function LazyProxy<\n  T extends { [key: string]: any } | { [i: number]: any }\n>(factory: () => T): Const<T> {\n  return (new Proxy(new Lazy(factory), {\n    get: (target, property, receiver) => {\n      if (property === \"toJSON\") {\n        return () => {\n          if (target.wasConstructed()) {\n            return target.get();\n          } else {\n            return \"[Object Lazy]\";\n          }\n        };\n      }\n      const targetValue = target.get();\n      return Reflect.get(targetValue, property);\n    },\n    ownKeys: (target) => {\n      const targetValue = target.get();\n      return Reflect.ownKeys(targetValue);\n    },\n    getOwnPropertyDescriptor: (target, property) => {\n      /**\n       * https://stackoverflow.com/questions/40352613/why-does-object-keys-and-object-getownpropertynames-produce-different-output\n       */\n\n      return Object.getOwnPropertyDescriptor(target.get(), property);\n      \n    },\n    has: (target, property) => {\n      // This is called when iterating over array i.e. array.forEach()\n      return property in target.get()\n    }\n  }) as unknown) as Const<T>;\n}\n\n/**\n * Multiplies colors (0xFFFFFF === 1). use for applying tints manually.\n * @param color1 A base color\n * @param color2 A tint\n */\nexport function multiplyColor(color1: number, color2: number): number {\n  let reds = [color1 & 0xff0000, color2 & 0xff0000];\n  let blues = [color1 & 0x0000ff, color2 & 0x0000ff];\n  let greens = [color1 & 0x00ff00, color2 & 0x00ff00];\n  let out = Math.round(((reds[0] / 0x010000) * reds[1]) / 0xffffff) * 0x010000;\n  out += Math.round(((greens[0] / 0x000100) * greens[1]) / 0x00ff00) * 0x000100;\n  out += Math.round((blues[0] * blues[1]) / 0x0000ff);\n  return out;\n}\n\nexport function enumKeys<T extends string>(enm: { [key in T]: T }): T[] {\n  return Object.keys(enm) as T[];\n}\n\n// export function enumKeys<T extends string>(enm: { [key: string]: string }) : T[] {\n//   return Object.keys(enm) as T[];\n// }\n","import { Vector2 } from \"../lib/util/geometry/vector2\";\n\nexport class PointNodeRef {\n  public z: number;\n  public chunkCoord: Vector2;\n  public pointNodeCoord: Vector2;\n  public pointNodeId: number;\n\n  constructor(args: {\n    z: number;\n    chunkCoord: Vector2;\n    pointNodeCoord: Vector2;\n    pointNodeId: number;\n  }) {\n    this.z = args.z;\n    this.chunkCoord = args.chunkCoord;\n    this.pointNodeCoord = args.pointNodeCoord;\n    this.pointNodeId = args.pointNodeId;\n  }\n\n  public hash(): string {\n    return (\n      this.pointNodeId.toString() +\n      this.z.toString() +\n      this.chunkCoord.toString() +\n      this.pointNodeCoord.toString()\n    );\n  }\n\n  public toString(): string {\n    return this.z + \",\" + this.chunkCoord.toString() + \",\" + this.pointNodeCoord.toString()\n  }\n}\n\nexport class ChunkRef {\n  public z: number;\n  public chunkCoord: Vector2;\n  public chunkId: number;\n\n  constructor(args: { z: number; chunkCoord: Vector2; chunkId: number }) {\n    this.z = args.z;\n    this.chunkCoord = args.chunkCoord;\n    this.chunkId = args.chunkId;\n  }\n\n  public hash(): string {\n    return (\n      this.chunkId.toString() + this.z.toString() + this.chunkCoord.toString()\n    );\n  }\n}\n","import { KeyedHashMap } from \"../lib/util/data_structures/hash\";\nimport { Vector2 } from \"../lib/util/geometry/vector2\";\n\n\nexport type WorldGenState = {\n  seed: number;\n  zLevels: { [z: number]: ZLevelGen };\n};\n\nexport type ZLevelGen = {\n  id: number;\n  chunks: KeyedHashMap<Vector2, ChunkGen>;\n};\n\nexport type ChunkGen = {\n  id: number;\n  pointNodes: KeyedHashMap<Vector2, PointNodeGen>;\n};\n\nexport class ChunkGenConstants {\n  public static CHUNK_DIM = 9; // each chunk is a DIM x DIM grid of nodes, centered on a single node\n  public static CHUNK_HALF_DIM = (ChunkGenConstants.CHUNK_DIM - 1) / 2;\n  public static DROP_NODES_CHANCE = 0.3; // before generating edges, how many of the nodes to throw out\n}\n\nexport type PointNodeGen = {\n  id: number;\n\n  // more data to be generated here - size, color, etc.\n  resourceType: ResourceType;\n  resourceModifier: ResourceModifier;\n  resourceAmount: number;\n};\n\nexport enum ResourceNontrivialType {\n  Mana0 = \"Mana0\",\n  Mana1 = \"Mana1\",\n  Mana2 = \"Mana2\",\n}\n\nexport type ResourceType = \"Nothing\" | ResourceNontrivialType;\n// eslint-disable-next-line\nexport const ResourceType = { Nothing: \"Nothing\", ...ResourceNontrivialType };\n\nexport enum ResourceModifier {\n  Flat = \"Flat\",\n  Increased0 = \"% increased\",\n  AfterIncreased0 = \"added after % increased\",\n  Increased1 = \"% increased multiplier\",\n  AfterIncreased1 = \"added after % increased multiplier\",\n}\n\n","import {\n  HashMap,\n} from \"../lib/util/data_structures/hash\";\nimport { enumKeys } from \"../lib/util/misc\";\nimport { PlayerSaveState } from \"./PlayerSaveState\";\nimport { PointNodeRef} from \"./PointNodeRef\";\nimport { ResourceModifier, ResourceNontrivialType, ResourceType, WorldGenState } from \"./WorldGenState\";\n\nexport { PointNodeRef, ChunkRef } from \"./PointNodeRef\";\nexport type { PlayerSaveState, Quest } from \"./PlayerSaveState\";\nexport type { WorldGenState, ChunkGen, ZLevelGen,PointNodeGen,   } from \"./WorldGenState\";\nexport { ChunkGenConstants, ResourceModifier, ResourceNontrivialType, ResourceType } from \"./WorldGenState\";\n\n/**\n * Data owned by the master \"App\" component, to be made available as props to ALL subcomponents (both pixi and react); react uses context providers to make this easier\n * 1. world generation data, stuff that was computed off of the random seed and is stored so we can do logic off of it,\n *   but can be deleted/recomputed any time.\n *   May or may not be persisted to disk - unimportant apart from the random seed.\n * 2. data about player activity in the game e.g. which nodes were allocated, what quest stage they are on\n *   Must be persisted to disk - this is essentially the player's \"save file\"\n * 3. data about player activity that only influences the UI, e.g. which node was selected, but affects UI across\n *   very far away pixi/react components.\n *   Should be persisted to disk - will help the player \"remember their place\" in the game, but not a big deal if lost.\n * 4. data about the window display - should never be persisted to disk.\n * 5. data that is computed from other data - no need to persist to disk.\n *\n * Does NOT include UI data which is only relevant to a small part of the component hierarchy - e.g. how many seconds since last tap.\n * That data should belong in state owned by subcomponents.\n */\nexport type GameState = {\n  worldGen: WorldGenState;\n  playerSave: PlayerSaveState;\n  playerUI: PlayerUIState;\n  computed: ComputedState;\n  intent: PlayerIntentState;\n};\n\n/**\n * Player intents == what they want to do when they press certain mouse/keyboard keys. This is decoupled\n * from their actual keyboard keys to make remapping easier.\n */\nexport type PlayerIntentState = {\n  activeIntent: Intent;\n  newIntent: Intent;\n  endedIntent: Intent;\n};\n\nexport type Intent = {\n  [name in IntentName]: boolean;\n};\n\nexport enum IntentName {\n  // Default intent - does nothing\n  NOOP = \"NOOP\",\n\n  PAN_NORTH = \"PAN_NORTH\",\n  PAN_SOUTH = \"PAN_SOUTH\",\n  PAN_WEST = \"PAN_WEST\",\n  PAN_EAST = \"PAN_EAST\",\n  TRAVEL_IN = \"TRAVEL_IN\",\n  TRAVEL_OUT = \"TRAVEL_OUT\",\n}\n\nexport const noIntent = enumKeys(IntentName).reduce((object: Intent, key) => {\n  object[key] = false;\n  return object;\n}, {} as Intent);\n\n/**\n * current window settings -- allows for dynamic resizing and also rotation on mobile web\n */\nexport type WindowState = {\n  orientation: \"original\" | \"rotated\"; // rotated === we are forcing landscape-in-portrait\n  innerWidth: number;\n  innerHeight: number;\n};\n\nexport type ComputedState = {\n  playerResourceAmounts?: { [k in ResourceType]: number };\n  playerResourceNodesAggregated?: HashMap<ResourceTypeAndModifier, number>;\n};\n\nexport class ResourceTypeAndModifier {\n  public type: ResourceNontrivialType;\n  public modifier: ResourceModifier;\n\n  constructor(args: {\n    type: ResourceNontrivialType;\n    modifier: ResourceModifier;\n  }) {\n    this.type = args.type;\n    this.modifier = args.modifier;\n  }\n\n  public hash(): string {\n    return this.type.toString() + \",\" + this.modifier.toString();\n  }\n}\n\nexport type PlayerUIState = {\n  selectedPointNode: PointNodeRef | undefined;\n  activeTab: number;\n};","import { HashSet } from \"../lib/util/data_structures/hash\";\nimport { enumKeys } from \"../lib/util/misc\";\nimport { ChunkGenConstants, PointNodeRef, WorldGenState } from \"../data/GameState\";\nimport { Vector2 } from \"../lib/util/geometry/vector2\";\n\nenum Direction {\n  NORTH = 'NORTH',\n  SOUTH = 'SOUTH',\n  EAST = 'EAST',\n  WEST = 'WEST',\n  UP = 'UP',\n  DOWN = 'DOWN',\n}\n\ntype NeighborsMap = { [k in Direction]?: PointNodeRef | undefined }\n\nexport function getNeighbors(selfPointNodeRef: PointNodeRef, worldGen: WorldGenState): PointNodeRef[] {\n  let neighborsMap = getNeighborsMap(selfPointNodeRef, worldGen);\n  let neighbors : PointNodeRef[] = []\n  for (let direction of enumKeys(Direction)) {\n    let it = neighborsMap[direction];\n    if (it) {\n      neighbors.push(it);\n    }\n  }\n  return neighbors;\n}\n\n// TODO(bowei): support vertical neighbors\nexport function getNeighborsMap(selfPointNodeRef: PointNodeRef, worldGen: WorldGenState): NeighborsMap {\n  let neighbors: NeighborsMap = {}\n\n  let zLevel = worldGen.zLevels[selfPointNodeRef.z]!\n  let myChunk = zLevel.chunks.get(selfPointNodeRef.chunkCoord)!;\n  // first, the right neighbor:\n  if (selfPointNodeRef.pointNodeCoord.x === ChunkGenConstants.CHUNK_HALF_DIM) {\n    let chunkCoord = selfPointNodeRef.chunkCoord.addX(1)\n    let chunk = zLevel.chunks.get(chunkCoord);\n    if (chunk) {\n      let pointNodeCoord = selfPointNodeRef.pointNodeCoord.withX(-ChunkGenConstants.CHUNK_HALF_DIM)\n      let nbor = chunk.pointNodes.get(pointNodeCoord);\n      if (nbor) {\n        neighbors.EAST = new PointNodeRef({\n          z: selfPointNodeRef.z,\n          chunkCoord,\n          pointNodeCoord,\n          pointNodeId: nbor.id\n        })\n      }\n    }\n  } else {\n    let pointNodeCoord = selfPointNodeRef.pointNodeCoord.addX(1);\n    let nbor = myChunk.pointNodes.get(pointNodeCoord);\n    if (nbor) {\n      neighbors.EAST = new PointNodeRef({\n        z: selfPointNodeRef.z,\n        chunkCoord: selfPointNodeRef.chunkCoord,\n        pointNodeCoord,\n        pointNodeId: nbor.id\n      })\n    }\n  }\n  // left neighbor\n  if (selfPointNodeRef.pointNodeCoord.x === -ChunkGenConstants.CHUNK_HALF_DIM) {\n    let chunkCoord = selfPointNodeRef.chunkCoord.addX(-1)\n    let chunk = zLevel.chunks.get(chunkCoord);\n    if (chunk) {\n      let pointNodeCoord = selfPointNodeRef.pointNodeCoord.withX(ChunkGenConstants.CHUNK_HALF_DIM)\n      let nbor = chunk.pointNodes.get(pointNodeCoord);\n      if (nbor) {\n        neighbors.WEST = new PointNodeRef({\n          z: selfPointNodeRef.z,\n          chunkCoord,\n          pointNodeCoord,\n          pointNodeId: nbor.id\n        })\n      }\n    }\n  } else {\n    let pointNodeCoord = selfPointNodeRef.pointNodeCoord.addX(-1);\n    let nbor = myChunk.pointNodes.get(pointNodeCoord);\n    if (nbor) {\n      neighbors.WEST = new PointNodeRef({\n        z: selfPointNodeRef.z,\n        chunkCoord: selfPointNodeRef.chunkCoord,\n        pointNodeCoord,\n        pointNodeId: nbor.id\n      })\n    }\n  }\n  // +y is down\n  if (selfPointNodeRef.pointNodeCoord.y === ChunkGenConstants.CHUNK_HALF_DIM) {\n    let chunkCoord = selfPointNodeRef.chunkCoord.addY(1)\n    let chunk = zLevel.chunks.get(chunkCoord);\n    if (chunk) {\n      let pointNodeCoord = selfPointNodeRef.pointNodeCoord.withY(-ChunkGenConstants.CHUNK_HALF_DIM)\n      let nbor = chunk.pointNodes.get(pointNodeCoord);\n      if (nbor) {\n        neighbors.SOUTH = new PointNodeRef({\n          z: selfPointNodeRef.z,\n          chunkCoord,\n          pointNodeCoord,\n          pointNodeId: nbor.id\n        })\n      }\n    }\n  } else {\n    let pointNodeCoord = selfPointNodeRef.pointNodeCoord.addY(1);\n    let nbor = myChunk.pointNodes.get(pointNodeCoord);\n    if (nbor) {\n      neighbors.SOUTH = new PointNodeRef({\n        z: selfPointNodeRef.z,\n        chunkCoord: selfPointNodeRef.chunkCoord,\n        pointNodeCoord,\n        pointNodeId: nbor.id\n      })\n    }\n  }\n  // -y is up\n  if (selfPointNodeRef.pointNodeCoord.y === -ChunkGenConstants.CHUNK_HALF_DIM) {\n    let chunkCoord = selfPointNodeRef.chunkCoord.addY(-1)\n    let chunk = zLevel.chunks.get(chunkCoord);\n    if (chunk) {\n      let pointNodeCoord = selfPointNodeRef.pointNodeCoord.withY(ChunkGenConstants.CHUNK_HALF_DIM)\n      let nbor = chunk.pointNodes.get(pointNodeCoord);\n      if (nbor) {\n        neighbors.NORTH = new PointNodeRef({\n          z: selfPointNodeRef.z,\n          chunkCoord,\n          pointNodeCoord,\n          pointNodeId: nbor.id\n        })\n      }\n    }\n  } else {\n    let pointNodeCoord = selfPointNodeRef.pointNodeCoord.addY(-1);\n    let nbor = myChunk.pointNodes.get(pointNodeCoord);\n    if (nbor) {\n      neighbors.NORTH = new PointNodeRef({\n        z: selfPointNodeRef.z,\n        chunkCoord: selfPointNodeRef.chunkCoord,\n        pointNodeCoord,\n        pointNodeId: nbor.id\n      })\n    }\n  }\n  \n  // progress zlevels\n  // up is only available if we are the center of our chunk\n  if (selfPointNodeRef.pointNodeCoord.equals(Vector2.Zero)) {\n    let upZLevel = worldGen.zLevels[selfPointNodeRef.z + 1];\n    if (upZLevel) {\n      // use our chunkcoord and divide by CHUNK_DIM \n      let chunkCoord = selfPointNodeRef.chunkCoord;\n      let upChunkCoordX = Math.round(chunkCoord.x / ChunkGenConstants.CHUNK_DIM)\n      let upNodeX = chunkCoord.x - ChunkGenConstants.CHUNK_DIM * upChunkCoordX // should be between - CHUNK_HALF_DIM and CHUNK_HALF_DIM\n      let upChunkCoordY = Math.round(chunkCoord.y / ChunkGenConstants.CHUNK_DIM)\n      let upNodeY = chunkCoord.y - ChunkGenConstants.CHUNK_DIM * upChunkCoordX // should be between - CHUNK_HALF_DIM and CHUNK_HALF_DIM\n      let upChunkCoord = new Vector2(upChunkCoordX, upChunkCoordY);\n      let upChunk = upZLevel.chunks.get(upChunkCoord);\n      if (upChunk) {\n        let upNode = new Vector2(upNodeX, upNodeY);\n        let nbor = upChunk.pointNodes.get(upNode)\n        if (nbor) {\n          neighbors.UP = new PointNodeRef({\n            z: selfPointNodeRef.z + 1,\n            chunkCoord: upChunkCoord,\n            pointNodeCoord: upNode,\n            pointNodeId: nbor.id\n          });\n        }\n      }\n    }\n  }\n  // down\n  let downZLevel = worldGen.zLevels[selfPointNodeRef.z - 1];\n  if (downZLevel) {\n    let chunkCoord = selfPointNodeRef.chunkCoord.multiply(9).add(selfPointNodeRef.pointNodeCoord);\n    let downChunk = downZLevel.chunks.get(chunkCoord);\n    if (downChunk) {\n      let nbor = downChunk.pointNodes.get(Vector2.Zero);\n      if (nbor) {\n        neighbors.DOWN = new PointNodeRef({\n          z: selfPointNodeRef.z - 1,\n          chunkCoord,\n          pointNodeCoord: Vector2.Zero,\n          pointNodeId: nbor.id\n        });\n      }\n    }\n  }\n\n  return neighbors;\n}\n\nexport function canAllocate(\n  selfPointNodeRef: PointNodeRef,\n  worldGen: WorldGenState,\n  allocatedPointNodeSet: HashSet<PointNodeRef>,\n  hasActiveQuest: boolean,\n): \"yes\" | \"already allocated\" | \"no active quest\" | \"not connected\" {\n  if (allocatedPointNodeSet.contains(selfPointNodeRef)) {\n    return \"already allocated\";\n  }\n  if (hasActiveQuest === false) {\n    return \"no active quest\"\n  }\n\n  // check if any of our neighbors are allocated\n  const neighbors = getNeighbors(selfPointNodeRef, worldGen);\n  \n  for (let nbor of neighbors) {\n    if (allocatedPointNodeSet.contains(nbor)) {\n      return \"yes\";\n    }\n  }\n\n  return \"not connected\";\n}","export const EPSILON = 0.0000001;\n\nexport const epsEqual = (x: number, y: number) => {\n  return Math.abs(x - y) < EPSILON;\n}\n\nexport const epsGreaterThan = (x: number, y: number) => {\n  return (x + EPSILON - y) > 0;\n}\n\nexport const epsLessThan = (x: number, y: number) => {\n  return (x - EPSILON - y) < 0;\n}","import { EPSILON } from \"../epsilon_math\";\nimport { Util } from \"../misc\";\n\nexport interface IVector2 {\n  x: number;\n  y: number;\n}\n\nexport class Vector2 {\n  private _x: number;\n  private _y: number;\n\n  public get x(): number { return this._x; }\n  public get y(): number { return this._y; }\n\n  constructor();\n  constructor(x: number, y: number);\n  constructor(props: { x: number, y: number });\n  constructor(propsOrX: { x: number, y: number } | number = { x: 0, y: 0 }, y?: number) {\n    if (typeof propsOrX === \"number\") {\n      this._x = propsOrX;\n      this._y = y!;\n    } else {\n      this._x = propsOrX.x;\n      this._y = propsOrX.y;\n    }\n  }\n\n  public get half(): Vector2 {\n    return new Vector2({ x: this.x / 2, y: this.y / 2 });\n  }\n\n  public static Zero: Vector2 = new Vector2(0, 0);\n  public static One: Vector2 = new Vector2(1, 1);\n\n  static IsVector2(x: any): x is Vector2 {\n    return x instanceof Vector2;\n  }\n\n  static Random(highX: number, highY: number, lowX = 0, lowY = 0) {\n    return new Vector2({\n      x: Util.RandRange(lowX, highX),\n      y: Util.RandRange(lowY, highY),\n    });\n  }\n\n  hash(): string {\n    return this.toString();\n  }\n\n  toString(): string {\n    return `[${this.x}, ${this.y}]`;\n  }\n\n  invert(): Vector2 {\n    return new Vector2({\n      x: -this.x,\n      y: -this.y,\n    });\n  }\n\n  round(): Vector2 {\n    return new Vector2({\n      x: Math.round(this.x),\n      y: Math.round(this.y),\n    });\n  }\n\n  floor(): Vector2 {\n    return new Vector2({\n      x: Math.floor(this.x),\n      y: Math.floor(this.y),\n    });\n  }\n\n  taxicabDistance(p: Vector2): number {\n    return Math.abs(p.x - this.x) + Math.abs(p.y - this.y);\n  }\n\n  diagonalDistance(p: IVector2): number {\n    return Math.max(Math.abs(p.x - this.x), Math.abs(p.y - this.y));\n  }\n\n  distance(p: IVector2): number {\n    let dx = Math.abs(p.x - this.x);\n    let dy = Math.abs(p.y - this.y);\n\n    return Math.sqrt(dx * dx + dy * dy);\n  }\n\n  translate(p: { x: number, y: number }): Vector2 {\n    return new Vector2({\n      x: this.x + p.x,\n      y: this.y + p.y,\n    });\n  }\n\n  subtract(p: { x: number, y: number }): Vector2 {\n    return new Vector2({\n      x: this.x - p.x,\n      y: this.y - p.y,\n    });\n  }\n\n  add(p: { x: number, y: number }): Vector2 {\n    return new Vector2({\n      x: this.x + p.x,\n      y: this.y + p.y,\n    });\n  }\n\n  addX(x: number): Vector2 {\n    return new Vector2({\n      x: this.x + x,\n      y: this.y,\n    });\n  }\n\n  addY(y: number): Vector2 {\n    return new Vector2({\n      x: this.x,\n      y: this.y + y,\n    });\n  }\n\n  subtractX(x: number): Vector2 {\n    return new Vector2({\n      x: this.x - x,\n      y: this.y,\n    });\n  }\n\n  subtractY(y: number): Vector2 {\n    return new Vector2({\n      x: this.x,\n      y: this.y - y,\n    });\n  }\n\n  clampY(low: number, high: number): Vector2 {\n    let newY = this.y;\n\n    if (newY < low) { newY = low; }\n    if (newY > high) { newY = high; }\n\n    return new Vector2({\n      x: this.x,\n      y: newY,\n    });\n  }\n\n  scale(about: { x: number; y: number }, amount: { x: number; y: number }): Vector2 {\n    return new Vector2({\n      x: (this.x - about.x) * amount.x + about.x,\n      y: (this.y - about.y) * amount.y + about.y,\n    });\n  }\n\n  rotate(origin: Vector2, angle: number): Vector2 {\n    angle = angle / (180 / Math.PI);\n\n    return new Vector2({\n      x: Math.cos(angle) * (this.x - origin.x) - Math.sin(angle) * (this.y - origin.y) + origin.x,\n      y: Math.sin(angle) * (this.x - origin.x) + Math.cos(angle) * (this.y - origin.y) + origin.y,\n    });\n  }\n\n  equals(other: Vector2 | undefined): boolean {\n    if (other === undefined) {\n      return false;\n    }\n\n    return (\n      Math.abs(this.x - other.x) < EPSILON &&\n      Math.abs(this.y - other.y) < EPSILON\n    );\n  }\n\n  multiply(other: Vector2 | number): Vector2 {\n    if (typeof other === \"number\") {\n      return new Vector2({\n        x: this.x * other,\n        y: this.y * other,\n      });\n    } else {\n      return new Vector2({\n        x: this.x * other.x,\n        y: this.y * other.y,\n      });\n    }\n  }\n\n  divide(other: Vector2 | number): Vector2 {\n    if (typeof other === \"number\") {\n      return new Vector2({\n        x: this.x / other,\n        y: this.y / other,\n      });\n    } else {\n      return new Vector2({\n        x: this.x / other.x,\n        y: this.y / other.y,\n      });\n    }\n  }\n\n  toJSON(): any {\n    return {\n      __type: \"Vector2\",\n      x: this.x,\n      y: this.y,\n    }\n  }\n\n  transform(trans: Vector2, scale: number): Vector2 {\n    return new Vector2({\n      x: Math.floor((this.x - trans.x) * scale),\n      y: Math.floor((this.y - trans.y) * scale),\n    });\n  }\n\n  normalize(): Vector2 {\n    if (this.x === 0 && this.y === 0) {\n      return this;\n    }\n\n    const length = Math.sqrt(this.x * this.x + this.y * this.y);\n\n    return new Vector2({\n      x: this.x / length,\n      y: this.y / length\n    });\n  }\n\n  withX(newX: number): Vector2 {\n    return new Vector2({\n      x: newX,\n      y: this.y,\n    });\n  }\n\n  withY(newY: number): Vector2 {\n    return new Vector2({\n      x: this.x,\n      y: newY,\n    });\n  }\n\n  invertX(): Vector2 {\n    return new Vector2({\n      x: -this.x,\n      y: this.y,\n    });\n  }\n\n  lerp(other: Vector2, t: number): Vector2 {\n    if (t > 1 || t < 0) { console.error(\"Lerp t must be between 0 and 1.\"); }\n    if (t === 0) return this;\n    if (t === 1) return other;\n\n    return this.scale({ x: 0, y: 0 }, { x: 1 - t, y: 1 - t }).add(other.scale({ x: 0, y: 0 }, { x: t, y: t }))\n  }\n\n  lerp2D(other: Vector2, tx: number, ty: number): Vector2 {\n    if (tx > 1 || tx < 0 || ty > 1 || ty < 0) { console.error(\"Lerp t must be between 0 and 1.\"); }\n    return this.scale({ x: 0, y: 0 }, { x: 1 - tx, y: 1 - ty }).add(other.scale({ x: 0, y: 0 }, { x: tx, y: ty }))\n  }\n\n  coserp(other: Vector2, t: number): Vector2 {\n    t = 0.5 * (1 + Math.cos(2 * t * Math.PI));\n\n    return this.lerp(other, t);\n  }\n\n  static Deserialize(obj: any): Vector2 {\n    if (!obj.hasOwnProperty(\"x\") || !obj.hasOwnProperty(\"y\")) {\n      console.error(\"Failed deserializing point\");\n    }\n\n    return new Vector2({\n      x: obj.x,\n      y: obj.y,\n    });\n  }\n\n  static Serialize(obj: Vector2): string {\n    return JSON.stringify({ x: obj.x, y: obj.y });\n  }\n}","import { PlayerSaveState } from \"../data/GameState\";\nimport { Const } from \"../lib/util/misc\";\n\n\nexport function computeQuestEfficiencyPercent(playerSave: Const<PlayerSaveState>): number {\n  if (playerSave.questProgressHistory.length === 0) {\n    return 100;\n  }\n  let noEffectNodeCount = 0;\n  playerSave.questProgressHistory.forEach((num, i, arr) => {\n    let prev = (i === 0) ? playerSave.questInitialAmount : arr[i - 1];\n    if (num === prev) {\n      noEffectNodeCount += 1;\n    }\n  });\n  // guaranteed to be between 0 and 100\n  // let noEffectNodePercent = 100 * noEffectNodeCount / (playerSave.questProgressHistory.length); \n  // add a 2-node buffer so efficiency doesnt drop to 0 at the very beginning of a quest\n  const noEffectNodeBufferCount = 0.5;\n  let noEffectNodePercent = 100 * (noEffectNodeCount) / (playerSave.questProgressHistory.length + noEffectNodeBufferCount); \n  console.log({ noEffectNodeCount, noEffectNodePercent });\n\n  // the baseline we expect effect node percent to be -- influenced by world gen\n  // let hasEffectNodePercentBaseline = 100;\n  // let hasEffectNodeEfficiencyRaw = Math.min((100 - noEffectNodePercent) / hasEffectNodePercentBaseline * 100, 100);\n\n  return (100 - noEffectNodePercent);\n}\n\nexport function remapQuestEfficiencyToDisplayable(percent: number): number {\n  // remaps the 0-100 percent scale to something that looks better\n  // let's try: 5-110, but also 50 -> 80\n  let x = percent / 100;\n  x = 1 - Math.pow((1 - x), 3);\n  x = x * 1.05 + 0.05;\n  x = Math.max(0, Math.min(x * 100, 100));\n  return x;\n}\n\nexport type Grade = \"S\" | \"A\" | \"B\" | \"C\" | \"D\";\nexport function remapQuestEfficiencyToGrade(percent: number): Grade {\n  const displayable = remapQuestEfficiencyToDisplayable(percent);\n  // 0 - 100, remap to grades D, C, B, A, S\n  if (displayable <= 20) {\n    return \"D\";\n  } else if (displayable <= 40) {\n    return \"C\";\n  } else if (displayable <= 60) {\n    return \"B\";\n  } else if (displayable <= 80) {\n    return \"A\";\n  } else {\n    return \"S\";\n  }\n}\n\nexport function remapEfficiencyGradeToNumber(grade: Grade) : number {\n  if (grade === \"S\") {\n    return 4;\n  } else if (grade === \"A\") {\n    return 3;\n  } else if (grade === \"B\") {\n    return 2;\n  } else if (grade === \"C\") {\n    return 1;\n  } else if (grade === \"D\") {\n    return 0;\n  } else {\n    return 0;\n  }\n}","import React, { useEffect, useState } from \"react\";\nimport { ComputedState, PlayerSaveState, PointNodeRef, ResourceType, WorldGenState } from \"../data/GameState\";\nimport { HashSet } from \"../lib/util/data_structures/hash\";\nimport { canAllocate } from \"../game/Neighbors\";\nimport { computeQuestEfficiencyPercent } from \"../game/EfficiencyCalculator\";\n\ntype Props = {\n  selectedPointNode?: PointNodeRef\n  allocatedPointNodeSet: HashSet<PointNodeRef>,\n  worldGen: WorldGenState,\n  playerSave: PlayerSaveState,\n  computed: ComputedState\n}\n\nexport function DebugTab({\n  selectedPointNode,\n  playerSave,\n  worldGen,\n  computed\n}: Props) {\n  const { allocatedPointNodeSet} = playerSave;\n\n  let [b64PlayerSaveString, setB64PlayerSaveString] = useState<string>('');\n  const [history, setHistory] = useState<PointNodeRef[]>([]);\n  useEffect(() => {\n    if (!selectedPointNode) return;\n    setHistory((history) => [...history, selectedPointNode]);\n  }, [selectedPointNode]);\n\n  if (!selectedPointNode) {\n    return (<> </>)\n  }\n  const pointNodeGen = worldGen.zLevels[selectedPointNode.z]!.chunks.get(selectedPointNode.chunkCoord)!.pointNodes.get(selectedPointNode.pointNodeCoord)!\n  const isAllocated = (allocatedPointNodeSet.contains(selectedPointNode));\n  const canBeAllocated: string = canAllocate(selectedPointNode, worldGen, allocatedPointNodeSet, playerSave.activeQuest !== undefined);\n  let nodeDescription: string = \"Nothing (empty node)\";\n  if (pointNodeGen.resourceType !== ResourceType.Nothing) {\n    nodeDescription = `${pointNodeGen.resourceAmount} ${pointNodeGen.resourceModifier} ${pointNodeGen.resourceType}`\n  }\n  return (\n    <>\n      <h3>Player resources</h3> \n      {JSON.stringify(computed.playerResourceAmounts)}\n      <h3>Export to string</h3>\n      <div>\n      <button onClick={() => {\n        // window.alert(btoa(JSON.stringify(playerSave)));\n        setB64PlayerSaveString(btoa(JSON.stringify(playerSave, undefined, 2)));\n      }}>\n        export to base64 {' '}\n      </button></div>\n      <div>{b64PlayerSaveString}</div>\n      <h3>Current Node</h3>\n      <div>\n        Z={selectedPointNode.z}\n      </div>\n      <div>\n        Chunk={selectedPointNode.chunkCoord.x},{selectedPointNode.chunkCoord.y}\n      </div>\n      <div>\n        Node={selectedPointNode.pointNodeCoord.x},{selectedPointNode.pointNodeCoord.y}\n      </div>\n      <br></br>\n      <div>Allocated? <br />{isAllocated ? \"yes\" : \"no\"} </div>\n      <br></br>\n      <div>Can be allocated? <br />{canBeAllocated} </div>\n      <br></br>\n      <div> Stats: </div>\n      <div> {nodeDescription} </div>\n      <h3>efficiency percent</h3>\n      {\n        computeQuestEfficiencyPercent(playerSave)\n      }\n      <h3>Quest progress history</h3>\n      {\n        playerSave.questProgressHistory.length === 0 ? (<> empty </>) : \n        playerSave.questProgressHistory.map((num, i) => {\n          return (\n            <div key={i}>\n              i={i}, quest progress={num}\n            </div>\n          )\n        })\n      }\n      <h3>Previous</h3>\n      {history\n        .slice(0, -1)\n        .map((pointNodeRef: PointNodeRef, i) => {\n          return (\n            <div key={i}>\n              <div>\n                Z={pointNodeRef.z} { }\n                Chunk={pointNodeRef.chunkCoord.x},{pointNodeRef.chunkCoord.y} { }\n                Node={pointNodeRef.pointNodeCoord.x},{pointNodeRef.pointNodeCoord.y}\n              </div>\n            </div>\n          );\n        })\n        .reverse()}\n    </>\n  );\n}\n\n","import React from \"react\";\nimport { GameState, IntentName, PlayerIntentState } from \"../data/GameState\";\nimport { UpdaterGeneratorType2 } from \"../lib/util/updaterGenerator\";\n\ntype Props = {\n  updaters: UpdaterGeneratorType2<PlayerIntentState, GameState>;\n  intent: PlayerIntentState;\n};\n\ntype State = {\n  keyIntentConfig: keyToIntentMap;\n};\n\n// TODO: enumerate all the keyboard keys we care about\ntype BrowserKeys = string;\n\n/**\n * Holds the mapping of which keyboard keys (as interpreted by the browser)\n * map to which intents, e.g. \"up arrow\" means \"pan left\"\n */\ntype keyToIntentMap = {\n  [key in BrowserKeys]?: IntentName;\n};\n\nconst defaultKeyIntentConfig = {\n  w: IntentName.PAN_NORTH,\n  a: IntentName.PAN_WEST,\n  s: IntentName.PAN_SOUTH,\n  d: IntentName.PAN_EAST,\n  ArrowUp: IntentName.PAN_NORTH,\n  ArrowLeft: IntentName.PAN_WEST,\n  ArrowDown: IntentName.PAN_SOUTH,\n  ArrowRight: IntentName.PAN_EAST,\n  \"<\": IntentName.TRAVEL_OUT,\n  \">\": IntentName.TRAVEL_IN,\n};\n\nexport class KeyboardControlComponent extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      keyIntentConfig: defaultKeyIntentConfig,\n    };\n    document.addEventListener(\"keydown\", this.handleKeydown);\n    document.addEventListener(\"keyup\", this.handleKeyup);\n  }\n\n  // NOTE(bowei): does using e.repeat here break when window loses focus??\n  handleKeydown = (e: KeyboardEvent) => {\n    const { keyIntentConfig } = this.state;\n    const key: BrowserKeys = e.key;\n    const configuredIntent = keyIntentConfig[key];\n    if (\n      e.repeat === false &&\n      configuredIntent !== undefined &&\n      configuredIntent !== IntentName.NOOP\n    ) {\n      this.props.updaters.newIntent[configuredIntent].enqueueUpdate(() => {\n        this.props.updaters.newIntent[configuredIntent].enqueueUpdate(\n          () => false\n        );\n        return true;\n      });\n      this.props.updaters.activeIntent[configuredIntent].enqueueUpdate(\n        () => true\n      );\n    }\n  };\n\n  handleKeyup = (e: KeyboardEvent) => {\n    const { keyIntentConfig } = this.state;\n    const key: BrowserKeys = e.key;\n    const configuredIntent = keyIntentConfig[key];\n    if (\n      configuredIntent !== undefined &&\n      configuredIntent !== IntentName.NOOP\n    ) {\n      this.props.updaters.activeIntent[configuredIntent].enqueueUpdate(\n        () => false\n      );\n      this.props.updaters.endedIntent[configuredIntent].enqueueUpdate(() => {\n        this.props.updaters.endedIntent[configuredIntent].enqueueUpdate(\n          () => false\n        );\n        return true;\n      });\n    }\n  };\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeydown);\n    document.removeEventListener(\"keyup\", this.handleKeyup);\n  }\n  render() {\n    return \"hi\";\n  }\n}\n","import React from \"react\";\nimport { PointNodeRef, ResourceType, WorldGenState } from \"../data/GameState\";\nimport { canAllocate } from \"../game/Neighbors\";\nimport { HashSet } from \"../lib/util/data_structures/hash\";\n\ntype Props = {\n  selectedPointNode?: PointNodeRef;\n  allocatedPointNodeSet: HashSet<PointNodeRef>;\n  worldGen: WorldGenState;\n  hasActiveQuest: boolean;\n};\nexport const NodeDetail = React.memo(NodeDetailComponent);\nfunction NodeDetailComponent({\n  selectedPointNode,\n  allocatedPointNodeSet,\n  worldGen,\n  hasActiveQuest,\n}: Props) {\n  if (!selectedPointNode) {\n    return (\n      <>\n        <h1>Stats</h1>\n        <div>Select a node first!</div>\n      </>\n    );\n  }\n  const pointNodeGen = worldGen.zLevels[selectedPointNode.z]!.chunks.get(\n    selectedPointNode.chunkCoord\n  )!.pointNodes.get(selectedPointNode.pointNodeCoord)!;\n  const isAllocated = allocatedPointNodeSet.contains(selectedPointNode);\n  const canBeAllocated: string = canAllocate(\n    selectedPointNode,\n    worldGen,\n    allocatedPointNodeSet,\n    hasActiveQuest,\n  );\n  let nodeDescription: string = \"Nothing (empty node)\";\n  if (pointNodeGen.resourceType !== ResourceType.Nothing) {\n    nodeDescription = `${pointNodeGen.resourceAmount} ${pointNodeGen.resourceModifier} ${pointNodeGen.resourceType}`;\n  }\n  return (\n    <>\n      <h1>Stats</h1>\n      <div> {nodeDescription} </div>\n      <h3>Allocated?</h3>\n      {isAllocated ? \"yes\" : \"no\"}\n      <h3>Can be allocated?</h3>\n      {canBeAllocated}\n    </>\n  );\n}\n","import React from \"react\";\nimport { GameState } from \"./data/GameState\";\nimport { Const } from \"./lib/util/misc\";\nimport { UpdaterGeneratorType2 } from \"./lib/util/updaterGenerator\";\n\n// nullable, but should be OK, just remember to populate the context\n// export const GameContext = React.createContext<GameState>(null as any);\n// export const GameUpdatersContext = React.createContext<UpdaterGeneratorType<GameState>>(null as any);\nexport const UseGameStateContext = React.createContext<[Const<GameState>, UpdaterGeneratorType2<GameState>, () => void]>([] as any);","import React, { useContext, useEffect, useRef } from \"react\";\nimport { UseGameStateContext } from \"../contexts\";\nimport { PixiReactBridge } from \"../pixi/PixiReactBridge\";\nimport { WindowState } from \"../data/GameState\";\n\nexport function PixiWrapperComponent(props: {\n  application: PixiReactBridge,\n  windowState: WindowState,\n  fireBatchedSetWindowState: () => void,\n}) {\n  const { application, windowState } = props;\n  const container = useRef<HTMLDivElement>(null);\n  const [gameState, gameStateUpdaters, fireBatchedSetGameState]  = useContext(UseGameStateContext);\n  const fireBatch = () => {\n      fireBatchedSetGameState();\n      props.fireBatchedSetWindowState();\n    }\n\n  useEffect(() => {\n    // this block only triggers if a new application instance is created.\n    // first remove old application\n    // const oldLength = container.current!.childNodes.length;\n    for (let i = container.current!.childNodes.length - 1; i >= 0; i--) {\n      container.current!.removeChild(container.current!.childNodes[i]);\n    }\n    // if (oldLength != 0) {\n    //   return;\n    // }\n    // add the application\n    container.current!.appendChild(application.app.view);\n  }, [application]);\n\n  // const prevRef = useRef<Const<GameState>>();\n  // useEffect(() => {\n  //   prevRef.current = gameState;\n  // });\n  // const prevGameState = prevRef.current;\n\n  // Trigger component render on first load and also when game state is updated\n  application.rerender({\n    args: {\n      fireBatch, \n      isSecondConstructorCall: false,\n    },\n    updaters: gameStateUpdaters,\n    windowState,\n    gameState,\n  })\n\n  return (\n    <>\n      <div ref={container} />\n    </>\n  );\n}","/**\n * Intended as a typescript-friendly replacement for {[k: string]: boolean} that allows us to specify what the key type should be (\n * rather than allowing any keyType.toString() to be a valid key, and without going through the trouble of declaring distinguishable\n * types for each key type we want to use). Also serves as a slightly different version of ES6 native Set(), which is hardcoded\n * to use === for object referential equality.\n * \n * NOTE: this assume hash() is a strong test for equality, i.e. 2 objects are considered equal if and only if their hashes are the same!!!\n * TODO: write StrictHashSet<K extends {hash(): string, equals(k: K): boolean}> to handle custom equality checks\n */\nexport class HashSet<K extends { hash(): string }> {\n  private _values: HashMap<K, K>;\n\n  constructor(initialValues: K[] = []) {\n    this._values = new HashMap<K, K>();\n\n    for (const value of initialValues) {\n      this.put(value);\n    }\n  }\n\n  remove(key: K): void {\n    this._values.remove(key);\n  }\n\n  put(key: K): void {\n    this._values.put(key, key);\n  }\n\n  get(key: K): boolean {\n    return this._values.get(key) !== undefined;\n  }\n\n  contains(key: K): boolean {\n    return this._values.contains(key);\n  }\n\n  values(): K[] {\n    return this._values.values();\n  }\n\n  // hash(): string {\n  //   return this._values.hashKeyset();\n  // }\n\n  clone(): HashSet<K> {\n    let n = new HashSet<K>();\n    n._values = this._values.clone()\n    return n;\n  }\n\n  size(): number {\n    return this._values.size();\n  }\n\n  equals(other: HashSet<K> | undefined | null) {\n    if (other === undefined || other === null) {\n      return false;\n    }\n\n    if (this.size() !== other.size()) {\n      return false;\n    }\n\n    for (let k of this.values()) {\n      if (!other.contains(k)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  // *[Symbol.iterator]() {\n  //   // construct a new iterator. note that as usual\n  //   for (let key of Object.keys(this._values)) {\n  //     yield key;\n  //   }\n  // }\n}\n\n/**\n * Intended as a typescript-friendly replacement for {[k: string]: V} that allows us to specify what the key type should be (\n * rather than allowing any keyType.toString() to be a valid key, and without going through the trouble of declaring distinguishable\n * types for each key type we want to use). Also serves as a slightly different version of ES6 native Map(), which is hardcoded\n * to use === for object referential equality.\n * \n * NOTE: this assume hash() is a strong test for equality, i.e. 2 objects are considered equal if and only if their hashes are the same!!!\n * TODO: write StrictHashMap<K extends {hash(): string, equals(K): boolean}> to handle custom equality checks\n */\nexport class HashMap<K extends { hash(): string }, V> {\n  protected _values: { [key: string]: V } = {};\n\n  put(key: K, value: V) {\n    this._values[key.hash()] = value;\n  }\n\n  remove(key: K): void {\n    delete this._values[key.hash()];\n  }\n\n  get(key: K): V | undefined {\n    return this._values[key.hash()];\n  }\n\n  contains(key: K): boolean {\n    // V may be an undefined type\n    return this.get(key) !== undefined && key.hash() in this._values;\n  }\n\n  values(): V[] {\n    return Object.values(this._values);\n    // return Object.keys(this._values).map(key => this._values[key]); // why grant???\n  }\n\n  // *[Symbol.iterator]() {\n  //   // construct a new iterator. note that as usual editing the object during iteration is not supported\n  //   for (let key of Object.keys(this._values)) {\n  //     yield key;\n  //   }\n  // }\n\n  // hashes only the keys - use HashableHashMap if you know that the value type here is also hashable\n  // hashKeyset(): string {\n  //   const hashes: number[] = Object.keys(this._values).map(s => hashCode(s));\n  //   let code: number = hashes.reduce((pv, cv) => pv + cv);\n  //   return code.toString();\n  // }\n\n  size(): number {\n    return Object.keys(this._values).length;\n  }\n\n  clone(): HashMap<K, V> {\n    let n = new HashMap<K, V>();\n    n._values = { ...this._values };\n    return n;\n  }\n}\n\nexport class HashableHashMap<K extends { hash(): string }, V extends { hash(): string }> extends HashMap<K, V> {\n  hash(): string {\n    const hashes: number[] = Object.entries(this._values).map(([s, v]) => hashCode(s) + hashCode(v.hash()));\n    let code: number = hashes.reduce((pv, cv) => pv + cv);\n    return code.toString();\n  }\n}\n\n/**\n * Same as HashMap, but actually stores the keys used to key the hashmap, instead of just their hashes.\n * Allows iteration over the full key-value pair set.\n */\nexport class KeyedHashMap<K extends { hash(): string }, V>{\n  private _kvalues: { [key: string]: [K, V] } = {};\n\n  put(key: K, value: V) {\n    this._kvalues[key.hash()] = [key, value];\n  }\n\n  remove(key: K): void {\n    delete this._kvalues[key.hash()];\n  }\n\n  get(key: K): V | undefined {\n    return this._kvalues[key.hash()]?.[1];\n  }\n\n  contains(key: K): boolean {\n    // V may be an undefined type\n    return this.get(key) !== undefined && key.hash() in this._kvalues;\n  }\n\n  keys(): K[] {\n    return Object.keys(this._kvalues).map(key => this._kvalues[key][0]);\n  }\n\n  entries(): ([K, V])[] {\n    return Object.keys(this._kvalues).map(key => this._kvalues[key]);\n  }\n\n  values(): V[] {\n    return Object.keys(this._kvalues).map(key => this._kvalues[key][1]);\n  }\n\n  hashKeyset(): string {\n    const hashes: number[] = Object.keys(this._kvalues).map(s => hashCode(s));\n    let code: number = hashes.reduce((pv, cv) => pv + cv);\n    return code.toString();\n  }\n\n  clone(): KeyedHashMap<K, V> {\n    let n = new KeyedHashMap<K, V>();\n    n._kvalues = { ...this._kvalues };\n    return n;\n  }\n\n  size(): number {\n    return Object.keys(this._kvalues).length;\n  }\n}\n\nexport class DefaultHashMap<K extends { hash(): string }, V> {\n  private _values: { [key: string]: V } = {};\n  private _makeDefault: () => V;\n\n  constructor(makeDefaultValue: () => V) {\n    this._makeDefault = makeDefaultValue;\n  }\n\n  put(key: K, value: V) {\n    this._values[key.hash()] = value;\n  }\n\n  get(key: K): V {\n    if (this._values[key.hash()] === undefined) {\n      this._values[key.hash()] = this._makeDefault();\n    } \n\n    return this._values[key.hash()];\n  }\n}\n\n// Hash a string to a number. source: https://gist.github.com/hyamamoto/fd435505d29ebfa3d9716fd2be8d42f0\nexport function hashCode(s: string): number {\n  let h = 0;\n  for (let i = 0; i < s.length; i++) {\n    h = Math.imul(31, h) + s.charCodeAt(i) | 0;\n  }\n  return h;\n}\n\n// declare global {\n//   interface Array<T extends { hash(): string }> {\n//     hash(): string\n//   }\n// \n//   interface Number {\n//     hash(): string\n//   }\n// \n//   interface String {\n//     hash(): String\n//   }\n// }\n// \n// Array.prototype.hash = function () {\n//   return hashArray(this);\n// }\n// \n// Number.prototype.hash = function () {\n//   return this.toString();\n// }\n// \n// String.prototype.hash = function () {\n//   return this;\n// }\n// \n// function hashArray<T extends { hash(): string }>(arr: T[]): string {\n//   return arr.map(elt => hashCode(elt.hash())).reduce((pv, cv) => 31 * pv + cv).hash();\n// }\n// ","import * as Pixi from \"pixi.js\";\nimport { IVector2 } from \"../util/geometry/vector2\";\n\nexport function PixiPointFrom(p: IVector2): Pixi.Point {\n  return new Pixi.Point(p.x, p.y);\n}","/**\n * \n * @param fn an arbitrary callback which performs some operation with side effects.\n * @returns a tuple: [batchedFn, fireBatch]. \n * batchedFn takes the same arguments as fn, but the side effects are delayed until fireBatch is called.\n * if batchedFn is called multiple times, those invocations are stored in order, and then popped off in order when fireBatch is called.\n */\nexport function batchify<A extends any[]>(fn: (...args: A)=> void): [((...args: A) => void), () => void] {\n  let batch: A[] = [];\n\n  return [(...args: A) => {\n    batch.push(args);\n    // console.log({ stack: new Error().stack, batchSize: batch.length });\n    // console.log({ batchSize: batch.length });\n  }, (() => {\n      if (batch.length !== 0) { console.log({ fired: batch.length }); }\n      for (let a of batch) {\n        fn(...a);\n      }\n      batch = [];\n    })\n  ];\n}\n\n/**\n * Same use case and types as [batchify], however, specifically we expect [fn] to be a setState function which takes value-or-callback\n * as its single argument, and instead of calling [fn] repeatedly for each callback in the batch, we apply the callbacks in the batch\n * sequentially to get a single state update which we then provide to [fn].\n */\nexport function batchifySetState<T>(\n  fn: (arg: T) => void\n): [((arg: T) => void), () => void] {\n  let batch: T[] = [];\n\n  return [(arg: T) => {\n    batch.push(arg);\n    // console.log({ batchSize: batch.length });\n  }, (() => {\n      if (batch.length === 0) {\n        return;\n      }\n      // console.log({ fired: batch.length });\n      let thisBatch = [...batch];\n      batch = [];\n      (fn as any)((prev: any) => {\n        let next = prev;\n        for (let valueOrCallback of thisBatch) {\n          if (typeof valueOrCallback === 'function') {\n            next = valueOrCallback(next);\n          } else {\n            next = valueOrCallback;\n          }\n        }\n        return next;\n      });\n  })]\n}\n\n","\ntype UpdaterFnParam2<T, W> = ((prev: T, prevWhole: W) => T) | (T extends Function ? never : T) // (T | ((prev: T, prevWhole: W) => T));\ntype UpdaterFn2<T, W> = (arg: UpdaterFnParam2<T, W>) => void;\n\n/**\n * Represent the type which has the same deep object struture as T but instead of values, it has\n * functions on [getUpdater], [enqueueUpdate], and [update] attached to every level of the object structure.\n */\nexport type UpdaterGeneratorType2<T, W = T> = {\n  [k in keyof T]: ((T[k] extends { [kkt: string]: any } ? UpdaterGeneratorType2<T[k], W> : {}) & {\n    getUpdater: () => UpdaterFn2<T[k], W>,\n    enqueueUpdate: UpdaterFn2<T[k], W>,\n  })\n} & {\n  getUpdater: () => UpdaterFn2<T, W>,\n  enqueueUpdate: UpdaterFn2<T, W>,\n}\n\n// helper method for the recursion\nfunction updaterGenerator2Helper<T, W>(dataObject: T, dataUpdater: UpdaterFn2<T, W>): UpdaterGeneratorType2<T, W> {\n  const updaters: UpdaterGeneratorType2<T, W> = {} as any;\n  updaters.getUpdater = () => dataUpdater;\n  updaters.enqueueUpdate = dataUpdater;\n  if (typeof dataObject !== \"object\") return updaters;\n  else {\n    const keys: (keyof T)[] = Object.keys(dataObject) as any;\n    keys.forEach((key: (keyof T)) => {\n      if (key === \"enqueueUpdate\" || key === \"getUpdater\" || key === \"update\") {\n        throw Error(`Invalid key in updaterGenerator: ${key} conflicts with reserved keywords enqueueUpdate, update, getUpdater.`);\n      }\n      function keyUpdater(newValueOrCallback: UpdaterFnParam2<T[typeof key], W>) {\n        if (typeof newValueOrCallback === \"function\") {\n          dataUpdater((oldData: T, wholeData: W) => {\n            const newKey = (newValueOrCallback as ((prev: T[typeof key], whole: W) => T[typeof key]))(oldData[key], wholeData);\n            if (oldData[key] === newKey) {\n              return oldData; // no update detected, no need to update anything\n            } else {\n              const newData = {\n                ...oldData,\n                [key]: newKey\n              };\n              return newData;\n            }\n          });\n        } else {\n          dataUpdater((oldData, wholeData) => ({ ...oldData, [key]: newValueOrCallback }));\n        }\n      }\n      updaters[key] = (updaterGenerator2Helper<T[typeof key], W>(dataObject[key], keyUpdater) as unknown as (typeof updaters)[typeof key]);\n    });\n    return updaters;\n  }\n}\n\n/**\n * Convenience method for generating setState<FancyObject.sub.component>() from setState<FancyObject> callbacks.\n * If used in react, recommended that this be memoized.\n * \n * @generic T should be a data-only object - nested objects are allowed but arrays, sets not supported\n * @param dataObject ANY instance of T, used only for its keys. MUST have all keys present\n * @param setState an updater function, which can be called as: dataUpdater(newT) or\n *   dataUpdater((oldT) => { return newTFromOldT(oldT) }) ; e.g. react setState() function.\n * @return a deep object that has the same keys as T, except each key also has a getUpdater()/set/update member;\n *   the getUpdater() on a subobject of T acts similarly to the [setState] param but to the subobject rather than the whole object;\n *   the whole object is also available as the second argument of the callback\n * e.g. :\n *   let gameStateUpdater = updaterGenerator(skeletonObject, setGameState);\n *   let setName = gameStateUpdater.player.name.getUpdater();\n *   gameStateUpdater.player.name.set(newName);\n *   gameStateUpdater.player.name.update((oldName, wholeObject) => oldName + \" \");\n * \n */\nexport function updaterGenerator2<T>(dataObject: T, setState: UpdaterFn<T>): UpdaterGeneratorType2<T> {\n  const dataUpdater2 = (stateCallbackFunction: UpdaterFnParam2<T, T>) => {\n    if (typeof stateCallbackFunction === 'function') {\n      setState((prev: T) => {\n        // if T is a function type already, typescript correctly notifies us that this will fail\n        const next = (stateCallbackFunction as ((prev: T, prevWhole: T) => T))(prev, prev);\n        // console.log(\" in updater generator 2\", { next });\n        return next;\n      })\n    } else {\n      setState(stateCallbackFunction);\n    }\n  };\n  return updaterGenerator2Helper<T, T>(dataObject, dataUpdater2);\n}\n\nexport type UpdaterFnParam<T> = (T extends Function ? never  : T) | ((prev: T) => T);\nexport type UpdaterFn<T> = (arg: UpdaterFnParam<T>) => void;","import * as Pixi from \"pixi.js\";\r\nimport { batchifySetState } from \"../../lib/util/batchify\";\r\nimport { UpdaterFn, updaterGenerator2 } from \"../../lib/util/updaterGenerator\";\r\n\r\ntype Props = {\r\n  args?: {\r\n    markForceUpdate?: (self: LifecycleHandlerBase<any, any>) => void,\r\n    [k: string]: any\r\n  },\r\n  [k: string]: any\r\n};\r\n\r\ntype State = {};\r\n\r\ntype ChildInstructions<\r\n  ChildInstanceType,\r\n  ChildPropsType extends Props,\r\n  ParentPropsType extends Props,\r\n  ParentStateType extends State\r\n  > = {\r\n    childClass: new (props: ChildPropsType) => ChildInstanceType;\r\n    instance?: ChildInstanceType;\r\n    propsFactory: (\r\n      parentProps: ParentPropsType,\r\n      parentState: ParentStateType\r\n    ) => ChildPropsType;\r\n  };\r\n\r\nclass ChildrenArray<P extends Props, S extends State> {\r\n  private _values: ChildInstructions<LifecycleHandlerBase<any, any>, any, P, S>[] = [];\r\n\r\n  public add<CIT extends LifecycleHandlerBase<any, any>, CPT>(c: ChildInstructions<CIT, CPT, P, S>) {\r\n    if (this._values.indexOf(c) === -1 || (c.instance && this.contains(c.instance))) { \r\n      // do nohting - its already in here\r\n    }\r\n    this._values.push(c);\r\n  }\r\n\r\n  public remove<CIT extends LifecycleHandlerBase<any, any>>(c: CIT): ChildInstructions<CIT, any, P, S> | undefined {\r\n    const removed = this._values.splice(this._values.findIndex(it => it.instance === c), 1);\r\n    if (removed.length === 0) {\r\n      return undefined;\r\n    } else {\r\n      return removed[0] as ChildInstructions<CIT, any, P, S>;\r\n    }\r\n  }\r\n\r\n  public contains<CIT extends LifecycleHandlerBase<any, any>>(c: CIT): boolean {\r\n    return (this._values.findIndex(it => it.instance === c) > -1);\r\n  }\r\n\r\n  public get<CIT extends LifecycleHandlerBase<CPT, any>, CPT>(c: CIT): ChildInstructions<CIT, CPT, P, S> | undefined {\r\n    return this._values.find((it) => it.instance === c) as (ChildInstructions<CIT, CPT, P, S> | undefined);\r\n  }\r\n\r\n  public clone(): ChildrenArray<P, S> {\r\n    let cloned = new ChildrenArray<P, S>();\r\n    cloned._values = [...this._values];\r\n    return cloned;\r\n  }\r\n\r\n  public forEach(callbackfn: (\r\n    value: ChildInstructions<LifecycleHandlerBase<any, any>, any, P, S>,\r\n    index: number,\r\n    array: ChildInstructions<LifecycleHandlerBase<any, any>, any, P, S>[],\r\n  ) => void) {\r\n    this._values.forEach(callbackfn);\r\n  }\r\n}\r\n\r\n// export interface LifecycleHandlerBase<P extends Props, S extends State> {\r\n// // useful for interface merging?? https://stackoverflow.com/questions/44153378/typescript-abstract-optional-method\r\n// }\r\n\r\n/**\r\n * LifecycleHandlerConstructor <- this should take the usual props, and will return new proxy, new base component(props), the handler object which has the construct() property and that function in it\r\n */\r\n// export function LifecycleHandlerConstructor<T>(props:\r\n// class and interface merging??? https://stackoverflow.com/questions/44153378/typescript-abstract-optional-method\r\nexport abstract class LifecycleHandlerBase<P extends Props, S extends State> {\r\n  // public, only to interface with non lifecycleHandler classes that we have yet to refactor\r\n  public abstract container: Pixi.Container;\r\n  // public, only to allow useState function below to set this.state\r\n  public abstract state: S;\r\n\r\n  protected _staleProps: P; // NOTE(bowei): need it for args for now; maybe we can extract out args?\r\n  private _children: ChildrenArray<P, S> = new ChildrenArray();\r\n  private _childrenToConstruct: ChildrenArray<P, S> = new ChildrenArray();\r\n  private _childrenToDestruct: ChildrenArray<P, S> = new ChildrenArray();\r\n  private _forceUpdates: ChildrenArray<P, S> = new ChildrenArray();\r\n  // private _self!: LifecycleHandlerBase<P, S>;\r\n\r\n  constructor(props: P) {\r\n    this._staleProps = props;\r\n  }\r\n\r\n  protected addChild<CIT extends LifecycleHandlerBase<CPT, any>, CPT>(\r\n    c: ChildInstructions<CIT, CPT, P, S>\r\n  ) {\r\n    this._children.add(c); // make sure children are updated\r\n    this._childrenToConstruct.add(c); // if not already constructed/added to pixi hierarchy, queue it up\r\n  }\r\n\r\n  protected registerChild<CIT extends LifecycleHandlerBase<CPT, any>, CPT>(\r\n    c: ChildInstructions<CIT, CPT, P, S>\r\n  ) { // only add children to updateable, not constructed\r\n    this._children.add(c);\r\n  }\r\n\r\n  protected removeChild<CIT extends LifecycleHandlerBase<any, any>>(c: CIT) {\r\n    let childInfo = this._children.remove(c); // make sure children are no longer updated\r\n    // NOTE(bowei): do we need to call willUnount on the children here??\r\n    childInfo && this._childrenToDestruct.add(childInfo); // queue it for destruction next update tick\r\n  }\r\n\r\n  private _didConstruct(props: P) {\r\n    // this._self = this;\r\n    this._childrenToConstruct.forEach((child) => {\r\n      if (!child.instance) {\r\n        child.instance = new child.childClass(\r\n          child.propsFactory(props, this.state)\r\n        );\r\n      }\r\n      // NOTE(bowei): we are assuming the derived class did NOT manually add child to pixi hierarchy, even if \r\n      // they constructed the instance themselves (in order to e.g. hold a reference); we do that here\r\n      this.container.addChild(child.instance.container);\r\n    });\r\n    this.renderSelf(props);\r\n    this.didMount?.();\r\n  }\r\n\r\n  /** callback passed to child - since child is not a pure component, it needs to inform us of updates if otherwise we wouldnt update */\r\n  protected markForceUpdate = (childInstance: any) => {\r\n    this._staleProps.args?.markForceUpdate?.(this); // mark us for update in OUR parent\r\n\r\n    const childInfo = this._children.get(childInstance);\r\n    if (childInfo) {\r\n      this._forceUpdates.add(childInfo);\r\n    } else {\r\n      throw new Error(`Error, child ${childInstance} not found in ${this}`);\r\n    }\r\n  }\r\n\r\n  // cannot be attached to an instance due to typescript\r\n  // if satic, cannot be called \"useState\" or else react linter complains\r\n  protected useState<S, T extends { state: S }>(self: T, initialState: S) {\r\n    const setState: UpdaterFn<S> = (valueOrCallback) => {\r\n      if (typeof valueOrCallback === \"function\") {\r\n        self.state = (valueOrCallback as (s: S) => S)(self.state);\r\n      } else {\r\n        self.state = valueOrCallback;\r\n      }\r\n    };\r\n    const [batchedSetState, fireBatch] = batchifySetState(setState);\r\n    const stateUpdaters = updaterGenerator2<S>(initialState, batchedSetState);\r\n\r\n    return {\r\n      state: initialState,\r\n      setState,\r\n      fireStateUpdaters: fireBatch,\r\n      stateUpdaters,\r\n    };\r\n  }\r\n\r\n  // shim while we migrate\r\n  public update(nextProps: P) { this._update(nextProps); }\r\n\r\n  // NOTE(bowei): this is public because the root of component hierarchy needs to be bootstrapped from pixi react bridge\r\n  public _update(nextProps: P) { // nextProps is guaranteed to be referentially a distinct object (might be shallow copy though)\r\n    const staleState = { ...this.state };\r\n    this.fireStateUpdaters?.();\r\n    this.updateSelf?.(nextProps);\r\n    if (this.shouldUpdate && !this.shouldUpdate(this._staleProps, staleState, nextProps, this.state)) {\r\n      // we think we don't need to update; however, we still need to\r\n      // update the chidlren that asked us to forcefully update them\r\n      let forceUpdates = this._forceUpdates.clone();\r\n      this._forceUpdates = new ChildrenArray<P, S>();\r\n      forceUpdates.forEach(childInfo => {\r\n        let { instance, propsFactory } = childInfo;\r\n        instance?._update(propsFactory(nextProps, this.state)); // why are we even calling props factory here?? theres no point... we should just tell the child to use their own stale props, like this:\r\n        // instance._forceUpdate();\r\n        // note that children can add themselves into forceupdate next tick as well, if they need to ensure they're continuously in there\r\n\r\n        instance && this.didForceUpdateChild?.(instance);\r\n      })\r\n      // no need to do anything else -- stale props has not changed\r\n\r\n      this.didForceUpdate?.();\r\n      return;\r\n    }\r\n    this.updateChildren?.(nextProps);\r\n    this._updateChildren(nextProps); // implementation should call children._update in here\r\n    this.renderSelf(nextProps);\r\n    this._staleProps = nextProps;\r\n    new Promise((resolve) => resolve(this.didUpdate?.()));\r\n  }\r\n\r\n  protected updateChildren?(nextProps: P): void\r\n\r\n  // destroy, update, create in that order, so that there's no extra update right before destroy or after create\r\n  private _updateChildren(nextProps: P) {\r\n    this._childrenToDestruct.forEach((child) => {\r\n      if (child.instance) { // should always be true\r\n        child.instance.willUnmount?.()\r\n        this.container.removeChild(child.instance.container);\r\n      }\r\n    });\r\n    this._childrenToDestruct = new ChildrenArray();\r\n\r\n    this._children.forEach(({ instance, propsFactory }) => {\r\n      instance?._update(propsFactory(nextProps, this.state));\r\n    });\r\n\r\n    this._childrenToConstruct.forEach((child) => {\r\n      // here we expect the child instances to be empty, but they could be already constructed, if the derived class needs to keep a reference to it\r\n      if (!child.instance) {\r\n        child.instance = new child.childClass(\r\n          child.propsFactory(nextProps, this.state)\r\n        );\r\n      }\r\n      this.container.addChild(child.instance.container);\r\n    });\r\n    this._childrenToConstruct = new ChildrenArray();\r\n  }\r\n\r\n  protected fireStateUpdaters?(): void;\r\n  protected didMount?(): void;\r\n  protected updateSelf?(nextProps: P): void;\r\n  protected shouldUpdate?(\r\n    staleProps: P,\r\n    staleState: S,\r\n    nextProps: P,\r\n    state: S\r\n  ): boolean;\r\n  protected abstract renderSelf(nextProps: P): void;\r\n  protected didUpdate?(): void;\r\n  protected didForceUpdate?(): void;\r\n  public willUnmount(): void {} // TODO(bowei): revert this to protected nullable; however it's needed for shim for now\r\n  protected didForceUpdateChild?(child: LifecycleHandlerBase<any, any>): void;\r\n\r\n  public toString(): string {\r\n    return \"lifecyclehandler object\";\r\n  }\r\n}\r\n\r\nexport type LifecycleHandlerType<P, S> = LifecycleHandlerBase<P, S>;\r\nexport const LifecycleHandler = new Proxy(LifecycleHandlerBase, {\r\n  construct: (target, args, newTarget) => {\r\n    const instance = Reflect.construct(target, args, newTarget);\r\n    instance._didConstruct(...args);\r\n    return instance;\r\n  },\r\n});\r\n\r\nexport function engageLifecycle<T extends object>(derived: T): T {\r\n  return new Proxy<T>(derived, {\r\n    construct: (target, args) => {\r\n      const instance = new (target as any)(args[0]);\r\n      instance._didConstruct(args[0]);\r\n      return instance;\r\n    },\r\n  });\r\n}\r\n\r\n/**\r\n * First render:\r\n * constructor\r\n * renderChildren?\r\n * renderSelf\r\n * didMount\r\n *\r\n * Subsequent updates:\r\n *\r\n * fireStateUpdaters\r\n * updateSelf\r\n * shouldUpdate(props,state)?\r\n * updateChildren\r\n * children._update\r\n * renderSelf\r\n * didUpdate\r\n * staleProps = props\r\n *\r\n */\r\n\r\ntype ReferenceProps = {\r\n  updaters: \"stuff\";\r\n  args: { s: \"other stuff\" };\r\n};\r\ntype ReferenceState = {\r\n  lalalala: \"hahahah\";\r\n};\r\n\r\nexport class Reference extends LifecycleHandler<ReferenceProps, ReferenceState> {\r\n  public container: Pixi.Container\r\n  public state: ReferenceState\r\n  constructor(props: ReferenceProps) {\r\n    super(props);\r\n    this.container = new Pixi.Container();\r\n    this.state = {\r\n      lalalala: \"hahahah\",\r\n    };\r\n  }\r\n\r\n  updateSelf(nextProps: ReferenceProps) { }\r\n  renderSelf(nextProps: ReferenceProps) { }\r\n  didMount() { } \r\n  didUpdate() { }\r\n  shouldUpdate(): boolean { return true; }\r\n  fireStateUpdaters() { }\r\n  willUnmount() { }\r\n}\r\n","import { ComputedState, GameState, ResourceModifier, ResourceNontrivialType, ResourceType, ResourceTypeAndModifier } from \"../data/GameState\";\nimport { HashMap } from \"../lib/util/data_structures/hash\";\nimport { enumKeys } from \"../lib/util/misc\";\n\nexport function computePlayerResourceAmounts(gameState: GameState): ComputedState {\n  let amounts: { [k in ResourceType]?: number } = {};\n\n  let playerResourceNodesAggregated = new HashMap<ResourceTypeAndModifier, number>();\n\n  for (let pointNodeRef of gameState.playerSave.allocatedPointNodeHistory) {\n    let pointNodeGen = gameState.worldGen.zLevels[pointNodeRef.z]!.chunks.get(pointNodeRef.chunkCoord)!.pointNodes.get(pointNodeRef.pointNodeCoord)!\n    if (pointNodeGen.resourceType === \"Nothing\") {\n      continue;\n    }\n\n    let resourceTypeAndModifier = new ResourceTypeAndModifier({\n      type: pointNodeGen.resourceType, modifier: pointNodeGen.resourceModifier\n    });\n    \n    playerResourceNodesAggregated.put(resourceTypeAndModifier,\n      (playerResourceNodesAggregated.get(resourceTypeAndModifier) || 0) + pointNodeGen.resourceAmount);\n  }\n\n  // Do the +flat, %increased, etc. calculations here\n\n  for (let key of enumKeys(ResourceNontrivialType)) {\n    // iterate throu\n    let amount = playerResourceNodesAggregated.get(new ResourceTypeAndModifier({\n      type: key,\n      modifier: ResourceModifier.Flat\n    })) || 0;\n    amount *= (1 + .01 * (playerResourceNodesAggregated.get(new ResourceTypeAndModifier({\n      type: key,\n      modifier: ResourceModifier.Increased0,\n    })) || 0));\n    amount = Math.floor(amount);\n    amount += playerResourceNodesAggregated.get(new ResourceTypeAndModifier({\n      type: key,\n      modifier: ResourceModifier.AfterIncreased0\n    })) || 0;\n    amount *= (1 + .01 * (playerResourceNodesAggregated.get(new ResourceTypeAndModifier({\n      type: key,\n      modifier: ResourceModifier.Increased1,\n    })) || 0));\n    amount = Math.floor(amount);\n    amount += playerResourceNodesAggregated.get(new ResourceTypeAndModifier({\n      type: key,\n      modifier: ResourceModifier.AfterIncreased1\n    })) || 0;\n    amounts[key] = amount;\n  }\n\n  return {\n    playerResourceAmounts: amounts as { [k in ResourceType]: number },\n    playerResourceNodesAggregated\n  };\n}","import { GameState, PointNodeRef } from \"../data/GameState\";\nimport { UpdaterGeneratorType2 } from \"../lib/util/updaterGenerator\";\nimport { computePlayerResourceAmounts } from \"./ComputeState\";\nimport { afterMaybeSpendingSp, doTryAllocate } from \"./OnAllocation\";\n\nexport function selectOrReselectNode(\n  updaters: UpdaterGeneratorType2<GameState>,\n  selfPointNodeRef: PointNodeRef\n) {\n  let justTriedToAllocate = false;\n  let justSpentSp = false;\n  let justFailedToAllocate = false;\n\n  // update selected to ourselves\n  updaters.playerUI.selectedPointNode.enqueueUpdate((prev, gameState) => {\n    if (prev?.pointNodeId === selfPointNodeRef.pointNodeId) {\n      // console.log('just selected: ', this);\n      justTriedToAllocate = true;\n    }\n    return selfPointNodeRef;\n  });\n\n  // if we tried to allocate ourselves, see if we can\n  updaters.playerSave.enqueueUpdate((prev, prevGameState) => {\n    if (justTriedToAllocate) {\n      justTriedToAllocate = false;\n      let [next, succeeded] = doTryAllocate(prev, prevGameState, selfPointNodeRef);\n      if (succeeded) {\n        justSpentSp = true;\n        return next;\n      } else {\n        justFailedToAllocate = true;\n        return prev;\n      }\n    }\n    return prev;\n  });\n\n  // TODO(bowei): if we spent sp, remember to update quest status!!\n  updaters.computed.enqueueUpdate((prev, prevGameState) => {\n    if (justSpentSp) {\n      // this.state.justSpentSp = false;\n      // console.log(\"just spent SP!\");\n      return computePlayerResourceAmounts(prevGameState);\n    }\n    return prev;\n  })\n\n  updaters.playerSave.enqueueUpdate((prev, prevGameState) => {\n    if (justSpentSp) {\n      justSpentSp = false;\n      // console.log(\"just spent SP!\");\n      return afterMaybeSpendingSp(prev, prevGameState);\n    }\n    return prev;\n  })\n\n  // if we failed to allocate, shift the active tab so the player can see why\n  updaters.playerUI.activeTab.enqueueUpdate((prev, prevGameState) => {\n    if (justFailedToAllocate) {\n      justFailedToAllocate = false;\n      return 1;\n    }\n    return prev;\n  });\n}","import { GameState, PlayerSaveState, PointNodeRef } from \"../data/GameState\";\nimport { canAllocate } from \"./Neighbors\";\n\nexport function doTryAllocate(prev: PlayerSaveState, prevGameState: GameState, selfPointNodeRef: PointNodeRef): [PlayerSaveState, boolean] {\n  if (canAllocate(\n    selfPointNodeRef,\n    prevGameState.worldGen,\n    prevGameState.playerSave.allocatedPointNodeSet,\n    prevGameState.playerSave.activeQuest !== undefined,\n  ) === 'yes') {\n    // do the change\n    const nextSet = prev.allocatedPointNodeSet.clone();\n    nextSet.put(selfPointNodeRef);\n    const nextHistory = [...prev.allocatedPointNodeHistory];\n    nextHistory.push(selfPointNodeRef);\n    return [{\n      ...prev,\n      allocatedPointNodeHistory: nextHistory,\n      allocatedPointNodeSet: nextSet,\n    }, true];\n  } else {\n    return [prev, false];\n  }\n}\n\nexport function afterMaybeSpendingSp(prev: PlayerSaveState, prevGameState: GameState): PlayerSaveState {\n  let next = { ...prev };\n  if (next.spSpentThisQuest !== undefined) {\n    next.spSpentThisQuest += 1;\n  }\n\n  // update quest progress history?\n  if (next.activeQuest) {\n    let resourceType = next.activeQuest.resourceType;\n    let amount = prevGameState.computed.playerResourceAmounts?.[resourceType] || 0;\n    next.questProgressHistory.push(amount);\n  }\n  return next;\n}","import * as Pixi from \"pixi.js\";\nimport { RenderedChunkConstants } from \"./ChunkComponent\";\nimport { UpdaterGeneratorType2 } from \"../../lib/util/updaterGenerator\";\nimport { GameState, PointNodeGen, PointNodeRef, ResourceModifier, ResourceType } from \"../../data/GameState\";\nimport { Vector2 } from \"../../lib/util/geometry/vector2\";\nimport { PixiPointFrom } from \"../../lib/pixi/pixify\";\nimport { multiplyColor } from \"../../lib/util/misc\";\nimport { TooltippableAreaComponent } from \"./TooltippableAreaComponent\";\nimport { engageLifecycle, LifecycleHandlerBase } from \"./LifecycleHandler\";\nimport { selectOrReselectNode } from \"../../game/OnSelectOrReselectNode\";\nimport { RootComponentState } from \"./RootComponent\";\n\ntype Props = {\n  delta: number,\n  args: {\n    pointNodeTexture: Pixi.Texture,\n    markForceUpdate: (childInstance: any) => void,\n  },\n  selfPointNodeRef: PointNodeRef,\n  updaters: UpdaterGeneratorType2<GameState>,\n  tooltipUpdaters: UpdaterGeneratorType2<RootComponentState>['tooltip'],\n  position: Vector2,\n  pointNodeGen: PointNodeGen,\n  isSelected: boolean,\n  isAllocated: boolean\n};\n\ntype State = {\n  numClicks: number // debug\n  descriptionText: string;\n}\n\nclass PointNodeComponent extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n\n  public sprite: Pixi.Sprite\n  public halfwayCenterSprite: Pixi.Sprite;\n  public centerSprite: Pixi.Sprite;\n  public hitArea: Pixi.IHitArea;\n\n  public tooltippableArea?: TooltippableAreaComponent\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      numClicks: 0,\n      descriptionText: '',\n    };\n    this.updateSelf(props); // initialize the description text properly\n    this.container = new Pixi.Container();\n\n    this.container.sortableChildren = true;\n    this.sprite = new Pixi.Sprite(props.args.pointNodeTexture);\n    this.sprite.anchor.x = 0.5;\n    this.sprite.anchor.y = 0.5;\n    this.sprite.zIndex = -1;\n    this.container.addChild(this.sprite);\n\n    this.centerSprite = new Pixi.Sprite(props.args.pointNodeTexture);\n    this.centerSprite.anchor.x = 0.5;\n    this.centerSprite.anchor.y = 0.5;\n    this.centerSprite.scale = PixiPointFrom(new Vector2(0.5, 0.5));\n    this.centerSprite.zIndex = 1;\n    this.centerSprite.alpha = 0; // TESTING\n    // this.container.addChild(this.centerSprite);\n\n    this.halfwayCenterSprite = new Pixi.Sprite(props.args.pointNodeTexture);\n    this.halfwayCenterSprite.anchor.x = 0.5;\n    this.halfwayCenterSprite.anchor.y = 0.5;\n    this.halfwayCenterSprite.scale = PixiPointFrom(new Vector2(0.75, 0.75));\n    this.halfwayCenterSprite.zIndex = 0;\n    // disable this sprite for now - causes a fairly significant fps hit, until we get around to holding less nodes on the page at once\n    this.halfwayCenterSprite.alpha = 0;\n    // this.container.addChild(this.halfwayCenterSprite);\n\n    this.container.interactive = true;\n    // NOTE(bowei): ive tested, the following 2 settings don't significantly affect FPS\n    this.container.buttonMode = true;\n    this.hitArea = new Pixi.Rectangle(\n      - RenderedChunkConstants.NODE_HITAREA_PX / 2,\n      - RenderedChunkConstants.NODE_HITAREA_PX / 2,\n      RenderedChunkConstants.NODE_HITAREA_PX,\n      RenderedChunkConstants.NODE_HITAREA_PX,\n    );\n    // note: hitarea breaks child onhover: https://github.com/pixijs/pixi.js/issues/5837\n    this.container.hitArea = this.hitArea;\n\n    // const tooltippableAreaPropsFactory = (p: Props, s: State) => {\n    //   let nodeDescription: string = \"Nothing (empty node)\";\n    //   if (p.pointNodeGen.resourceType !== ResourceType.Nothing) {\n    //     nodeDescription = `${p.pointNodeGen.resourceAmount} ${p.pointNodeGen.resourceModifier} ${p.pointNodeGen.resourceType}`;\n    //   }\n    //   return {\n    //     args: {\n    //       markForceUpdate: this.markForceUpdate,\n    //     },\n    //     text: nodeDescription,\n    //     hitArea: this.hitArea, // TODO(bowei): move into state???\n    //   }\n    // }\n    // this.tooltippableArea = new TooltippableAreaComponent(tooltippableAreaPropsFactory(props, this.state));\n    // this.container.addChild(this.tooltippableArea.container);\n    // this.addChild({\n    //   childClass: TooltippableAreaComponent,\n    //   instance: this.tooltippableArea,\n    //   propsFactory: tooltippableAreaPropsFactory,\n    // });\n  }\n\n  protected updateSelf(props: Props) {\n    let nodeDescription: string = \"Nothing (empty node)\";\n    if (props.pointNodeGen.resourceType !== ResourceType.Nothing) {\n      nodeDescription = `${props.pointNodeGen.resourceAmount} ${props.pointNodeGen.resourceModifier} ${props.pointNodeGen.resourceType}`;\n    }\n    this.state.descriptionText = nodeDescription;\n  }\n\n  protected renderSelf(props: Props) {\n    this.container.position = PixiPointFrom(props.position);\n    let tint: number;\n    let centerTint: number;\n    if (props.isSelected) {\n      tint = 0xBBBBFF;\n      centerTint = 0xBBBBFF;\n    } else {\n      tint = 0xFFFFFF;\n      centerTint = 0xFFFFFF;\n    }\n    if (props.isAllocated) {\n      tint = 0x444444;\n    } else {\n    }\n    let baseColor: number = 0;\n    if (props.pointNodeGen.resourceType === ResourceType.Nothing) {\n      baseColor = 0x99bbff; // blue that mixes in with bg\n    } else if (props.pointNodeGen.resourceType === ResourceType.Mana0) {\n      if (props.pointNodeGen.resourceModifier === ResourceModifier.Flat) {\n        baseColor = 0xeeaaaa; // pink\n      } else if (props.pointNodeGen.resourceModifier === ResourceModifier.Increased0) {\n        baseColor = 0xcc88ee; // lavender?\n      }\n    }\n    // switch (props.pointNodeGen.resourceType) {\n    //   case ResourceType.Nothing:\n    //     baseColor = 0x99bbff; // blue that mixes in with bg\n    //     break;\n    //   case ResourceType.Mana0:\n    //     baseColor = 0xeeaaaa; // red\n    //     break;\n    //   case ResourceType.Mana1:\n    //     baseColor = 0xbb7733; // brown?\n    //     break;\n    //   case ResourceType.Mana2:\n    //     baseColor = 0x44aa44; // green\n    //     break;\n    // }\n\n    this.sprite.tint = multiplyColor(baseColor, tint);\n    this.centerSprite.tint = multiplyColor(baseColor, centerTint);\n\n    // NOTE(bowei): careful, we dont want to set the scale of our tooltip to be bigger\n    if (props.selfPointNodeRef.pointNodeCoord.equals(Vector2.Zero)) {\n      this.container.scale = PixiPointFrom(new Vector2(1.25, 1.25));\n    }\n  }\n\n  protected shouldUpdate(staleProps: Props, staleState: State, props: Props, state: State): boolean {\n    for (let key of (Object.keys(staleProps) as (keyof Props)[])) {\n      if (key === 'delta' || key === 'args' || key === 'updaters') { continue; }\n      if (staleProps[key] !== props[key]) {\n        return true;\n      }\n      if (key === 'position') {\n        if (!staleProps[key].equals(props[key])) {\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (key === 'selfPointNodeRef') {\n        if (staleProps[key]?.hash() !== props[key]?.hash()) {\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n    }\n    return false;\n  }\n\n  protected didMount() {\n    const { updaters } = this._staleProps; // we assume this will never change\n\n//     this.container.addListener('pointerover', (event: Pixi.InteractionEvent) => {\n//       this.state.pointerover = event;\n//     })\n//     this.container.addListener('pointerout', () => {\n//       this.state.pointerover = undefined;\n//     })\n// \n\n    this.container.addListener(\"pointerdown\", (event: Pixi.InteractionEvent) => {\n      this._staleProps.args.markForceUpdate(this);\n      this.state.numClicks++;\n      selectOrReselectNode(updaters, this._staleProps.selfPointNodeRef);\n      // event.stopPropagation();\n    });\n\n    this.container.addListener('pointerover', (event: Pixi.InteractionEvent) => {\n      // this._staleProps.args.markForceUpdate(this);\n\n      // source: https://www.iwm-tuebingen.de/iwmbrowser/lib/pixi/tooltip.js\n      const localPosition = event.data.getLocalPosition(this.container);\n      const position = new Vector2(this.container.worldTransform.tx, this.container.worldTransform.ty);\n      // const position = new Vector2(this.container.worldTransform.tx, this.container.worldTransform.ty);\n\n      this._staleProps.tooltipUpdaters.enqueueUpdate((prev) => {\n        const next = { ...prev, visible: true, text: this.state.descriptionText, position: position.add(localPosition) };\n        // console.log({ next });\n        return next;\n      })\n    });\n\n    this.container.addListener('pointerout', (event: Pixi.InteractionEvent) => {\n      // this._staleProps.args.markForceUpdate(this);\n\n      this._staleProps.tooltipUpdaters.enqueueUpdate((prev) => {\n        const next = { ...prev, visible: false, text: '' };\n        return next;\n      })\n    });\n\n    this.container.addListener('pointermove', (event: Pixi.InteractionEvent) => {\n      // this._staleProps.args.markForceUpdate(this);\n\n      // source: https://www.iwm-tuebingen.de/iwmbrowser/lib/pixi/tooltip.js\n      const localPosition = event.data.getLocalPosition(this.container);\n      const position = new Vector2(this.container.worldTransform.tx, this.container.worldTransform.ty);\n\n      this._staleProps.tooltipUpdaters.position.enqueueUpdate(position.add(localPosition));\n    })\n  }\n\n  public toString(): string {\n    return \"PointNodeCompoent \" + this._staleProps.selfPointNodeRef.toString();\n  }\n}\n\nconst wrapped = engageLifecycle(PointNodeComponent);\n// eslint-disable-next-line\ntype wrapped = PointNodeComponent;\nexport { wrapped as PointNodeComponent };\nexport type { Props as PointNodeComponentProps };","import * as Pixi from \"pixi.js\";\nimport { HashSet, KeyedHashMap } from \"../../lib/util/data_structures/hash\";\nimport { ChunkGen, ChunkGenConstants, ChunkRef, GameState, PointNodeRef } from \"../../data/GameState\";\nimport { PointNodeComponent, PointNodeComponentProps } from \"./PointNodeComponent\";\nimport { UpdaterGeneratorType2 } from \"../../lib/util/updaterGenerator\";\nimport { Vector2 } from \"../../lib/util/geometry/vector2\";\nimport { PixiPointFrom } from \"../../lib/pixi/pixify\";\nimport { engageLifecycle, LifecycleHandlerBase } from \"./LifecycleHandler\";\nimport { RootComponentState } from \"./RootComponent\";\n\nexport class RenderedChunkConstants {\n//   public static SPACING_PX: number = 24;\n//   public static CHUNK_SPACING_PX: number = (ChunkGenConstants.CHUNK_DIM + 0.5) * RenderedChunkConstants.SPACING_PX;\n//   public static NODE_SIZE_PX: number = 14;\n//   public static NODE_HITAREA_PX: number = 18;\n  public static SPACING_PX: number = 36;\n  public static CHUNK_SPACING_PX: number = (ChunkGenConstants.CHUNK_DIM + 0.0) * RenderedChunkConstants.SPACING_PX;\n  public static NODE_SIZE_PX: number = 22;\n  public static NODE_HITAREA_PX: number = RenderedChunkConstants.NODE_SIZE_PX + 4;\n  public static NODE_ROUNDED_PX: number = 4;\n}\n\ntype Props = {\n  delta: number,\n  args: {\n    pointNodeTexture: Pixi.Texture,\n    markForceUpdate: (childInstance: any) => void,\n  },\n  selfChunkRef: ChunkRef,\n  updaters: UpdaterGeneratorType2<GameState>,\n  tooltipUpdaters: UpdaterGeneratorType2<RootComponentState>['tooltip'],\n  position: Vector2,\n  chunkGen: ChunkGen,\n  selectedPointNode: PointNodeRef | undefined,\n  allocatedPointNodeSubset: HashSet<PointNodeRef>,\n}\n\ntype State = {}\n\nclass ChunkComponent2 extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n\n  public children: KeyedHashMap<PointNodeRef, PointNodeComponent>;\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {};\n    this.container = new Pixi.Container();\n    this.children = new KeyedHashMap();\n\n    this.resyncChildren(props);\n  }\n\n  protected renderSelf(props: Props) {\n    this.container.position = PixiPointFrom(props.position);\n  }\n\n  protected shouldUpdate(prevProps: Props, prevState: State, props: Props, state: State): boolean {\n    // return true;\n    for (let key of (Object.keys(prevProps) as (keyof Props)[])) {\n      if (key === 'delta' || key === 'args' || key === 'updaters') { continue; }\n      if (key === 'position') {\n        if (!prevProps[key].equals(props[key])) {\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (key === 'selectedPointNode') {\n        if (prevProps[key]?.hash() !== props[key]?.hash()) {\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (key === 'selfChunkRef') {\n        if (prevProps[key]?.hash() !== props[key]?.hash()) {\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (key === 'allocatedPointNodeSubset') {\n        // subsets could be different objects but have the same contents\n        if (!prevProps[key].equals(props[key])) {\n          // console.log(`prevProps: ${JSON.stringify(prevProps[key])}`);\n          // console.log(`props: ${JSON.stringify(props[key])}`);\n          console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (prevProps[key] !== props[key]) {\n        console.log(`chunk shouldUpdate differed in ${key}, returning true`);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private resyncChildren(props: Props) {\n    let childrenToDelete = this.children.clone(); // track which children need to be destroyed according to new props\n    console.log(`chunk component upsert children got here`);\n    // console.log(`chunk component upsert children has ${this.children.size()} children`);\n\n    for (let [pointNodeCoord, pointNodeGen] of props.chunkGen.pointNodes.entries()) {\n      const pointNodeRef = new PointNodeRef({\n        z: props.selfChunkRef.z,\n        chunkCoord: props.selfChunkRef.chunkCoord,\n        pointNodeCoord: pointNodeCoord,\n        pointNodeId: pointNodeGen.id\n      })\n      let childPropsFactory = (props: Props, state: State) : PointNodeComponentProps => {\n        return {\n          delta: props.delta,\n          args: {\n            pointNodeTexture: props.args.pointNodeTexture,\n            markForceUpdate: this.markForceUpdate,\n          },\n          selfPointNodeRef: pointNodeRef,\n          updaters: props.updaters,\n          tooltipUpdaters: props.tooltipUpdaters,\n          position: pointNodeRef.pointNodeCoord.multiply(RenderedChunkConstants.SPACING_PX),\n          pointNodeGen,\n          isSelected: props.selectedPointNode?.pointNodeId === pointNodeRef.pointNodeId,\n          isAllocated: props.allocatedPointNodeSubset.contains(pointNodeRef),\n        };\n      }\n      const childKey = pointNodeRef;\n\n      let childComponent = this.children.get(childKey);\n      if (childComponent) {\n        // childComponent.update(childPropsFactory(props, this.state));\n        childrenToDelete.remove(childKey);\n      } else {\n        childComponent = new PointNodeComponent(childPropsFactory(props, this.state));\n        this.children.put(pointNodeRef, childComponent);\n        // this.container.addChild(childComponent.container);\n        this.addChild({\n          childClass: PointNodeComponent,\n          instance: childComponent,\n          propsFactory: childPropsFactory\n        });\n      }\n    }\n    console.log(`chunk component to delete has ${childrenToDelete.size()} children`);\n    for (let [childKey, childComponent] of childrenToDelete.entries()) {\n      // childComponent.willUnmount();\n      this.children.remove(childKey);\n      // this.container.removeChild(childComponent.container);\n      this.removeChild(childComponent);\n    }\n  }\n\n  protected updateChildren(props: Props) {\n    this.resyncChildren(props);\n  }\n\n  protected didForceUpdateChild(instance: LifecycleHandlerBase<any, any>) {\n    // IMPORTANT! this is intended to raise the child that asked for a force update to the top so it isn't covered\n    // by other sibling pixi containers. however this code doesnt work well during the update call, for some reason (not sure why)\n    this.container.removeChild(instance.container);\n    this.container.addChild(instance.container);\n  }\n}\n\nconst wrapped = engageLifecycle(ChunkComponent2);\n// eslint-disable-next-line\ntype wrapped = ChunkComponent2;\nexport { wrapped as ChunkComponent };\nexport type { Props as ChunkComponentProps };","import { WorldGenState, ChunkGen, PointNodeGen, ChunkGenConstants, ZLevelGen, ResourceType, ResourceModifier } from \"../data/GameState\";\nimport { HashSet, KeyedHashMap } from \"../lib/util/data_structures/hash\";\nimport { Vector2 } from \"../lib/util/geometry/vector2\";\nimport { INTMAX32, squirrel3 } from \"../lib/util/random\";\n\nexport type WorldGenStateConfig = any;\n\nexport class WorldGenStateFactory {\n  public config: WorldGenStateConfig;\n\n  constructor(config: WorldGenStateConfig) {\n    this.config = config;\n  }\n\n  public create(): WorldGenState {\n    throw Error();\n  }\n}\n\nexport type ZLevelGenConfig = any;\n\nexport class ZLevelGenFactory {\n  public config: ZLevelGenConfig;\n  public chunkGenFactory: ChunkGenFactory;\n\n  constructor(config: ZLevelGenConfig) {\n    this.config = config;\n    this.chunkGenFactory = new ChunkGenFactory({});\n  }\n\n  public create(args: { seed: number, z: number, startingChunks?: number }): ZLevelGen {\n    const id = squirrel3(args.seed + args.z);\n    const chunks: KeyedHashMap<Vector2, ChunkGen> = new KeyedHashMap();\n\n    const max = args.startingChunks || 3;\n    // TODO(bowei): generate more chunks??\n    for (let i = -max; i <= max; i++) {\n      for (let j = -max; j <= max; j++){\n        let location = new Vector2(i, j);\n        chunks.put(location, this.chunkGenFactory.create({ seed: id, location, z: args.z }));\n      }\n    }\n\n    return { id, chunks };\n  }\n}\n\nexport type ChunkGenConfig = any;\n\nexport class ChunkGenFactory {\n  public config: ChunkGenConfig;\n  public pointNodeGenFactory: PointNodeGenFactory\n\n  constructor(config: ChunkGenConfig) {\n    this.config = config;\n    this.pointNodeGenFactory = new PointNodeGenFactory({});\n  }\n\n  public create(args: { seed: number, location: Vector2, z: number }): ChunkGen {\n    const id = squirrel3(args.seed + squirrel3(args.seed + args.location.x) + args.location.y);\n    const pointNodes: KeyedHashMap<Vector2, PointNodeGen> = new KeyedHashMap();\n\n    let droppedNodes: HashSet<Vector2> = new HashSet();\n    for (let i = -ChunkGenConstants.CHUNK_HALF_DIM; i <= ChunkGenConstants.CHUNK_HALF_DIM; i++) {\n      for (let j = -ChunkGenConstants.CHUNK_HALF_DIM; j <= ChunkGenConstants.CHUNK_HALF_DIM; j++) {\n        if (i === 0 && j === 0) {\n          continue;\n        }\n        // 4 way symmetry plz\n        if (squirrel3(id + i * ChunkGenConstants.CHUNK_DIM + j) / INTMAX32 < ChunkGenConstants.DROP_NODES_CHANCE / 4) {\n          droppedNodes.put(new Vector2(i, j));\n          droppedNodes.put(new Vector2(j, -i));\n          droppedNodes.put(new Vector2(-i, -j));\n          droppedNodes.put(new Vector2(-j, i));\n        }\n      }\n    }\n\n    for (let i = -ChunkGenConstants.CHUNK_HALF_DIM; i <= ChunkGenConstants.CHUNK_HALF_DIM; i++) {\n      for (let j = -ChunkGenConstants.CHUNK_HALF_DIM; j <= ChunkGenConstants.CHUNK_HALF_DIM; j++) {\n        let loc = new Vector2(i, j);\n        if (!droppedNodes.get(loc)) {\n          pointNodes.put(loc, this.pointNodeGenFactory.create({ seed: id, location: loc, chunk: args.location, z: args.z }));\n        }\n      }\n    }\n\n    return { id, pointNodes };\n  }\n}\n\ntype PointNodeGenConfig = {};\n\nexport class PointNodeGenFactory {\n  public config: PointNodeGenConfig;\n\n  constructor(config: PointNodeGenConfig) {\n    this.config = config;\n  }\n\n  public create(args: { seed: number, location: Vector2, chunk: Vector2, z: number }): PointNodeGen {\n    const id = squirrel3(args.seed + squirrel3(args.seed + args.location.x) + args.location.y);\n\n    let randomFloat = squirrel3(id + 1) / INTMAX32;\n    let resourceType: ResourceType;\n    if (randomFloat < 0.0) {\n      resourceType = \"Nothing\";\n    } else if (randomFloat < 0.15) {\n      resourceType = ResourceType.Mana0;\n    } else if (randomFloat < -0.35) {\n      resourceType = ResourceType.Mana1;\n    } else if (randomFloat < -0.60) {\n      resourceType = ResourceType.Mana2;\n    } else {\n      resourceType = \"Nothing\";\n    }\n    // override for root node\n    if (args.location.equals(Vector2.Zero) && args.chunk.equals(Vector2.Zero) && args.z === 0) {\n      resourceType = \"Nothing\";\n    }\n\n    randomFloat = squirrel3(id + 2) / INTMAX32;\n    let resourceModifier: ResourceModifier;\n    if (randomFloat < 0.55) {\n      resourceModifier = ResourceModifier.Flat;\n    } else if (randomFloat < -0.70) {\n      resourceModifier = ResourceModifier.AfterIncreased0;\n    } else if (randomFloat < -0.70) {\n      resourceModifier = ResourceModifier.AfterIncreased1;\n    } else if (randomFloat < 1.95) {\n      resourceModifier = ResourceModifier.Increased0;\n    } else {\n      resourceModifier = ResourceModifier.Increased1;\n    }\n\n    let resourceAmount = 0;\n    if (resourceModifier === ResourceModifier.Flat ||\n      resourceModifier === ResourceModifier.AfterIncreased0 ||\n      resourceModifier === ResourceModifier.AfterIncreased1) {\n      // ([0..3] x 3) * 20 + 60 == 150 +/- 90\n      randomFloat = Math.floor(squirrel3(id + 3) / INTMAX32 * 4);\n      randomFloat += Math.floor(squirrel3(id + 4) / INTMAX32 * 4); // base is 20 ish?\n      randomFloat += Math.floor(squirrel3(id + 5) / INTMAX32 * 4); // base is 20 ish?\n      resourceAmount = randomFloat * 20 + 60;\n    } else {\n      // 3 + [0..1] x 4 == 5% +/- 2\n      randomFloat = Math.floor(squirrel3(id + 3) / INTMAX32 * 2); // base is 20 ish?\n      randomFloat += Math.floor(squirrel3(id + 4) / INTMAX32 * 2); // base is 20 ish?\n      randomFloat += Math.floor(squirrel3(id + 5) / INTMAX32 * 2); // base is 20 ish?\n      randomFloat += Math.floor(squirrel3(id + 6) / INTMAX32 * 3); // base is 20 ish?\n      resourceAmount = randomFloat + 3;\n    }\n\n    return {\n      id,\n      resourceAmount,\n      resourceModifier,\n      resourceType\n    };\n  }\n}","import * as Pixi from \"pixi.js\";\nimport { ChunkGen, ChunkRef, GameState, PointNodeRef, ZLevelGen } from \"../../data/GameState\";\nimport { ZLevelGenFactory } from \"../../game/WorldGenStateFactory\";\nimport { PixiPointFrom } from \"../../lib/pixi/pixify\";\nimport { HashSet, KeyedHashMap } from \"../../lib/util/data_structures/hash\";\nimport { Vector2 } from \"../../lib/util/geometry/vector2\";\nimport { Const } from \"../../lib/util/misc\";\nimport { UpdaterGeneratorType2 } from \"../../lib/util/updaterGenerator\";\nimport { RenderedChunkConstants, ChunkComponent, ChunkComponentProps } from \"./ChunkComponent\";\nimport { engageLifecycle, LifecycleHandlerBase } from \"./LifecycleHandler\";\nimport { RootComponentState } from \"./RootComponent\";\n\ntype Props = {\n  delta: number,\n  args: {\n    pointNodeTexture: Pixi.Texture,\n    markForceUpdate: (childInstance: any) => void,\n  },\n  z: number,\n  updaters: UpdaterGeneratorType2<GameState>,\n  tooltipUpdaters: UpdaterGeneratorType2<RootComponentState>['tooltip'],\n  position: Vector2,\n  zLevelGen: Const<ZLevelGen> | undefined,\n  selectedPointNode: PointNodeRef | undefined,\n  allocatedPointNodeSubset: Const<HashSet<PointNodeRef>>,\n}\n\ntype State = {}\n\nclass ZLevelComponent2 extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n\n  public children: KeyedHashMap<ChunkRef, ChunkComponent> = new KeyedHashMap();\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n    this.container = new Pixi.Container();\n\n    this.upsertChildren(props);\n  }\n\n  protected renderSelf(props: Props) {\n    this.container.position = PixiPointFrom(props.position);\n  }\n\n  protected didMount() {\n    const { updaters } = this._staleProps;\n    // if we mounted but our data is not generated, please generate ourselves\n    updaters.worldGen.zLevels.enqueueUpdate((prev, prevGameState) => {\n      if (!prev[this._staleProps.z]) {\n        return { [this._staleProps.z]: new ZLevelGenFactory({}).create({ seed: prevGameState.worldGen.seed, z: this._staleProps.z }) };\n      }\n      return prev;\n    })\n  }\n\n  protected didForceUpdateChild(instance: LifecycleHandlerBase<any, any>) {\n    // IMPORTANT! this is intended to raise the child that asked for a force update to the top so it isn't covered\n    // by other sibling pixi containers. however this code doesnt work well during the update call, for some reason (not sure why)\n    this.container.removeChild(instance.container);\n    this.container.addChild(instance.container);\n  }\n\n  protected shouldUpdate(prevProps: Props, prevState: State, props: Props, state: State): boolean {\n    for (let key of (Object.keys(prevProps) as (keyof Props)[])) {\n      if (key === 'delta' || key === 'args' || key === 'updaters') { continue; }\n      if (key === 'position') {\n        if (!prevProps[key].equals(props[key])) {\n          console.log(`zlevel shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (key === 'selectedPointNode') {\n        if (prevProps[key]?.hash() !== props[key]?.hash()) {\n          console.log(`zlevel shouldUpdate differed in ${key}, returning true`);\n          return true;\n        } else {\n          continue;\n        }\n      }\n      if (prevProps[key] !== props[key]) {\n        console.log(`zlevel shouldUpdate differed in ${key}, returning true`);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  protected updateChildren(props: Props) {\n    this.upsertChildren(props);\n  }\n\n  private upsertChildren(props: Props) {\n    let childrenToDelete = this.children.clone(); // track which children need to be destroyed according to new props\n    console.log(`zlevel component have ${this.children.size()} children`)\n    for (let [chunkCoord, chunkGen] of props.zLevelGen?.chunks?.entries() || []) {\n      const { childKey, childPropsFactory } = this.doChild(props, chunkCoord, chunkGen);\n      let childComponent = this.children.get(childKey);\n      if (childComponent) {\n        // childComponent.update(childPropsFactory(props, this.state));\n        childrenToDelete.remove(childKey);\n      } else {\n        childComponent = new ChunkComponent(childPropsFactory(props, this.state));\n        this.children.put(childKey, childComponent);\n        // this.container.addChild(childComponent.container);\n        this.addChild({\n          childClass: ChunkComponent,\n          instance: childComponent,\n          propsFactory: childPropsFactory\n        });\n      }\n    }\n    console.log(`zlevel component have ${childrenToDelete.size()} children to delete`)\n    for (let [childKey, childComponent] of childrenToDelete.entries()) {\n      // childComponent.willUnmount();\n      this.children.remove(childKey);\n      // this.container.removeChild(childComponent.container);\n      // this._children.splice(this._children.findIndex(it => it.instance === childComponent), 1);\n      this.removeChild(childComponent);\n    }\n  }\n\n  private doChild(props: Props, chunkCoord: Vector2, chunkGen: ChunkGen): { childKey: ChunkRef, childPropsFactory: (p: Props, s: State) => ChunkComponentProps } {\n    const chunkRef = new ChunkRef({\n      z: props.z,\n      chunkCoord,\n      chunkId: chunkGen.id,\n    });\n\n    let childPropsFactory = (props: Props, state: State) => {\n      let allocatedPointNodeSubset = new HashSet(\n        props.allocatedPointNodeSubset.values().filter((pointNodeRef) => pointNodeRef.chunkCoord.equals(chunkRef.chunkCoord))\n      );\n\n      return {\n        delta: props.delta,\n        args: {\n          pointNodeTexture: props.args.pointNodeTexture,\n          markForceUpdate: this.markForceUpdate\n        },\n        selfChunkRef: chunkRef,\n        updaters: props.updaters,\n        tooltipUpdaters: props.tooltipUpdaters,\n        position: chunkRef.chunkCoord.multiply(RenderedChunkConstants.CHUNK_SPACING_PX),\n        chunkGen: chunkGen,\n        // NOTE(bowei): for optimization, we dont tell other chunks about selected nodes in other chunks\n        selectedPointNode: (props.selectedPointNode?.chunkCoord.equals(chunkRef.chunkCoord) ? props.selectedPointNode : undefined),\n        allocatedPointNodeSubset,\n      };\n    }\n    return {\n      childKey: chunkRef,\n      childPropsFactory\n    };\n  }\n\n}\n\nconst wrapped = engageLifecycle(ZLevelComponent2);\n// eslint-disable-next-line\ntype wrapped = ZLevelComponent2;\nexport { wrapped as ZLevelComponent };\nexport type { Props as ZLevelComponentProps };","import * as Pixi from \"pixi.js\";\nimport { PixiPointFrom } from \"../../lib/pixi/pixify\";\nimport { Vector2 } from \"../../lib/util/geometry/vector2\";\nimport { engageLifecycle, LifecycleHandlerBase } from \"./LifecycleHandler\";\n\ntype Props = {\n  args: {},\n  updaters: {},\n  delta: number,\n  tick: number,\n  position: Vector2,\n  efficiencyPercent: number // needs to be between 0 and 100\n}\n\ntype State = {}\n\n/**\n * Reference code for pixi gradient or blur filters:\n * https://github.com/pixijs/pixi.js/blob/dev/packages/filters/filter-blur/src/generateBlurFragSource.ts\n * https://github.com/pixijs/pixi.js/blob/dev/packages/filters/filter-blur/src/BlurFilterPass.ts\n * https://github.com/pixijs/pixi.js/tree/dev/packages/filters/filter-blur/src\n * https://pixijs.download/dev/docs/PIXI.Filter.html\n * https://github.com/pixijs/pixi-filters/blob/main/filters/radial-blur/src/RadialBlurFilter.js\n * https://github.com/pixijs/pixi-filters/blob/main/filters/radial-blur/src/radial-blur.frag\n * https://filters.pixijs.download/main/docs/index.html\n * https://www.html5gamedevs.com/topic/8424-how-to-blur-just-an-area/\n * https://www.html5gamedevs.com/topic/25539-create-gradient-filter-on-sprite/\n * https://filters.pixijs.download/main/docs/index.html\n * https://pixijs.io/examples/#/textures/gradient-resource.js\n * \n */\nclass EfficiencyBarComponent extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State = {}\n\n  private cornerRadius: number = 10;\n  private boundingBoxWidth: number = 100;\n  public boundingBox: Pixi.Graphics;\n\n  private innerBarWidth: number = 24;\n  private innerBarHeight: number = 200;\n  private textHeight: number = 24; // observed height of the title text, including padding at the top of the text\n  private paddingBottom: number = 12;\n  public innerBar: Pixi.Graphics;\n  public barBorder: Pixi.Graphics;\n  public filter!: Pixi.filters.BlurFilter;\n  public barFill: Pixi.Graphics;\n  public mask: Pixi.Graphics;\n    // object documentation: https://pixijs.download/dev/docs/PIXI.TextStyle.html\n\n  public titleText: Pixi.Text;\n  private textStyle: Partial<Pixi.TextStyle> = {\n    fontFamily: 'PixelMix',\n    padding: 4, // https://github.com/pixijs/pixi.js/issues/4500 -- otherwise on first load the text bounding box is calculated to be too small and the tops of the f's get cut off\n    fontSize: 26, // use 26 then scale down 50% results in sharper letters than 13\n    // align: 'center'\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.container = new Pixi.Container();\n    this.container.interactive = true;\n    this.container.sortableChildren = true;\n\n    this.titleText = new Pixi.Text('Efficiency', this.textStyle);\n    this.titleText.scale = PixiPointFrom(new Vector2(0.5, 0.5));\n    this.titleText.anchor = PixiPointFrom(new Vector2(0.5, 0.0)); // center ourselves, left-right\n    this.titleText.zIndex = 0;\n    this.titleText.x = 50; // full container width is 100, we want to be in the middle\n    this.titleText.y = 4; // bit of padding for the top\n    this.container.addChild(this.titleText);\n\n    this.boundingBox = new Pixi.Graphics();\n    this.boundingBox.beginFill(0xDDEEFF); // background color is the blue AACCEE, this is very light bluer than that\n    this.boundingBox.drawRoundedRect(\n      0, 0,\n      this.boundingBoxWidth,\n      this.textHeight + this.innerBarHeight + this.paddingBottom,\n      this.cornerRadius\n    ); // outerbar = the box containing the efficiency text + bar. 100px is just enough width for the word \"Efficiency\". 236px height was chosen arbitrarily\n    this.boundingBox.zIndex = -1;\n    this.boundingBox.alpha = .8; // let a bit of the background poke through. TODO: actually blur the background?? cant figure out how to do it\n    this.container.addChild(this.boundingBox);\n\n    this.innerBar = new Pixi.Graphics();\n    this.innerBar.beginFill(0xFFFFFF);\n    this.innerBar.drawRoundedRect(0, 0, this.innerBarWidth, this.innerBarHeight, this.cornerRadius); // we want the inner bar (containing the actual efficiency colors) to be 40 wide and 200 tall. round the corners at the same radius as the outer box.\n    // this.innerBar.x = 12;\n    this.innerBar.pivot.x = this.innerBarWidth/2; // this is our width over 2\n    this.innerBar.x = this.boundingBoxWidth/2; // this is outer bar width / 2\n    this.innerBar.y = this.textHeight; // this is just enough space below the \"Efficiency\" text to look nice\n    this.innerBar.zIndex = 3;\n    this.container.addChild(this.innerBar);\n\n    // rainbow red-green gradient for the contents of the inner bar\n    const barFillContainer = new Pixi.Container();\n    this.barFill = new Pixi.Graphics();\n    // source: https://www.schemecolor.com/red-orange-green-gradient.php\n    this.barFill.beginFill(0x69B34C);\n    this.barFill.drawRect(0, 0, this.innerBarWidth, this.innerBarHeight/5);\n    this.barFill.beginFill(0xACB334);\n    this.barFill.drawRect(0, 40, this.innerBarWidth, this.innerBarHeight/5);\n    this.barFill.beginFill(0xFAB733);\n    this.barFill.drawRect(0, 80, this.innerBarWidth, this.innerBarHeight/5);\n    this.barFill.beginFill(0xFF8E15);\n    this.barFill.drawRect(0, 120, this.innerBarWidth, this.innerBarHeight/5);\n    this.barFill.beginFill(0xFF4E11);\n    this.barFill.drawRect(0, 160, this.innerBarWidth, this.innerBarHeight/5);\n    this.barFill.pivot.x = this.innerBarWidth / 2;\n    this.barFill.x = this.boundingBoxWidth / 2;\n    this.barFill.y = this.textHeight; // same positioning as innerBar\n    this.barFill.zIndex = 4;\n    // this.container.addChild(this.barFill);\n    barFillContainer.addChild(this.barFill);\n    barFillContainer.zIndex = 4;\n    this.container.addChild(barFillContainer);\n\n    // this.barFill.filters = [this.filter];\n    // mask controls how much of the red-green gradient fillings are visible, depending on how well the player is doing\n    const maskContainer = new Pixi.Container();\n    // this mask moves up and down\n    this.mask = new Pixi.Graphics();\n    this.mask.beginFill(0x000000, 1); // color and alpha literally dont matter cuz its a mmask\n    this.mask.drawRoundedRect(0, 0, this.innerBarWidth, this.innerBarHeight, this.cornerRadius); // same dims as the inner bar. note that this doesnt take into account the line style of width 2, so it will cause the filling to leak over into the line style. to fix this barBorder is reapplied over the top to cover the leaks.\n    this.mask.zIndex = 30; // doesnt matter\n    this.mask.pivot.x = this.innerBarWidth/2; // left-right center in ourselves\n    this.mask.x = this.boundingBoxWidth/2; // center in the boundingBox\n    this.mask.y = this.textHeight; // same positioning as inner bar\n\n    // this mask does not\n    const fixedMask = new Pixi.Graphics();\n    fixedMask.beginFill(0x000000, 1); // color and alpha literally dont matter cuz its a mmask\n    fixedMask.drawRoundedRect(0, 0, this.innerBarWidth, this.innerBarHeight, this.cornerRadius); // same dims as the inner bar. note that this doesnt take into account the line style of width 2, so it will cause the filling to leak over into the line style. to fix this barBorder is reapplied over the top to cover the leaks.\n    fixedMask.zIndex = 31; // doesnt matter\n    fixedMask.pivot.x = this.innerBarWidth/2; // left-right center in ourselves\n    fixedMask.x = this.boundingBoxWidth/2; // center in the boundingBox\n    fixedMask.y = this.textHeight; // same positioning as inner bar\n\n    maskContainer.addChild(this.mask);\n    // maskContainer.addChild(fixedMask);\n    this.container.addChild(maskContainer);\n    // this.container.addChild(this.mask); // have to add child here -- not sure why\n    this.barFill.mask = maskContainer;\n\n    this.container.addChild(fixedMask);\n    barFillContainer.mask = fixedMask;\n\n    // another copy of innerbar, except this time the fill is transparent; we just need the line style to be redrawn so that \n    // the inner filling mask leakage gets hidden\n    this.barBorder = new Pixi.Graphics();\n    this.barBorder.lineStyle(2, 0x000000, 1);\n    // this.barBorder.beginFill(0x000000, 0);\n    this.barBorder.drawRoundedRect(0, 0, this.innerBarWidth, this.innerBarHeight, this.cornerRadius);\n    this.barBorder.pivot.x = this.innerBarWidth / 2;\n    this.barBorder.x = this.boundingBoxWidth / 2;\n    this.barBorder.y = this.textHeight;\n    this.barBorder.zIndex = 7;\n    this.container.addChild(this.barBorder);\n  }\n\n  public renderSelf(props: Props) {\n    this.container.position = PixiPointFrom(props.position);\n\n    if (props.tick < 60 && props.tick % 10 === 5) { // poll for document webfonts loaded; TODO, substitute for listening to actual fonts ready event\n      this.titleText.updateText(false); // false == force reload text even when text has not changed. needed to get new fonts\n    }\n\n    this.mask.y = (100 - props.efficiencyPercent) * 2 + 24;\n  }\n}\n\nconst wrapped = engageLifecycle(EfficiencyBarComponent);\n// eslint-disable-next-line\ntype wrapped = EfficiencyBarComponent;\nexport { wrapped as EfficiencyBarComponent };","\nconst logRowsToKeep: number = 60; // last 1 seconds, at 60 fps\n\n/**\n * See https://www.npmjs.com/package/pixi-fps https://github.com/jkanchelov/pixi-fps\n */\nexport class FpsTracker {\n  private frameTimestampsInTicks: any[] = [];\n  private frameTimestampsInTime: any[] = [];\n\n  constructor() {\n    this.frameTimestampsInTicks.push(0);\n    // this.frameTimestampsInTime.push((new Date()).getTime());\n  }\n\n  /**\n   * @param ticksSinceLastUpdate should be the delta in ticks since the last update - will probably be a decimal close to 1\n   */\n  public tick(ticksSinceLastUpdate: number) {\n    let lastFrameTime = this.frameTimestampsInTicks[this.frameTimestampsInTicks.length - 1];\n    this.frameTimestampsInTicks.push(lastFrameTime + ticksSinceLastUpdate);\n    \n    // rotate logs\n    if (this.frameTimestampsInTicks.length > logRowsToKeep + 60) {\n      this.frameTimestampsInTicks = this.frameTimestampsInTicks.slice(60);\n    }\n\n    // do the same but track real time\n    this.frameTimestampsInTime.push((new Date()).getTime());\n    if (this.frameTimestampsInTime.length > logRowsToKeep + 60) {\n      this.frameTimestampsInTime = this.frameTimestampsInTime.slice(60);\n    }\n  }\n\n  // [0, 3, 4] -> 30 fps\n  public getUps() : number {\n    let ticksDiff = this.frameTimestampsInTicks[this.frameTimestampsInTicks.length - 1] - this.frameTimestampsInTicks[0];\n    let framesDiff = this.frameTimestampsInTicks.length - 1;\n\n    let framesPerTick = framesDiff / ticksDiff;\n    if (!framesPerTick) {\n      return 60;\n    }\n\n    return framesPerTick * 60;\n  }\n\n  public getFps(): number {\n    let timeDiff = this.frameTimestampsInTime[this.frameTimestampsInTime.length - 1] - this.frameTimestampsInTime[0];\n    let framesDiff = this.frameTimestampsInTime.length - 1;\n\n    let framesPerMilli = framesDiff / timeDiff;\n    if (!framesPerMilli) {\n      return 60;\n    }\n\n    return framesPerMilli * 1000;\n  }\n\n  public getFpsString(): string {\n    let fpsNumber = this.getFps();\n\n    return fpsNumber.toFixed(1);\n  }\n\n  public getUpsString(): string {\n    let upsNumber = this.getUps();\n\n    return upsNumber.toFixed(1);\n  }\n}","import * as Pixi from \"pixi.js\";\nimport { FpsTracker } from \"../../lib/util/fpsTracker\";\nimport { Vector2 } from \"../../lib/util/geometry/vector2\";\nimport { PixiPointFrom } from \"../../lib/pixi/pixify\";\nimport { engageLifecycle, LifecycleHandlerBase } from \"./LifecycleHandler\";\n\ntype Props = {\n  delta: number;\n  position: Vector2;\n  appSize: Vector2;\n}\n\ntype State = {\n  fpsTracker: FpsTracker\n}\n\n// export class FpsComponent {\n//   public container: Pixi.Text;\n//   staleProps: Props;\n//   state: State;\n\n//   constructor(props: Props) {\n//     this.container = new Pixi.Text('', {\n//       fontFamily: 'PixelMix',\n//       fontSize: 12,\n//       // align: 'right'\n//     });\n//     this.state = {\n//       fpsTracker: new FpsTracker()\n//     };\n//     this.staleProps = props;\n\n//     this.renderSelf(props)\n//   }\n\n//   public update(props: Props) {\n//     this.updateSelf(props);\n//     this.renderSelf(props);\n//   }\n\n//   updateSelf(props: Props) {\n//     this.state.fpsTracker.tick(props.delta);\n//   }\n//   renderSelf(props: Props) {\n//     this.container.text = this.state.fpsTracker.getFpsString() + \" FPS\\n\" +\n//       this.state.fpsTracker.getUpsString() + \" UPS\\n\" +\n//       props.appSize.x + \"x\" + props.appSize.y;\n//     this.container.position = PixiPointFrom(props.position);\n//   }\n// }\n\nclass FpsComponent extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Text;\n  public state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this.container = new Pixi.Text('', {\n      fontFamily: 'PixelMix',\n      fontSize: 12,\n      // align: 'right'\n    });\n    this.state = {\n      fpsTracker: new FpsTracker()\n    };\n  }\n\n  protected updateSelf(props: Props) {\n    this.state.fpsTracker.tick(props.delta);\n  }\n\n  protected renderSelf(props: Props) {\n    this.container.text = this.state.fpsTracker.getFpsString() + \" FPS\\n\" +\n      this.state.fpsTracker.getUpsString() + \" UPS\\n\" +\n      props.appSize.x + \"x\" + props.appSize.y;\n    this.container.position = PixiPointFrom(props.position);\n  }\n}\n\nconst wrapped = engageLifecycle(FpsComponent);\n// eslint-disable-next-line\ntype wrapped = FpsComponent;\nexport { wrapped as FpsComponent };","import * as Pixi from \"pixi.js\";\nimport { PixiPointFrom } from \"../../lib/pixi/pixify\";\nimport { Vector2 } from \"../../lib/util/geometry/vector2\";\nimport { engageLifecycle, LifecycleHandlerBase } from \"./LifecycleHandler\";\n\ntype Props = {\n  appSize: Vector2\n}\n\ntype State = {\n  position: Vector2;\n}\n\nclass ReticleComponent extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this.container = new Pixi.Container();\n    this.state = {\n      position: props.appSize.multiply(0.5)\n    };\n\n    const outerCircle = new Pixi.Graphics();\n    outerCircle.lineStyle(2, 0x000000);\n    outerCircle.alpha = 0.5;\n    outerCircle.drawCircle(0, 0, 16);\n    outerCircle.interactive = true;\n    this.container.addChild(outerCircle)\n    outerCircle.moveTo(0, -8);\n    outerCircle.lineTo(0, 8);\n    outerCircle.moveTo(-8, 0);\n    outerCircle.lineTo(8, 0);\n  }\n\n  protected updateSelf(props: Props) {\n    this.state.position = props.appSize.multiply(0.5);\n  }\n  protected renderSelf(props: Props) {\n    this.container.position = PixiPointFrom(this.state.position);\n  }\n}\n\nconst wrapped = engageLifecycle(ReticleComponent);\n// eslint-disable-next-line\ntype wrapped = ReticleComponent;\nexport { wrapped as ReticleComponent };","import * as Pixi from \"pixi.js\";\nimport { PixiPointFrom } from \"../../lib/pixi/pixify\";\nimport { Vector2 } from \"../../lib/util/geometry/vector2\";\nimport { engageLifecycle, LifecycleHandlerBase } from \"./LifecycleHandler\";\n\n\nexport type TooltipInfo = {\n  text: string;\n  position: Vector2 | undefined; // should be nonnull if visible === true\n  visible: boolean;\n}\n\ntype Props = {\n  offset: Vector2,\n} & TooltipInfo;\n\ntype State = {} \n\nclass TooltipComponent extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n\n  private text: Pixi.Text;\n  private box?: Pixi.Graphics;\n\n  constructor(props: Props) {\n    super(props);\n    this.container = new Pixi.Container();\n    this.container.sortableChildren = true;\n    this.state = {};\n\n    this.text = new Pixi.Text(props.text, {\n      fontFamily: 'PixelMix',\n      padding: 4, // https://github.com/pixijs/pixi.js/issues/4500 -- otherwise on first load the text bounding box is calculated to be too small and the tops of the f's get cut off\n      fontSize: 26, // use 26 then scale down 50% results in sharper letters than 13\n      // align: 'center'\n    });\n    this.text.scale = PixiPointFrom(new Vector2(0.5, 0.5));\n    this.text.x = 10;\n    this.text.y = 10;\n    this.text.zIndex = 2;\n    this.container.addChild(this.text);\n\n    // this.box = new Pixi.Graphics();\n\n    // this.box.lineStyle(1, 0x222222, 1);\n    // this.box.beginFill(0xEEEEEE);\n    // this.box.drawRoundedRect(0, 0, this.text.width + 18, this.text.height + 18, 4);\n    // this.box.zIndex = 0;\n    // this.container.addChild(this.box);\n  }\n\n  protected shouldUpdate(prevProps: Props, prevState: State, props: Props, state: State): boolean {\n    for (let key of (Object.keys(prevProps) as (keyof Props)[])) {\n      if (prevProps[key] !== props[key]) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  protected renderSelf(props: Props) {\n    this.container.visible = props.visible;\n    this.container.position = PixiPointFrom(props.offset.add(props?.position || Vector2.Zero));\n    this.text.text = props.text;\n\n    if (this.box) {\n      this.container.removeChild(this.box);\n    }\n\n    this.box = new Pixi.Graphics();\n    this.box.lineStyle(1, 0x222222, 1);\n    this.box.beginFill(0xEEEEEE);\n    this.box.drawRoundedRect(0, 0, this.text.width + 18, this.text.height + 18, 4);\n    this.box.zIndex = 0;\n    this.container.addChild(this.box);\n  }\n}\n\nconst wrapped = engageLifecycle(TooltipComponent);\n// eslint-disable-next-line\ntype wrapped = TooltipComponent;\nexport { wrapped as TooltipComponent };\nexport type { Props as TooltipComponentProps };","import * as Pixi from \"pixi.js\";\nimport { GameState } from \"../../data/GameState\";\nimport { computeQuestEfficiencyPercent, remapQuestEfficiencyToDisplayable } from \"../../game/EfficiencyCalculator\";\nimport { Vector2 } from \"../../lib/util/geometry/vector2\";\nimport { Const } from \"../../lib/util/misc\";\nimport { EfficiencyBarComponent } from \"./EfficiencyBarComponent\";\nimport { FpsComponent } from \"./FpsComponent\";\nimport { engageLifecycle, LifecycleHandlerBase } from \"./LifecycleHandler\";\nimport { ReticleComponent } from \"./ReticleComponent\";\nimport { TooltipComponent, TooltipInfo } from \"./TooltipComponent\";\n\ntype Props = {\n  args: {\n    renderer: Pixi.Renderer,\n    markForceUpdate: (childInstance: any) => void,\n  },\n  delta: number,\n  gameState: Const<GameState>,\n  appSize: Vector2,\n  tick: number,\n  tooltip: TooltipInfo,\n}\n\ntype State = { \n}\n\nclass FixedCameraStageComponent extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n\n  private fpsTracker!: FpsComponent;\n  private reticle!: ReticleComponent;\n  private efficiencyBar!: EfficiencyBarComponent;\n  private scoreText!: Pixi.Text;\n\n  constructor(props: Props) {\n    super(props);\n    this.container = new Pixi.Container();\n    this.container.sortableChildren = true;\n    this.state = {};\n\n    this.addChild({\n      childClass: FpsComponent,\n      propsFactory: (props: Props, state: State) => {\n        return {\n          delta: props.delta,\n          position: new Vector2(0, 0),\n          appSize: props.appSize,\n        };\n      },\n    });\n\n    this.addChild({\n      childClass: ReticleComponent,\n      propsFactory: (props: Props, state: State) => {\n        return {\n          appSize: props.appSize,\n        };\n      },\n    });\n\n    this.addChild({\n      childClass: EfficiencyBarComponent,\n      propsFactory: (props: Props, state: State) => {\n        return {\n          delta: props.delta,\n          args: {},\n          updaters: {},\n          tick: props.tick,\n          position: new Vector2(60, 60),\n          efficiencyPercent: remapQuestEfficiencyToDisplayable(computeQuestEfficiencyPercent(props.gameState.playerSave)),\n        };\n      },\n    });\n\n    this.addChild({\n      childClass: TooltipComponent,\n      propsFactory: (props: Props, state: State) => {\n        return { offset: new Vector2(8, 8), ...props.tooltip };\n      }\n    });\n\n    this.scoreText = new Pixi.Text('', {\n      fontFamily: 'PixelMix',\n      padding: 4, // https://github.com/pixijs/pixi.js/issues/4500 -- otherwise on first load the text bounding box is calculated to be too small and the tops of the f's get cut off\n      fontSize: 26, // use 26 then scale down 50% results in sharper letters than 13\n      // align: 'center'\n    });\n    // this.scoreText.scale = PixiPointFrom(new Vector2(0.5, 0.5));\n    this.scoreText.pivot.x = 0.5;\n    this.scoreText.y = 8;\n    this.container.addChild(this.scoreText);\n  }\n\n  protected renderSelf(props: Props) {\n    this.scoreText.x = props.appSize.x * 0.05;\n    this.scoreText.text = 'Score: ' + props.gameState.playerSave.score.toString();\n\n    if (props.tick < 60 && props.tick % 10 === 5) { // poll for document webfonts loaded; TODO, substitute for listening to actual fonts ready event\n      this.scoreText.updateText(false); // false == force reload text even when text has not changed. needed to get new fonts\n    }\n  }\n}\n\nconst wrapped = engageLifecycle(FixedCameraStageComponent);\n// eslint-disable-next-line\ntype wrapped = FixedCameraStageComponent;\nexport { wrapped as FixedCameraStageComponent };\nexport type { Props as FixedCameraStageComponentProps };\n\n","import * as Pixi from \"pixi.js\";\nimport { Vector2 } from \"../../lib/util/geometry/vector2\";\nimport { ChunkGenConstants, GameState, IntentName} from \"../../data/GameState\";\nimport { generatePointNodeTexture } from \"../textures/PointNodeTexture\";\nimport { ZLevelGenFactory } from \"../../game/WorldGenStateFactory\";\nimport { Const, Lazy } from \"../../lib/util/misc\";\nimport { UpdaterGeneratorType2 } from \"../../lib/util/updaterGenerator\";\nimport { ZLevelComponent, ZLevelComponentProps } from \"./ZLevelComponent\";\nimport { engageLifecycle, LifecycleHandlerBase } from \"./LifecycleHandler\";\nimport { FixedCameraStageComponent } from \"./FixedCameraStageComponent\";\nimport { TooltipInfo } from \"./TooltipComponent\";\n\ntype State = {\n  pointNodeTexture: Lazy<Pixi.Texture>;\n  tick: number;\n  playerCurrentZ: number;\n  tooltip: TooltipInfo;\n}\n\ntype Props = {\n  args: {\n    renderer: Pixi.Renderer,\n    markForceUpdate: (childInstance: any) => void,\n  },\n  updaters: UpdaterGeneratorType2<GameState>,\n  delta: number,\n  gameState: Const<GameState>,\n  appSize: Vector2\n}\n\nclass RootComponent2 extends LifecycleHandlerBase<Props, State> {\n  public container: Pixi.Container;\n  public state: State;\n  private stateUpdaters: UpdaterGeneratorType2<State>;\n  protected fireStateUpdaters: () => void;\n\n\n  /* children */\n  // Contains HUD, and other entities that don't move when game camera moves\n  private fixedCameraStage: FixedCameraStageComponent;\n  // Contains game entities that move when game camera pans/zooms. Highly encouraged to have further subdivions.\n  private actionStage: Pixi.Container;\n  // Contains a few entities that doesn't move when game camera moves, but located behind action stage entities, e.g. static backgrounds\n  private backdropStage: Pixi.Container;\n  // public keyboard: KeyboardState;\n  private zLevel: ZLevelComponent | undefined;\n  private zLevelPropsFactory: (p: Props, s: State) => ZLevelComponentProps;\n  private backdrop: Pixi.Graphics;\n\n  constructor(props: Props) {\n    super(props);\n    this.container = new Pixi.Container();\n    this.container.sortableChildren = true;\n    ({ state: this.state, stateUpdaters: this.stateUpdaters, fireStateUpdaters: this.fireStateUpdaters } =\n      this.useState<State, RootComponent2>(this, {\n        pointNodeTexture: new Lazy(() => generatePointNodeTexture(props.args.renderer)),\n        tick: 0,\n        playerCurrentZ: 0,\n        tooltip: {\n          visible: false,\n          position: undefined,\n          text: '',\n        }\n      }));\n\n    const fixedCameraStagePropsFactory = (props: Props, state: State) => {\n      return {\n        args: {\n          renderer: props.args.renderer,\n          markForceUpdate: this.markForceUpdate,\n        },\n        delta: props.delta,\n        gameState: props.gameState,\n        appSize: props.appSize,\n        tick: state.tick,\n        tooltip: { ...state.tooltip }\n      };\n    }\n    this.fixedCameraStage = new FixedCameraStageComponent(fixedCameraStagePropsFactory(props, this.state));\n    this.addChild({\n      childClass: FixedCameraStageComponent,\n      instance: this.fixedCameraStage,\n      propsFactory: fixedCameraStagePropsFactory,\n    })\n\n    this.actionStage = new Pixi.Sprite();\n    this.actionStage.zIndex = 0;\n    this.actionStage.sortableChildren = true;\n    this.container.addChild(this.actionStage);\n\n    this.backdropStage = new Pixi.Sprite();\n    this.backdropStage.zIndex = -1;\n    this.backdropStage.sortableChildren = true;\n    this.container.addChild(this.backdropStage);\n\n    this.backdrop = new Pixi.Graphics();\n    this.backdropStage.addChild(this.backdrop);\n    this.backdrop.beginFill(0xabcdef, 1);\n    // backdrop.alpha = 0.5; // if alpha == 0, Pixi does not register this as a hittable area\n    this.backdrop.interactive = true;\n    // backdrop.interactiveChildren = true; // not sure what this does\n    this.backdrop.drawRect(0, 0, props.appSize.x, props.appSize.y);\n\n\n    this.zLevelPropsFactory = (props: Props, state: State): ZLevelComponentProps => {\n      return {\n        delta: props.delta,\n        args: {\n          pointNodeTexture: state.pointNodeTexture.get(),\n          markForceUpdate: this.markForceUpdate,\n        },\n        z: state.playerCurrentZ,\n        updaters: props.updaters,\n        tooltipUpdaters: this.stateUpdaters.tooltip,\n        position: props.appSize.multiply(0.5),\n        zLevelGen: props.gameState.worldGen.zLevels[state.playerCurrentZ],\n        selectedPointNode: props.gameState.playerUI.selectedPointNode,\n        allocatedPointNodeSubset: props.gameState.playerSave.allocatedPointNodeSet,\n      };\n    }\n    this.zLevel = new ZLevelComponent(this.zLevelPropsFactory(props, this.state));\n    this.actionStage.addChild(this.zLevel.container);\n    this.registerChild({\n      childClass: ZLevelComponent,\n      instance: this.zLevel,\n      propsFactory: this.zLevelPropsFactory,\n    });\n\n  }\n\n  protected updateSelf(props: Props) {\n    this.state.tick++;\n\n    const activeIntent = props.gameState.intent.activeIntent;\n    let deltaX = 0;\n    let deltaY = 0;\n    const unit = 5 * props.delta;\n    // if we want to pan [the hud] west (i.e. the left key was pressed), action stage needs to move east\n    if (activeIntent[IntentName.PAN_WEST]) deltaX += unit;\n    if (activeIntent[IntentName.PAN_EAST]) deltaX += -unit;\n    // if we want to pan south (i.e. the down key was pressed), action stage needs to move north to give the impression\n    // the hud is moving south. note that north is negative y direction since top left is 0,0\n    if (activeIntent[IntentName.PAN_SOUTH]) deltaY += -unit;\n    if (activeIntent[IntentName.PAN_NORTH]) deltaY += unit;\n    this.actionStage.x += deltaX;\n    this.actionStage.y += deltaY;\n\n    if (props.gameState.intent.newIntent[IntentName.TRAVEL_IN]) {\n      this.state.playerCurrentZ--;\n\n      // scale by a factor of 9\n      this.actionStage.x *= ChunkGenConstants.CHUNK_DIM;\n      this.actionStage.y *= ChunkGenConstants.CHUNK_DIM;\n\n      // console.log({ currentZ: this.state.playerCurrentZ });\n    }\n    if (props.gameState.intent.newIntent[IntentName.TRAVEL_OUT]) {\n      this.state.playerCurrentZ++;\n\n      this.actionStage.x /= ChunkGenConstants.CHUNK_DIM;\n      this.actionStage.y /= ChunkGenConstants.CHUNK_DIM;\n      // console.log({ currentZ: this.state.playerCurrentZ });\n    }\n  }\n\n  protected renderSelf(props: Props) {\n    this.backdrop.width = props.appSize.x;\n    this.backdrop.height = props.appSize.y;\n  }\n\n  protected didMount() {\n    const { updaters } = this._staleProps;\n    this.backdrop.addListener('pointerdown', (event) => {\n      updaters.playerUI.selectedPointNode.enqueueUpdate((prev, whole) => {\n        return undefined;\n      })\n    });\n  }\n\n  protected didUpdate() {\n    const { updaters } = this._staleProps;\n    // if we find ourselves a little idle, start pregenerating other layers\n    if (this.state.tick > 60 && !this._staleProps.gameState.worldGen.zLevels[-1]) {\n      updaters.worldGen.zLevels.enqueueUpdate((prev, prevGameState) => {\n        if (!prev[-1]) {\n          prev[-1] = new ZLevelGenFactory({}).create({ seed: prevGameState.worldGen.seed, z: -1 });\n          return {...prev};\n        } else {\n          return prev;\n        }\n      })\n    }\n    if (this.state.tick > 120 && !this._staleProps.gameState.worldGen.zLevels[1]) {\n      updaters.worldGen.zLevels.enqueueUpdate((prev, prevGameState) => {\n        if (!prev[1]) {\n          prev[1] = new ZLevelGenFactory({}).create({ seed: prevGameState.worldGen.seed, z: 1 });\n          return {...prev};\n        } else {\n          return prev;\n        }\n      })\n    }\n  }\n\n}\n\n\nconst wrapped = engageLifecycle(RootComponent2);\n// eslint-disable-next-line\ntype wrapped = RootComponent2;\nexport { wrapped as RootComponent };\nexport type { Props as RootComponentProps, State as RootComponentState };","import * as Pixi from \"pixi.js\";\nimport { RenderedChunkConstants } from \"../components/ChunkComponent\";\n\nexport function generatePointNodeTexture(renderer: Pixi.Renderer) {\n    let g = new Pixi.Graphics();\n    g.beginFill(0xffffff);\n    g.drawRoundedRect(\n      - RenderedChunkConstants.NODE_SIZE_PX / 2,\n      - RenderedChunkConstants.NODE_SIZE_PX / 2,\n      RenderedChunkConstants.NODE_SIZE_PX,\n      RenderedChunkConstants.NODE_SIZE_PX,\n      RenderedChunkConstants.NODE_ROUNDED_PX\n    );\n    // g.x = 200;\n    // g.y = 200;\n    // this.app.stage.addChild(g);\n    let texture = renderer.generateTexture(g, Pixi.SCALE_MODES.NEAREST, 1);\n    // const sprite = new Pixi.Sprite(texture);\n    // sprite.x = 300;\n    // sprite.y = 300;\n    // this.app.stage.addChild(sprite);\n  return texture;\n}","import * as Pixi from \"pixi.js\";\nimport { Vector2 } from \"../lib/util/geometry/vector2\";\nimport { GameState, WindowState } from \"../data/GameState\";\n// eslint-disable-next-line\nimport { assertOnlyCalledOnce, Const } from \"../lib/util/misc\";\nimport { RootComponent } from \"./components/RootComponent\";\nimport { UpdaterGeneratorType2 } from \"../lib/util/updaterGenerator\";\n\ntype Props = {\n  args: {\n    fireBatch: () => void,\n    isSecondConstructorCall: boolean\n  },\n  updaters: UpdaterGeneratorType2<GameState>, // aka updaters\n  windowState: Const<WindowState>,\n  gameState: Const<GameState>,\n}\n\ntype State = {\n  appSize: Vector2,\n  originalAppSize: Vector2,\n}\n\nfunction appSizeFromWindowSize(window?: Const<Vector2>): Vector2 {\n  return new Vector2({\n    x: Math.min(1920, (window?.x || Infinity) - 24),\n    y: Math.min(1080, (window?.y || Infinity) - 24),\n  });\n}\n\n/**\n * TODO(bowei): move the resizing out of this function and into root component,\n * and only handle react/pixi state management in this class\n */\nexport class PixiReactBridge {\n  public app!: Pixi.Application;\n\n  state!: State;\n  props!: Props;\n\n  rootComponent: RootComponent | undefined;\n  onTick!: (d: number) => void;\n\n  /**\n   * NOTE: for lifecycle convenience, we allow initializing with essentially empty props, and to finish the initialization\n   * lazily at the first rerender() call\n   */\n  constructor(props?: Props, isSecondConstructorCall: boolean = false) {\n    // verify that we are not loading this twice when we expect to load it only once -- bad for performance!!\n    if (!(props?.args?.isSecondConstructorCall || isSecondConstructorCall)) {\n      // assertOnlyCalledOnce(\"Pixi react bridge constructor\"); // annoying with react hot reload, disable for now}\n    }\n\n    let appSize = new Vector2(800, 600);\n    this.state = {\n      appSize,\n      originalAppSize: appSize\n    }\n\n    this.app = new Pixi.Application({\n      width: this.state.appSize.x,\n      height: this.state.appSize.y,\n      antialias: true, // both about the same FPS, i get around 30 fps on 1600 x 900\n      transparent: true, // true -> better fps?? https://github.com/pixijs/pixi.js/issues/5580\n      resolution: window.devicePixelRatio || 1, // lower -> more FPS but uglier\n      // resolution: 0.5,\n      // resolution: 2,\n      autoDensity: true,\n      powerPreference: \"low-power\", // the only valid one for webgl\n      backgroundColor: 0xffffff, // immaterial - we recommend setting color in backdrop graphics\n    });\n\n    // test\n    // createBunnyExample({ parent: this.app.stage, ticker: this.app.ticker, x: this.app.screen.width / 2, y: this.app.screen.height / 2 });\n  }\n\n  public pause() {\n    this.app.ticker.remove(this.onTick);\n  }\n  public destroy() {\n    this.app.destroy(true, { children: true, texture: true, baseTexture: true });\n  }\n\n  public didMount() {\n    this.onTick = (delta) => this.baseGameLoop(delta);\n    this.onTick = this.onTick.bind(this);\n    this.app.ticker.add(this.onTick);\n  }\n\n  /**\n   * Please only call once!!\n   * Usage: const container = useRef<HTMLDivElement>(null); useEffect(() => { application.register(container.current!); }, []);\n   */\n  public register(curr: HTMLDivElement) {\n    curr.appendChild(this.app.view);\n  }\n\n  updateSelf(props: Props) {\n    this.state.appSize = appSizeFromWindowSize(new Vector2(props.windowState.innerWidth, props.windowState.innerHeight));\n  }\n\n  // shim, called from react, possibly many times , possibly at any time, including during the baseGameLoop below\n  // props should be a referentially distinct object from props the last time this was called\n  rerender(props: Props) {\n    console.log(\"base app rerender called\", { playerUI: props.gameState.playerUI });\n    this.props = props;\n    if (!this.rootComponent) {\n      // finish initialization\n      this.rootComponent = new RootComponent({\n        args: {\n          renderer: this.app.renderer,\n          markForceUpdate: () => { },\n        },\n        updaters: this.props.updaters,\n        delta: 0,\n        gameState: this.props.gameState,\n        appSize: this.state.appSize,\n      })\n      this.app.stage.addChild(this.rootComponent.container);\n\n      this.renderSelf(this.props);\n\n      // test\n      // createBunnyExample({ parent: this.app.stage, ticker: this.app.ticker, x: this.app.screen.width / 2, y: this.app.screen.height / 2 });\n      this.didMount();\n    }\n  }\n\n  renderSelf(props: Props) {\n    this.app.renderer.resize(this.state.appSize.x, this.state.appSize.y);\n  }\n\n  baseGameLoop(delta: number) {\n    // assume props is up to date\n    this.updateSelf(this.props);\n    // send props downwards\n    this.rootComponent?.update({\n      args: {\n        renderer: this.app.renderer,\n        markForceUpdate: () => { },\n      },\n      updaters: this.props.updaters,\n      delta,\n      gameState: this.props.gameState,\n      appSize: this.state.appSize,\n    });\n    \n    this.renderSelf(this.props);\n    this.props.args.fireBatch(); // fire enqueued game state updates, which should come back from react in the rerender()\n  }\n}\n","import { GameState, PointNodeRef, noIntent } from \"../data/GameState\";\nimport { HashSet } from \"../lib/util/data_structures/hash\";\nimport { Vector2 } from \"../lib/util/geometry/vector2\";\nimport { assertOnlyCalledOnce } from \"../lib/util/misc\";\nimport { computePlayerResourceAmounts } from \"./ComputeState\";\nimport { ZLevelGenFactory } from \"./WorldGenStateFactory\";\n\nexport type GameStateConfig = any;\n\nexport class GameStateFactory {\n  public config: GameStateConfig;\n\n  constructor(config: GameStateConfig) {\n    this.config = config;\n  }\n\n  public create(seed: number | undefined | null = undefined): GameState {\n    if (seed === undefined) {\n      assertOnlyCalledOnce(\"GameStateFactory.create\");\n    }\n    const mySeed = seed || 0x19283;\n\n    const zLevel = new ZLevelGenFactory({}).create({\n      seed: mySeed,\n      z: 0,\n      startingChunks: 0,\n    });\n    const origin = new Vector2(0, 0);\n    const firstId = zLevel.chunks.get(origin)?.pointNodes.get(origin)?.id!;\n    const pointNodeRef: PointNodeRef = new PointNodeRef({\n      z: 0,\n      chunkCoord: origin,\n      pointNodeId: firstId,\n      pointNodeCoord: origin,\n    });\n\n    const gameState = {\n      worldGen: {\n        seed: mySeed,\n        zLevels: { 0: zLevel },\n      },\n      playerSave: {\n        // justAllocated: undefined,\n        activeQuest: undefined,\n        spSpentThisQuest: undefined,\n        questProgressHistory: [],\n        questInitialAmount: 0,\n        questsCompleted: [],\n        allocatedPointNodeSet: new HashSet([pointNodeRef]),\n        allocatedPointNodeHistory: [pointNodeRef],\n        score: 0,\n      },\n      playerUI: {\n        selectedPointNode: undefined,\n        activeTab: 0,\n      },\n      computed: {},\n      intent: {\n        activeIntent: noIntent,\n        newIntent: noIntent,\n        endedIntent: noIntent,\n      },\n    };\n    gameState.computed = { ...computePlayerResourceAmounts(gameState) };\n    return gameState;\n  }\n}\n","import React, { useContext, useMemo, useState } from \"react\";\nimport \"./PixiComponent.css\";\nimport { GameState, WindowState } from \"../data/GameState\";\nimport { PixiWrapperComponent } from \"./PixiWrapperComponent\";\nimport { Lazy } from \"../lib/util/misc\";\nimport { PixiReactBridge } from \"../pixi/PixiReactBridge\";\nimport { UseGameStateContext } from \"../contexts\";\nimport { GameStateFactory } from \"../game/GameStateFactory\";\nimport { batchifySetState } from \"../lib/util/batchify\";\n\nconst initialApplication = new Lazy(() => new PixiReactBridge());\n\nexport function PixiComponent(props: { originalSetGameState: Function }) {\n  // eslint-disable-next-line\n  const [_, gameStateUpdaters]  = useContext(UseGameStateContext);\n  const [windowState, setWindowState] = useState<WindowState>({\n    orientation: \"original\",\n    innerHeight: window.innerHeight,\n    innerWidth: window.innerWidth,\n  });\n  let [batchedSetWindowState, fireBatchedSetWindowState] =\n    useMemo(() => batchifySetState(setWindowState), [setWindowState]);\n\n  // needed to prevent react double-render for some reason (dev mode??)\n  const [application, setApplication] = useState(initialApplication.get());\n\n  window.onresize = () => {\n    batchedSetWindowState(old => {\n      old.innerWidth = window.innerWidth;\n      old.innerHeight = window.innerHeight;\n      return { ...old };\n    })\n  };\n\n  return (\n    <>\n      <PixiWrapperComponent application={application} windowState={windowState} fireBatchedSetWindowState={fireBatchedSetWindowState}/>\n      <button onClick={() => {\n        gameStateUpdaters.enqueueUpdate((old) => {\n          let newGameState = new GameStateFactory({}).create(old.worldGen.seed);\n          old.playerSave = newGameState.playerSave;\n          old.playerUI = newGameState.playerUI;\n          old.worldGen = newGameState.worldGen;\n          return old\n        });\n      }}>Reset game state</button>\n      <button onClick={() => {\n        application.pause();\n        application.destroy();\n        setApplication(new PixiReactBridge(undefined, true));\n\n        let newGameState = new GameStateFactory({}).create(+new Date());\n        props.originalSetGameState((old: GameState) => {\n          old.playerSave = newGameState.playerSave;\n          old.playerUI = newGameState.playerUI;\n          old.worldGen = newGameState.worldGen;\n          return old\n        });\n      }}>Get a fresh seed, reset, and rerender</button>\n      <button\n        onClick={() => {\n          application.pause();\n          application.destroy();\n          setApplication(new PixiReactBridge(undefined, true));\n        }}\n      >\n        Rerender pixi application\n      </button>\n    </>\n  );\n}\n","import \"./QuestProgress.css\";\n\nimport classnames from \"classnames\";\nimport React, { useState } from \"react\";\nimport { GameState, Quest, ResourceType } from \"../data/GameState\";\nimport { UpdaterGeneratorType2 } from \"../lib/util/updaterGenerator\";\nimport { Grade, remapEfficiencyGradeToNumber } from \"../game/EfficiencyCalculator\";\n\ntype Props = {\n  spSpentThisQuest: number | undefined;\n  createQuestCb: () => void;\n  activeQuest: Quest | undefined;\n  playerResourceAmounts?: { [k in ResourceType]: number };\n  updaters: UpdaterGeneratorType2<GameState, GameState>[\"playerSave\"];\n  efficiencyGrade: Grade;\n  score: GameState[\"playerSave\"][\"score\"];\n  questInitialAmount: number;\n};\ntype QuestScoreReward = {\n  total: number;\n  scoreComponents: ScoreComponent[];\n};\ntype ScoreComponent = {\n  // inputAmount: number | string;\n  // inputTitle: string;\n  // outputScore: number;\n  // outputDescription: string;\n  scoreAmount: number;\n  scoreReason: string;\n};\n\n\nexport default React.memo(QuestProgressComponent);\n\nfunction calculateQuestScoreReward(grade: Grade): QuestScoreReward {\n  const scoreComponents = [\n    {\n      scoreReason: 'Quest completed',\n      scoreAmount: 50,\n    },\n    {\n      scoreReason: `Efficiency: \"${grade}\"`,\n      scoreAmount: remapEfficiencyGradeToNumber(grade) * 25,\n    }\n  ];\n  const total = scoreComponents.reduce((pv, cv) => pv + cv.scoreAmount, 0);\n  return {\n    total,\n    scoreComponents,\n  };\n}\n\nfunction QuestProgressComponent({\n  activeQuest,\n  spSpentThisQuest,\n  createQuestCb,\n  playerResourceAmounts,\n  updaters,\n  efficiencyGrade,\n  // score,\n  questInitialAmount,\n}: Props) {\n  /**\n   * activeQuest === undefined => no active quest, need to start quest\n   * isQuestComplete => can finish the quest to generate rewards\n   * rewards ready => can accept rewards to increment score; cannot generate a new quest\n   */\n  const isQuestComplete =\n    activeQuest &&\n    (playerResourceAmounts?.[activeQuest.resourceType] || 0) >= activeQuest.resourceAmount;\n\n  const [didAcceptRewards, setDidAcceptRewards] = useState(true);\n  const [scoreReward, setScoreReward] = useState<QuestScoreReward | undefined>();\n\n  const handleStartQuest = () => {\n    createQuestCb();\n  };\n\n  const doFinishQuest = () => {\n    updaters.activeQuest.enqueueUpdate(() => {\n      return undefined;\n    });\n    setScoreReward(calculateQuestScoreReward(efficiencyGrade));\n    setDidAcceptRewards(false);\n  };\n\n  const doClaimRewards = () => {\n    if (scoreReward) {\n      updaters.score.enqueueUpdate((prev) => {\n        return prev + scoreReward.total;\n      });\n      setDidAcceptRewards(true);\n    }\n  };\n\n  return (\n    <>\n      {<Score doClaimRewards={doClaimRewards} scoreReward={scoreReward} didAcceptRewards={didAcceptRewards}/>}\n      {activeQuest === undefined ? (\n        <>\n          <h2>No active quest\n          </h2>\n          <br></br>\n          <button className=\"button\" onClick={handleStartQuest} disabled={!didAcceptRewards}>\n            {didAcceptRewards ? 'Start a quest' : 'Claim rewards first!'}\n          </button>\n          <br></br>\n          <br></br>\n          <br></br>\n        </>\n      ) : (\n        <>\n            <h2> Active quest: </h2>\n            <table className={classnames({ table: true })}>\n              <tr>\n                <td>\n                  Initial\n                </td>\n                <td>\n                  {questInitialAmount} {activeQuest.resourceType}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Current\n                </td>\n                <td>\n                  {playerResourceAmounts?.[activeQuest.resourceType]} {activeQuest.resourceType}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Target\n                </td>\n                <td>\n                  {activeQuest.resourceAmount} {activeQuest.resourceType}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  SP spent\n                </td>\n                <td>\n                  {spSpentThisQuest === undefined ? \"\" : spSpentThisQuest}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  Efficiency\n                </td>\n                <td>\n                  {efficiencyGrade}\n                </td>\n              </tr>\n            </table>\n\n            {isQuestComplete ? (\n              <>\n                <br></br>\n                <button className=\"button\" onClick={doFinishQuest}>\n                  Finish quest\n                  </button>\n              </>\n            ) : (\n                <></>\n              )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction Score({\n  scoreReward,\n  doClaimRewards,\n  didAcceptRewards,\n}: {\n    scoreReward: QuestScoreReward | undefined;\n    doClaimRewards: () => void;\n    didAcceptRewards: boolean;\n}) {\n  if (scoreReward === undefined) {\n    return (<> </>);\n  }\n\n  return (\n    <>\n      <h3>Quest Rewards</h3>\n      <div>+{scoreReward.total} to your score! </div>\n      <br></br>\n      <table className={classnames({ table: true })}>\n        {scoreReward.scoreComponents.map((it) => (\n          <tr>\n            <td> +{it.scoreAmount} score </td>\n            <td> {it.scoreReason} </td>\n          </tr>))\n        }\n      </table>\n      <br></br>\n      {(\n        didAcceptRewards ? (<> </>) : \n          (\n      <button\n        className=\"button\"\n        onClick={() => doClaimRewards()}>\n        Claim rewards!\n      </button>\n          )\n      )}\n    </>\n  );\n}\n\n// function formatDelta(d: number): string {\n//   return d < 0 ? d.toString() : \"+\" + d.toString();\n// }\n","import React from \"react\";\nimport \"./Sidebar.css\";\n\nexport default function Sidebar({ children }: any) {\n  return <div className=\"layout\">{children}</div>;\n}\n","import React from \"react\";\nexport default function TabContent({ showContent, children }: any) {\n  return <div hidden={!showContent}>{children}</div>;\n}\n","import React from \"react\";\nimport \"./Tabs.css\";\n\nexport default function Tabs({ value, labels, onChange } : any) {\n  return (\n    <div className={\"tab-label-container\"}>\n      {labels.map((label: any, i : any) => (\n        <Tab onClick={onChange} value={i} active={value === i} key={i}>\n          {label}\n        </Tab>\n      ))}\n    </div>\n  );\n}\n\nfunction Tab({ onClick, value, active, children } : any) {\n  const handleClick = () => {\n    onClick(value);\n  };\n  return (\n    <div className={active ? \"tab-label active\" : \"tab-label inactive\"}>\n      <div onClick={handleClick}>{children}</div>\n    </div>\n  );\n}\n","import \"./App.css\";\n\nimport classnames from \"classnames\";\nimport React, { useCallback, useMemo, useState } from \"react\";\nimport UAParser from \"ua-parser-js\";\nimport { DebugTab } from \"./components/DebugTab\";\nimport { KeyboardControlComponent } from \"./components/KeyboardControl\";\nimport { NodeDetail } from \"./components/NodeDetail\";\nimport { PixiComponent } from \"./components/PixiComponent\";\nimport QuestProgress from \"./components/QuestProgress\";\nimport Sidebar from \"./components/Sidebar\";\nimport TabContent from \"./components/TabContent\";\nimport Tabs from \"./components/Tabs\";\nimport { UseGameStateContext } from \"./contexts\";\nimport { GameState } from \"./data/GameState\";\nimport { GameStateFactory } from \"./game/GameStateFactory\";\nimport { createQuest } from \"./game/OnCreateQuest\";\nimport { batchifySetState } from \"./lib/util/batchify\";\nimport { Lazy } from \"./lib/util/misc\";\nimport { updaterGenerator2 } from \"./lib/util/updaterGenerator\";\nimport { computeQuestEfficiencyPercent, remapQuestEfficiencyToGrade } from \"./game/EfficiencyCalculator\";\n\n// TODO(bowei): on mobile, for either ios or android, when in portrait locked orientation, we want to serve a landscape\n// experience - similar to a native app which is landscape locked.\n// (on mobile in already landscape orientation, and in all desktop, serve ordinary orientation.)\n// also note that android webapp supports manifest.json setting orientation, but not in the browser\n// FOR NOW - ignore this\nconst browser = new UAParser().getBrowser();\nlet forceRotate = false;\nif (\n  browser.name === \"Mobile Safari\" &&\n  window.innerWidth < window.innerHeight\n) {\n  forceRotate = true;\n}\n\nconst tabLabels = [\"Quest Progress\", \"Node Details\", \"Debug\"];\n\nconst initialGameState: Lazy<GameState> = new Lazy(() =>\n  new GameStateFactory({}).create()\n);\n\nfunction App() {\n  const [gameState, setGameState] = useState<GameState>(function factory() {\n    return initialGameState.get();\n  });\n\n  let [batchedSetGameState, fireBatch] = useMemo(\n    () => batchifySetState(setGameState),\n    [setGameState]\n  );\n  let updaters = useMemo(\n    () => updaterGenerator2(initialGameState.get(), batchedSetGameState),\n    [batchedSetGameState]\n  );\n  let createQuestCb = useCallback(() => createQuest(updaters), [\n    updaters,\n  ]);\n\n  let tabViews: JSX.Element[] = [];\n  tabViews = [\n    <QuestProgress\n      spSpentThisQuest={gameState.playerSave.spSpentThisQuest}\n      createQuestCb={createQuestCb}\n      activeQuest={gameState.playerSave.activeQuest}\n      playerResourceAmounts={gameState.computed.playerResourceAmounts}\n      updaters={updaters.playerSave}\n      score={gameState.playerSave.score}\n      efficiencyGrade={remapQuestEfficiencyToGrade(computeQuestEfficiencyPercent(gameState.playerSave))}\n      questInitialAmount={gameState.playerSave.questInitialAmount}\n    />,\n    <NodeDetail\n      selectedPointNode={gameState.playerUI.selectedPointNode}\n      allocatedPointNodeSet={gameState.playerSave.allocatedPointNodeSet}\n      worldGen={gameState.worldGen}\n      hasActiveQuest={gameState.playerSave.activeQuest !== undefined}\n    />,\n    <DebugTab\n      selectedPointNode={gameState.playerUI.selectedPointNode}\n      allocatedPointNodeSet={gameState.playerSave.allocatedPointNodeSet}\n      worldGen={gameState.worldGen}\n      playerSave={gameState.playerSave}\n      computed={gameState.computed}\n    />,\n  ];\n  return (\n    <div className={classnames({ App: true, \"force-landscape\": forceRotate })}>\n      <UseGameStateContext.Provider value={[gameState, updaters, fireBatch]}>\n        <PixiComponent originalSetGameState={setGameState} />\n        <Sidebar>\n          <Tabs\n            value={gameState.playerUI.activeTab}\n            labels={tabLabels}\n            onChange={updaters.playerUI.activeTab.getUpdater()}\n          />\n          {tabViews.map((component, i) => {\n            return (\n              <TabContent\n                key={i}\n                showContent={gameState.playerUI.activeTab === i}\n              >\n                {component}\n              </TabContent>\n            );\n          })}\n        </Sidebar>\n      </UseGameStateContext.Provider>\n      <KeyboardControlComponent\n        intent={gameState.intent}\n        updaters={updaters.intent}\n      ></KeyboardControlComponent>\n    </div>\n  );\n}\n\nexport default App;\n","import {\n  GameState,\n  ResourceType,\n} from \"../data/GameState\";\nimport { INTMAX32, squirrel3 } from \"../lib/util/random\";\nimport { UpdaterGeneratorType2 } from \"../lib/util/updaterGenerator\";\n\nexport function createQuest(\n  updaters: UpdaterGeneratorType2<GameState>,\n  // gameState: GameState,\n  // config: QuestFactoryConfig = {}\n) {\n  updaters.playerSave.questsCompleted.enqueueUpdate((prev, prevGameState) => {\n    let next = [...prev];\n    prevGameState.playerSave.activeQuest && next.push(prevGameState.playerSave.activeQuest);\n    return next;\n  });\n  updaters.playerSave.activeQuest.enqueueUpdate((prev, prevGameState) => {\n    const numQuestsCompleted = prevGameState.playerSave.questsCompleted.length;\n    const totalAllocatedNodes = prevGameState.computed.playerResourceNodesAggregated?.size() || 5;\n\n    // const r = Math.floor(Math.random() * 3) as 0 | 1 | 2;\n    // const resource = Object.values(ResourceNontrivialType)[r];\n    const resourceType = ResourceType.Mana0;\n    const currentResourceAmount = prevGameState.computed.playerResourceAmounts?.[resourceType] || 50;\n\n    const historicalAmountPerNode = currentResourceAmount / totalAllocatedNodes; // how much benefit, on average, each node gave\n\n    // we want # of nodes to be quadratic with the # of quests completed\n    const targetNumAllocatedNodes = totalAllocatedNodes + Math.round(Math.sqrt(totalAllocatedNodes) * 3 - 2);\n    const randomScale = (squirrel3(prevGameState.worldGen.seed + numQuestsCompleted) / INTMAX32) * 0.4 + 0.8; // 0.8 - 1.2\n\n    const resourceAmount = Math.round(targetNumAllocatedNodes * historicalAmountPerNode * randomScale);\n    return {\n      resourceType,\n      resourceAmount,\n      description: \"\"\n    };\n  });\n  updaters.playerSave.spSpentThisQuest.enqueueUpdate((prev) => {\n    return 0;\n  });\n  updaters.playerSave.questProgressHistory.enqueueUpdate((prev) => {\n    return [];\n  });\n  updaters.playerSave.questInitialAmount.enqueueUpdate((prev, prevGameState) => {\n    let resourceType = prevGameState.playerSave.activeQuest?.resourceType\n    if (resourceType) {\n      let newAmount = prevGameState.computed.playerResourceAmounts?.[resourceType];\n      return newAmount || prev;\n    }\n    return prev;\n  });\n}\n\n// type QuestFactoryConfig = {};\n// export class QuestFactory {\n//   public config: QuestFactoryConfig;\n// \n//   constructor(config: QuestFactoryConfig) {\n//     this.config = config;\n//   }\n// \n//   public create(\n//     resourceType: ResourceType,\n//     resourceAmount: number,\n//     description: string = \"\"\n//   ): Quest {\n//     // console.log(resourceAmount);\n//     return {\n//       index,\n//       description,\n//       resourceType,\n//       resourceAmount,\n//     };\n//   }\n// }\n// ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import crypto from \"crypto\";\n\n/**\n * NOTE(bowei): we use a hash function that is NOT md5 -\n * Either https://github.com/sublee/squirrel3-python/blob/master/squirrel3.py or https://github.com/svaarala/duktape/blob/master/misc/splitmix64.c works fine and is much faster\n * Reference: https://www.youtube.com/watch?v=e4b--cyXEsM or https://www.youtube.com/watch?v=LWFzPP8ZbdU\n * TODO(bowei): port bigint to wasm for faster 64bit operations\n */\n\n// NOTE(bowei): untested\nexport function splitmix64(seed: bigint, i: bigint) {\n    let z: bigint = seed + i * BigInt(\"0x9e3779b97f4a7c15\");\n    z = ( z ^ ( z >> BigInt(30) ) ) * BigInt(\"0xBF58476D1CE4E5B9\");\n    z = ( z ^ ( z >> BigInt(27) ) ) * BigInt(0x94D049BB133111EB);\n    return z ^ ( z >> BigInt(31) );\n}\n\nexport const INTMAX32 = 2 ** 32;\nexport function squirrel3(i: number) {\n  let n = (i + INTMAX32) % INTMAX32;\n    n = Math.imul(n, 0xb5297a4d);\n    n ^= n >>> 8;\n    n += 0x68e31da4;\n    n ^= n << 8;\n    n = Math.imul(n, 0x1b56c4e9);\n    n ^= n >>> 8;\n    return (n + INTMAX32) % INTMAX32;\n}\nexport const PRIME32 = 0x3233f2cd; // not used ; useful for hashing integers; a 32 bit prime\n\n/**\n * Md5 is 16 bytes, or max int of 256 ** 16 = 2 ** 128\n */\nexport class HashState {\n  private seed!: Buffer;\n\n  /**\n   * HashState().step(\"foo\") is equivalent to HashState(\"foo\")\n   */\n  constructor(seed?: string) {\n    const buffer = crypto\n      .createHash(\"md5\")\n      .update((seed || \"\").toString())\n      .digest();\n    this.seed = buffer;\n  }\n\n  public peekRandom(): number {\n    const buffer = crypto.createHash(\"md5\").update(this.seed).digest();\n    return Number(this.bufferToBigInt(buffer) % BigInt(2 ** 32)) % 2 ** 32;\n  }\n\n  // increment the seed linearly by 1\n  public step(numSteps: number = 1) {\n    this.seed = this.bigIntToBuffer(this.bufferToBigInt(this.seed) + BigInt(1));\n  }\n\n  public stepSeed(seed: string) {\n    const buffer = crypto.createHash(\"md5\").update(seed.toString()).digest();\n    this.seed = this.bigIntToBuffer(\n      this.bufferToBigInt(this.seed) + this.bufferToBigInt(buffer)\n    );\n  }\n\n  private bigIntToBuffer(b: bigint): Buffer {\n    let buf = Buffer.alloc(16);\n    let val = b;\n    for (let i = 0; i < 16; i++) {\n      buf[i] = Number(val % BigInt(256));\n      val = val / BigInt(256);\n    }\n    return buf;\n  }\n\n  private bufferToBigInt(b: Buffer): bigint {\n    let val = BigInt(0);\n    for (let i = 0; i < 16; i++) {\n      val = val * BigInt(256) + BigInt(b[i]);\n    }\n    return val;\n  }\n\n  public random(): number {\n    this.step();\n    return this.peekRandom();\n  }\n}\n"],"sourceRoot":""}